/* This file is generated by arpcc, do not change manually! */
//=============================================================
public abstract class Client2ServerStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void openvip(VipLevel vl)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)vl;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void requestPhoto()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void ping()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void sessionlogin(COM_LoginInfo info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void login(COM_LoginInfo info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void createPlayer(string playername,byte playerTmpId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			bin.ProtocolWriter.writeType(w, playerTmpId);
		}
		methodEnd();
	}
	public void deletePlayer(string playername)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		methodEnd();
	}
	public void enterGame(uint playerInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 7;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerInstId);
		}
		methodEnd();
	}
	public void requestBag()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 8;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestEmployees()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 9;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestStorage(StorageType tp)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 10;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)tp;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void requestAchievement()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 11;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void initminig()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 12;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestCompound()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 13;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void move(float x,float z)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 14;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, x);
		}
		{
			bin.ProtocolWriter.writeType(w, z);
		}
		methodEnd();
	}
	public void moveToNpc(int npcid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 15;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcid);
		}
		methodEnd();
	}
	public void moveToNpc2(NpcType type)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 16;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void moveToZone(int sceneId,int zoneId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 17;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		{
			bin.ProtocolWriter.writeType(w, zoneId);
		}
		methodEnd();
	}
	public void autoBattle()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 18;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void stopAutoBattle()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 19;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void stopMove()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 20;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void exitCopy()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 21;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void transforScene(int sceneId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 22;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		methodEnd();
	}
	public void sceneLoaded()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 23;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void querySimplePlayerInst(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 24;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void logout()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 25;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void changProp(uint guid,COM_Addprop[] props)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 26;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guid);
		}
		{
			uint __len__ = (props == null)?0:(uint)props.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				props[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void learnSkill(uint skid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 27;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, skid);
		}
		methodEnd();
	}
	public void babyLearnSkill(uint instId,uint oldSkId,uint newSkId,uint newSkLv)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 28;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			bin.ProtocolWriter.writeType(w, oldSkId);
		}
		{
			bin.ProtocolWriter.writeType(w, newSkId);
		}
		{
			bin.ProtocolWriter.writeType(w, newSkLv);
		}
		methodEnd();
	}
	public void forgetSkill(uint skid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 29;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, skid);
		}
		methodEnd();
	}
	public void syncOrder(COM_Order order)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 30;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			order.serialize(w);
		}
		methodEnd();
	}
	public void syncOrderTimeout()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 31;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void sendChat(COM_Chat content,string targetName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 32;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			content.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, targetName);
		}
		methodEnd();
	}
	public void requestAudio(int audioId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 33;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, audioId);
		}
		methodEnd();
	}
	public void publishItemInst(ItemContainerType type,uint itemInstId,ChatKind chatType,string playerName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 34;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, itemInstId);
		}
		{
			byte __e__ = (byte)chatType;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, playerName);
		}
		methodEnd();
	}
	public void queryItemInst(int showId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 35;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, showId);
		}
		methodEnd();
	}
	public void publishbabyInst(ChatKind type,uint babyInstId,string playerName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 36;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, babyInstId);
		}
		{
			bin.ProtocolWriter.writeType(w, playerName);
		}
		methodEnd();
	}
	public void querybabyInst(int showId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 37;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, showId);
		}
		methodEnd();
	}
	public void useItem(uint slot,uint target,uint stack)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 38;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, slot);
		}
		{
			bin.ProtocolWriter.writeType(w, target);
		}
		{
			bin.ProtocolWriter.writeType(w, stack);
		}
		methodEnd();
	}
	public void wearEquipment(uint target,uint itemInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 39;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, target);
		}
		{
			bin.ProtocolWriter.writeType(w, itemInstId);
		}
		methodEnd();
	}
	public void delEquipment(uint target,uint itemInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 40;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, target);
		}
		{
			bin.ProtocolWriter.writeType(w, itemInstId);
		}
		methodEnd();
	}
	public void setPlayerFront(bool isFront)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 41;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isFront);
		}
		methodEnd();
	}
	public void setBattlebaby(uint babyID,bool isBattle)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 42;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, babyID);
		}
		{
			bin.ProtocolWriter.writeType(w, isBattle);
		}
		methodEnd();
	}
	public void changeBabyName(uint babyID,string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 43;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, babyID);
		}
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void intensifyBaby(uint babyid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 44;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, babyid);
		}
		methodEnd();
	}
	public void setBattleEmp(uint empID,EmployeesBattleGroup group,bool isBattle)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 45;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, empID);
		}
		{
			byte __e__ = (byte)group;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, isBattle);
		}
		methodEnd();
	}
	public void changeEmpBattleGroup(EmployeesBattleGroup group)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 46;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)group;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void requestEvolve(uint empInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 47;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, empInstId);
		}
		methodEnd();
	}
	public void requestUpStar(uint empInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 48;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, empInstId);
		}
		methodEnd();
	}
	public void requestDelEmp(uint empInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 49;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, empInstId);
		}
		methodEnd();
	}
	public void delEmployee(uint[] emps)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 50;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (emps == null)?0:(uint)emps.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, emps[i]);
			}
		}
		methodEnd();
	}
	public void onekeyDelEmp()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 51;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void delEmployeeSoul(uint instid,uint soulNum)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 52;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		{
			bin.ProtocolWriter.writeType(w, soulNum);
		}
		methodEnd();
	}
	public void sortBagItem()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 53;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void sellBagItem(uint instId,uint stack)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 54;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			bin.ProtocolWriter.writeType(w, stack);
		}
		methodEnd();
	}
	public void depositItemToStorage(uint instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 55;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void depositBabyToStorage(uint instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 56;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void storageItemToBag(uint instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 57;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void storageBabyToPlayer(uint instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 58;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void sortStorage(StorageType tp)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 59;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)tp;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void delStorageBaby(uint instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 60;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void jointLobby()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 61;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void exitLobby()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 62;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void createTeam(COM_CreateTeamInfo cti)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 63;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			cti.serialize(w);
		}
		methodEnd();
	}
	public void changeTeam(COM_CreateTeamInfo info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 64;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void kickTeamMember(uint uuid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 65;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, uuid);
		}
		methodEnd();
	}
	public void changeTeamLeader(uint uuid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 66;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, uuid);
		}
		methodEnd();
	}
	public void joinTeam(uint teamId,string pwd)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 67;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, teamId);
		}
		{
			bin.ProtocolWriter.writeType(w, pwd);
		}
		methodEnd();
	}
	public void exitTeam()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 68;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void changeTeamPassword(string pwd)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 69;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, pwd);
		}
		methodEnd();
	}
	public void joinTeamRoom()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 70;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void inviteTeamMember(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 71;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void isjoinTeam(uint teamId,bool isFlag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 72;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, teamId);
		}
		{
			bin.ProtocolWriter.writeType(w, isFlag);
		}
		methodEnd();
	}
	public void leaveTeam()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 73;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void backTeam()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 74;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void refuseBackTeam()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 75;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void teamCallMember(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 76;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void requestJoinTeam(string targetName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 77;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, targetName);
		}
		methodEnd();
	}
	public void ratifyJoinTeam(string sendName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 78;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sendName);
		}
		methodEnd();
	}
	public void drawLotteryBox(BoxType type,bool isFree)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 79;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, isFree);
		}
		methodEnd();
	}
	public void acceptQuest(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 80;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void submitQuest(int npcId,int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 81;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcId);
		}
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void giveupQuest(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 82;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void requestContactInfoById(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 83;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void requestContactInfoByName(string instName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 84;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instName);
		}
		methodEnd();
	}
	public void requestFriendList()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 85;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void addFriend(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 86;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void delFriend(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 87;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void addBlacklist(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 88;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void delBlacklist(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 89;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void requestReferrFriend()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 90;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void mining(int gatherId,int times)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 91;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, gatherId);
		}
		{
			bin.ProtocolWriter.writeType(w, times);
		}
		methodEnd();
	}
	public void compoundItem(int itemId,int gemId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 92;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, itemId);
		}
		{
			bin.ProtocolWriter.writeType(w, gemId);
		}
		methodEnd();
	}
	public void bagItemSplit(int instId,int splitNum)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 93;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			bin.ProtocolWriter.writeType(w, splitNum);
		}
		methodEnd();
	}
	public void requestChallenge(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 94;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void requestRival()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 95;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestMySelfJJCData()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 96;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestCheckMsg(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 97;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void requestMyAllbattleMsg()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 98;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestJJCRank()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 99;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestLevelRank()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 100;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestBabyRank()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 101;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestEmpRank()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 102;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestPlayerFFRank()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 103;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void queryOnlinePlayerbyName(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 104;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void queryPlayerbyName(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 105;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void queryBaby(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 106;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void queryEmployee(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 107;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void guideFinish(ulong guideIdx)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 108;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guideIdx);
		}
		methodEnd();
	}
	public void enterBattle(int battleId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 109;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, battleId);
		}
		methodEnd();
	}
	public void shopBuyItem(int id,int num)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 110;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, id);
		}
		{
			bin.ProtocolWriter.writeType(w, num);
		}
		methodEnd();
	}
	public void getFirstRechargeItem()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 111;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestLevelGift(int level)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 112;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		methodEnd();
	}
	public void setCurrentTitle(int title)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 113;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, title);
		}
		methodEnd();
	}
	public void openBuyBox()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 114;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestAchaward(int achId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 115;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, achId);
		}
		methodEnd();
	}
	public void sign(int index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 116;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void requestSignupReward7()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 117;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestSignupReward14()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 118;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestSignupReward28()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 119;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestActivityReward(int index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 120;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void resetHundredTier()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 121;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void enterHundredScene(int level)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 122;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		methodEnd();
	}
	public void delBaby(int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 123;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void resetBaby(int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 124;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void resetBabyProp(int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 125;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void remouldBaby(int instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 126;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void empSkillLevelUp(uint empId,int skillId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 127;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, empId);
		}
		{
			bin.ProtocolWriter.writeType(w, skillId);
		}
		methodEnd();
	}
	public void setOpenDoubleTimeFlag(bool isFlag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 128;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isFlag);
		}
		methodEnd();
	}
	public void talkedNpc(int npcId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 129;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcId);
		}
		methodEnd();
	}
	public void jjcBattleGo(uint id)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 130;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, id);
		}
		methodEnd();
	}
	public void requestMyJJCTeamMsg()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 131;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void startMatching()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 132;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void stopMatching()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 133;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void exitPvpJJC()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 134;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void joinPvpLobby()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 135;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void exitPvpLobby()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 136;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestpvprank()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 137;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void joinWarriorchoose()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 138;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void warriorStart()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 139;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void warriorStop()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 140;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void sendMail(string playername,string title,string content)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 141;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			bin.ProtocolWriter.writeType(w, title);
		}
		{
			bin.ProtocolWriter.writeType(w, content);
		}
		methodEnd();
	}
	public void readMail(int mailId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 142;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, mailId);
		}
		methodEnd();
	}
	public void delMail(int mailId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 143;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, mailId);
		}
		methodEnd();
	}
	public void getMailItem(int mailId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 144;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, mailId);
		}
		methodEnd();
	}
	public void requestState()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 145;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void createGuild(string guildName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 146;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guildName);
		}
		methodEnd();
	}
	public void delGuild(uint guildId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 147;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guildId);
		}
		methodEnd();
	}
	public void requestJoinGuild(uint guid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 148;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guid);
		}
		methodEnd();
	}
	public void leaveGuild()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 149;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void kickOut(int guid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 150;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guid);
		}
		methodEnd();
	}
	public void acceptRequestGuild(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 151;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void refuseRequestGuild(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 152;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void changeMemberPosition(int targetId,GuildJob job)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 153;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, targetId);
		}
		{
			byte __e__ = (byte)job;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void transferPremier(int targetId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 154;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, targetId);
		}
		methodEnd();
	}
	public void changeGuildNotice(string notice)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 155;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, notice);
		}
		methodEnd();
	}
	public void queryGuildList(short page)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 156;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, page);
		}
		methodEnd();
	}
	public void inviteJoinGuild(string playerName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 157;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerName);
		}
		methodEnd();
	}
	public void respondInviteJoinGuild(string sendName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 158;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sendName);
		}
		methodEnd();
	}
	public void buyGuildItem(int tableId,int times)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 159;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, tableId);
		}
		{
			bin.ProtocolWriter.writeType(w, times);
		}
		methodEnd();
	}
	public void entryGuildBattle()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 160;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void transforGuildBattleScene()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 161;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void addGuildMoney(int money)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 162;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, money);
		}
		methodEnd();
	}
	public void updateGuildBuiling(GuildBuildingType gbt)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 163;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)gbt;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void refreshGuildShop()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 164;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void levelupGuildSkill(int skId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 165;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, skId);
		}
		methodEnd();
	}
	public void presentGuildItem(int num)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 166;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, num);
		}
		methodEnd();
	}
	public void progenitusAddExp(int monsterId,bool isSuper)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 167;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, monsterId);
		}
		{
			bin.ProtocolWriter.writeType(w, isSuper);
		}
		methodEnd();
	}
	public void setProgenitusPosition(int mId,int pos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 168;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, mId);
		}
		{
			bin.ProtocolWriter.writeType(w, pos);
		}
		methodEnd();
	}
	public void guildsign()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 169;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void fetchSelling(COM_SearchContext context)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 170;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			context.serialize(w);
		}
		methodEnd();
	}
	public void fetchSelling2(COM_SearchContext context)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 171;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			context.serialize(w);
		}
		methodEnd();
	}
	public void selling(int iteminstid,int babyinstid,int price)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 172;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, iteminstid);
		}
		{
			bin.ProtocolWriter.writeType(w, babyinstid);
		}
		{
			bin.ProtocolWriter.writeType(w, price);
		}
		methodEnd();
	}
	public void unselling(int sellid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 173;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sellid);
		}
		methodEnd();
	}
	public void buy(int sellid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 174;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sellid);
		}
		methodEnd();
	}
	public void fixItem(int instId,FixType type)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 175;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void fixAllItem(uint[] items,FixType type)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 176;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, items[i]);
			}
		}
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void makeDebirsItem(int instId,int num)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 177;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			bin.ProtocolWriter.writeType(w, num);
		}
		methodEnd();
	}
	public void levelUpMagicItem(uint[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 178;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, items[i]);
			}
		}
		methodEnd();
	}
	public void tupoMagicItem(int level)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 179;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		methodEnd();
	}
	public void changeMagicJob(JobType job)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 180;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)job;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void requestPk(uint playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 181;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void uiBehavior(UIBehaviorType type)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 182;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void openZhuanpan()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 183;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void zhuanpanGo(uint counter)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 184;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, counter);
		}
		methodEnd();
	}
	public void redemptionSpree(string code)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 185;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, code);
		}
		methodEnd();
	}
	public void sceneFilter(SceneFilterType[] sfType)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 186;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (sfType == null)?0:(uint)sfType.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, (byte)sfType[i]);
			}
		}
		methodEnd();
	}
	public void sendExamAnswer(uint questionId,byte answer)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 187;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questionId);
		}
		{
			bin.ProtocolWriter.writeType(w, answer);
		}
		methodEnd();
	}
	public void sendwishing(COM_Wishing wish)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 188;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			wish.serialize(w);
		}
		methodEnd();
	}
	public void requestWish()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 189;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void leaderCloseDialog()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 190;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestOnlineReward(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 191;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void requestFundReward(uint level)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 192;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		methodEnd();
	}
	public void openCard(ushort index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 193;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void resetCard()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 194;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void hotRoleBuy()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 195;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestSevenReward(uint qid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 196;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, qid);
		}
		methodEnd();
	}
	public void vipreward()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 197;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestChargeTotalSingleReward(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 198;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void requestChargeTotalReward(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 199;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void requestChargeEverySingleReward(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 200;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void requestChargeEveryReward(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 201;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void requestLoginTotal(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 202;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void buyDiscountStoreSingle(int itemId,int itemStack)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 203;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, itemId);
		}
		{
			bin.ProtocolWriter.writeType(w, itemStack);
		}
		methodEnd();
	}
	public void buyDiscountStore(int itemId,int itemStack)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 204;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, itemId);
		}
		{
			bin.ProtocolWriter.writeType(w, itemStack);
		}
		methodEnd();
	}
	public void requestEmployeeActivityReward(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 205;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void requestmyselfrechargeleReward(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 206;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void requestEverydayIntegral()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 207;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void buyIntegralItem(uint id,uint num)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 208;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, id);
		}
		{
			bin.ProtocolWriter.writeType(w, num);
		}
		methodEnd();
	}
	public void familyLoseLeader()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 209;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void verificationSMS(string phoneNumber,string code)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 210;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, phoneNumber);
		}
		{
			bin.ProtocolWriter.writeType(w, code);
		}
		methodEnd();
	}
	public void lockItem(int instId,bool isLock)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 211;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			bin.ProtocolWriter.writeType(w, isLock);
		}
		methodEnd();
	}
	public void lockBaby(int instId,bool isLock)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 212;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			bin.ProtocolWriter.writeType(w, isLock);
		}
		methodEnd();
	}
	public void showBaby(int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 213;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void wearFuwen(int itemInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 214;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, itemInstId);
		}
		methodEnd();
	}
	public void takeoffFuwen(int slotId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 215;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, slotId);
		}
		methodEnd();
	}
	public void compFuwen(int itemInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 216;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, itemInstId);
		}
		methodEnd();
	}
	public void requestEmployeeQuest()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 217;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void acceptEmployeeQuest(int questId,int[] employees)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 218;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		{
			uint __len__ = (employees == null)?0:(uint)employees.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, employees[i]);
			}
		}
		methodEnd();
	}
	public void submitEmployeeQuest(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 219;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void crystalUpLevel()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 220;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void resetCrystalProp(int[] locklist)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 221;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (locklist == null)?0:(uint)locklist.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, locklist[i]);
			}
		}
		methodEnd();
	}
	public void magicItemOneKeyLevel()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 222;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void submitQuest2(int npcId,int questId,int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 223;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcId);
		}
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
}
//=============================================================
public interface Client2ServerProxy
{
	bool openvip(VipLevel vl);
	bool requestPhoto();
	bool ping();
	bool sessionlogin(COM_LoginInfo info);
	bool login(COM_LoginInfo info);
	bool createPlayer(string playername,byte playerTmpId);
	bool deletePlayer(string playername);
	bool enterGame(uint playerInstId);
	bool requestBag();
	bool requestEmployees();
	bool requestStorage(StorageType tp);
	bool requestAchievement();
	bool initminig();
	bool requestCompound();
	bool move(float x,float z);
	bool moveToNpc(int npcid);
	bool moveToNpc2(NpcType type);
	bool moveToZone(int sceneId,int zoneId);
	bool autoBattle();
	bool stopAutoBattle();
	bool stopMove();
	bool exitCopy();
	bool transforScene(int sceneId);
	bool sceneLoaded();
	bool querySimplePlayerInst(uint instId);
	bool logout();
	bool changProp(uint guid,COM_Addprop[] props);
	bool learnSkill(uint skid);
	bool babyLearnSkill(uint instId,uint oldSkId,uint newSkId,uint newSkLv);
	bool forgetSkill(uint skid);
	bool syncOrder(COM_Order order);
	bool syncOrderTimeout();
	bool sendChat(COM_Chat content,string targetName);
	bool requestAudio(int audioId);
	bool publishItemInst(ItemContainerType type,uint itemInstId,ChatKind chatType,string playerName);
	bool queryItemInst(int showId);
	bool publishbabyInst(ChatKind type,uint babyInstId,string playerName);
	bool querybabyInst(int showId);
	bool useItem(uint slot,uint target,uint stack);
	bool wearEquipment(uint target,uint itemInstId);
	bool delEquipment(uint target,uint itemInstId);
	bool setPlayerFront(bool isFront);
	bool setBattlebaby(uint babyID,bool isBattle);
	bool changeBabyName(uint babyID,string name);
	bool intensifyBaby(uint babyid);
	bool setBattleEmp(uint empID,EmployeesBattleGroup group,bool isBattle);
	bool changeEmpBattleGroup(EmployeesBattleGroup group);
	bool requestEvolve(uint empInstId);
	bool requestUpStar(uint empInstId);
	bool requestDelEmp(uint empInstId);
	bool delEmployee(uint[] emps);
	bool onekeyDelEmp();
	bool delEmployeeSoul(uint instid,uint soulNum);
	bool sortBagItem();
	bool sellBagItem(uint instId,uint stack);
	bool depositItemToStorage(uint instid);
	bool depositBabyToStorage(uint instid);
	bool storageItemToBag(uint instid);
	bool storageBabyToPlayer(uint instid);
	bool sortStorage(StorageType tp);
	bool delStorageBaby(uint instid);
	bool jointLobby();
	bool exitLobby();
	bool createTeam(COM_CreateTeamInfo cti);
	bool changeTeam(COM_CreateTeamInfo info);
	bool kickTeamMember(uint uuid);
	bool changeTeamLeader(uint uuid);
	bool joinTeam(uint teamId,string pwd);
	bool exitTeam();
	bool changeTeamPassword(string pwd);
	bool joinTeamRoom();
	bool inviteTeamMember(string name);
	bool isjoinTeam(uint teamId,bool isFlag);
	bool leaveTeam();
	bool backTeam();
	bool refuseBackTeam();
	bool teamCallMember(int playerId);
	bool requestJoinTeam(string targetName);
	bool ratifyJoinTeam(string sendName);
	bool drawLotteryBox(BoxType type,bool isFree);
	bool acceptQuest(int questId);
	bool submitQuest(int npcId,int questId);
	bool giveupQuest(int questId);
	bool requestContactInfoById(uint instId);
	bool requestContactInfoByName(string instName);
	bool requestFriendList();
	bool addFriend(uint instId);
	bool delFriend(uint instId);
	bool addBlacklist(uint instId);
	bool delBlacklist(uint instId);
	bool requestReferrFriend();
	bool mining(int gatherId,int times);
	bool compoundItem(int itemId,int gemId);
	bool bagItemSplit(int instId,int splitNum);
	bool requestChallenge(string name);
	bool requestRival();
	bool requestMySelfJJCData();
	bool requestCheckMsg(string name);
	bool requestMyAllbattleMsg();
	bool requestJJCRank();
	bool requestLevelRank();
	bool requestBabyRank();
	bool requestEmpRank();
	bool requestPlayerFFRank();
	bool queryOnlinePlayerbyName(string name);
	bool queryPlayerbyName(string name);
	bool queryBaby(uint instId);
	bool queryEmployee(uint instId);
	bool guideFinish(ulong guideIdx);
	bool enterBattle(int battleId);
	bool shopBuyItem(int id,int num);
	bool getFirstRechargeItem();
	bool requestLevelGift(int level);
	bool setCurrentTitle(int title);
	bool openBuyBox();
	bool requestAchaward(int achId);
	bool sign(int index);
	bool requestSignupReward7();
	bool requestSignupReward14();
	bool requestSignupReward28();
	bool requestActivityReward(int index);
	bool resetHundredTier();
	bool enterHundredScene(int level);
	bool delBaby(int instId);
	bool resetBaby(int instId);
	bool resetBabyProp(int instId);
	bool remouldBaby(int instid);
	bool empSkillLevelUp(uint empId,int skillId);
	bool setOpenDoubleTimeFlag(bool isFlag);
	bool talkedNpc(int npcId);
	bool jjcBattleGo(uint id);
	bool requestMyJJCTeamMsg();
	bool startMatching();
	bool stopMatching();
	bool exitPvpJJC();
	bool joinPvpLobby();
	bool exitPvpLobby();
	bool requestpvprank();
	bool joinWarriorchoose();
	bool warriorStart();
	bool warriorStop();
	bool sendMail(string playername,string title,string content);
	bool readMail(int mailId);
	bool delMail(int mailId);
	bool getMailItem(int mailId);
	bool requestState();
	bool createGuild(string guildName);
	bool delGuild(uint guildId);
	bool requestJoinGuild(uint guid);
	bool leaveGuild();
	bool kickOut(int guid);
	bool acceptRequestGuild(int playerId);
	bool refuseRequestGuild(int playerId);
	bool changeMemberPosition(int targetId,GuildJob job);
	bool transferPremier(int targetId);
	bool changeGuildNotice(string notice);
	bool queryGuildList(short page);
	bool inviteJoinGuild(string playerName);
	bool respondInviteJoinGuild(string sendName);
	bool buyGuildItem(int tableId,int times);
	bool entryGuildBattle();
	bool transforGuildBattleScene();
	bool addGuildMoney(int money);
	bool updateGuildBuiling(GuildBuildingType gbt);
	bool refreshGuildShop();
	bool levelupGuildSkill(int skId);
	bool presentGuildItem(int num);
	bool progenitusAddExp(int monsterId,bool isSuper);
	bool setProgenitusPosition(int mId,int pos);
	bool guildsign();
	bool fetchSelling(COM_SearchContext context);
	bool fetchSelling2(COM_SearchContext context);
	bool selling(int iteminstid,int babyinstid,int price);
	bool unselling(int sellid);
	bool buy(int sellid);
	bool fixItem(int instId,FixType type);
	bool fixAllItem(uint[] items,FixType type);
	bool makeDebirsItem(int instId,int num);
	bool levelUpMagicItem(uint[] items);
	bool tupoMagicItem(int level);
	bool changeMagicJob(JobType job);
	bool requestPk(uint playerId);
	bool uiBehavior(UIBehaviorType type);
	bool openZhuanpan();
	bool zhuanpanGo(uint counter);
	bool redemptionSpree(string code);
	bool sceneFilter(SceneFilterType[] sfType);
	bool sendExamAnswer(uint questionId,byte answer);
	bool sendwishing(COM_Wishing wish);
	bool requestWish();
	bool leaderCloseDialog();
	bool requestOnlineReward(uint index);
	bool requestFundReward(uint level);
	bool openCard(ushort index);
	bool resetCard();
	bool hotRoleBuy();
	bool requestSevenReward(uint qid);
	bool vipreward();
	bool requestChargeTotalSingleReward(uint index);
	bool requestChargeTotalReward(uint index);
	bool requestChargeEverySingleReward(uint index);
	bool requestChargeEveryReward(uint index);
	bool requestLoginTotal(uint index);
	bool buyDiscountStoreSingle(int itemId,int itemStack);
	bool buyDiscountStore(int itemId,int itemStack);
	bool requestEmployeeActivityReward(uint index);
	bool requestmyselfrechargeleReward(uint index);
	bool requestEverydayIntegral();
	bool buyIntegralItem(uint id,uint num);
	bool familyLoseLeader();
	bool verificationSMS(string phoneNumber,string code);
	bool lockItem(int instId,bool isLock);
	bool lockBaby(int instId,bool isLock);
	bool showBaby(int instId);
	bool wearFuwen(int itemInstId);
	bool takeoffFuwen(int slotId);
	bool compFuwen(int itemInstId);
	bool requestEmployeeQuest();
	bool acceptEmployeeQuest(int questId,int[] employees);
	bool submitEmployeeQuest(int questId);
	bool crystalUpLevel();
	bool resetCrystalProp(int[] locklist);
	bool magicItemOneKeyLevel();
	bool submitQuest2(int npcId,int questId,int instId);
}
//=============================================================
public static class Client2ServerDispatcher
{
	public static bool openvip(bin.IReader __r__, Client2ServerProxy __p__)
	{
		VipLevel vl;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 4) return false;
			vl = (VipLevel)__e__;
		}
		return __p__.openvip(vl);
	}
	public static bool requestPhoto(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestPhoto();
	}
	public static bool ping(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.ping();
	}
	public static bool sessionlogin(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_LoginInfo info = new COM_LoginInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.sessionlogin(info);
	}
	public static bool login(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_LoginInfo info = new COM_LoginInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.login(info);
	}
	public static bool createPlayer(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string playername;
		byte playerTmpId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out playerTmpId)) return false;
		}
		return __p__.createPlayer(playername,playerTmpId);
	}
	public static bool deletePlayer(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string playername;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		return __p__.deletePlayer(playername);
	}
	public static bool enterGame(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint playerInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerInstId)) return false;
		}
		return __p__.enterGame(playerInstId);
	}
	public static bool requestBag(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestBag();
	}
	public static bool requestEmployees(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestEmployees();
	}
	public static bool requestStorage(bin.IReader __r__, Client2ServerProxy __p__)
	{
		StorageType tp;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 2) return false;
			tp = (StorageType)__e__;
		}
		return __p__.requestStorage(tp);
	}
	public static bool requestAchievement(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestAchievement();
	}
	public static bool initminig(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.initminig();
	}
	public static bool requestCompound(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestCompound();
	}
	public static bool move(bin.IReader __r__, Client2ServerProxy __p__)
	{
		float x;
		float z;
		{
			if(!bin.ProtocolReader.readType(__r__, out x)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out z)) return false;
		}
		return __p__.move(x,z);
	}
	public static bool moveToNpc(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int npcid;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcid)) return false;
		}
		return __p__.moveToNpc(npcid);
	}
	public static bool moveToNpc2(bin.IReader __r__, Client2ServerProxy __p__)
	{
		NpcType type;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 11) return false;
			type = (NpcType)__e__;
		}
		return __p__.moveToNpc2(type);
	}
	public static bool moveToZone(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int sceneId;
		int zoneId;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out zoneId)) return false;
		}
		return __p__.moveToZone(sceneId,zoneId);
	}
	public static bool autoBattle(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.autoBattle();
	}
	public static bool stopAutoBattle(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.stopAutoBattle();
	}
	public static bool stopMove(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.stopMove();
	}
	public static bool exitCopy(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.exitCopy();
	}
	public static bool transforScene(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int sceneId;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		return __p__.transforScene(sceneId);
	}
	public static bool sceneLoaded(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.sceneLoaded();
	}
	public static bool querySimplePlayerInst(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.querySimplePlayerInst(instId);
	}
	public static bool logout(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.logout();
	}
	public static bool changProp(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint guid;
		COM_Addprop[] props;
		{
			if(!bin.ProtocolReader.readType(__r__, out guid)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			props = new COM_Addprop[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				props[i] = new COM_Addprop();
				if(!props[i].deserialize(__r__)) return false;
			}
		}
		return __p__.changProp(guid,props);
	}
	public static bool learnSkill(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint skid;
		{
			if(!bin.ProtocolReader.readType(__r__, out skid)) return false;
		}
		return __p__.learnSkill(skid);
	}
	public static bool babyLearnSkill(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		uint oldSkId;
		uint newSkId;
		uint newSkLv;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out oldSkId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out newSkId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out newSkLv)) return false;
		}
		return __p__.babyLearnSkill(instId,oldSkId,newSkId,newSkLv);
	}
	public static bool forgetSkill(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint skid;
		{
			if(!bin.ProtocolReader.readType(__r__, out skid)) return false;
		}
		return __p__.forgetSkill(skid);
	}
	public static bool syncOrder(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_Order order = new COM_Order();
		{
			if(!order.deserialize(__r__)) return false;
		}
		return __p__.syncOrder(order);
	}
	public static bool syncOrderTimeout(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.syncOrderTimeout();
	}
	public static bool sendChat(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_Chat content = new COM_Chat();
		string targetName;
		{
			if(!content.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out targetName, 65535)) return false;
		}
		return __p__.sendChat(content,targetName);
	}
	public static bool requestAudio(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int audioId;
		{
			if(!bin.ProtocolReader.readType(__r__, out audioId)) return false;
		}
		return __p__.requestAudio(audioId);
	}
	public static bool publishItemInst(bin.IReader __r__, Client2ServerProxy __p__)
	{
		ItemContainerType type;
		uint itemInstId;
		ChatKind chatType;
		string playerName;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 2) return false;
			type = (ItemContainerType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itemInstId)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 8) return false;
			chatType = (ChatKind)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out playerName, 65535)) return false;
		}
		return __p__.publishItemInst(type,itemInstId,chatType,playerName);
	}
	public static bool queryItemInst(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int showId;
		{
			if(!bin.ProtocolReader.readType(__r__, out showId)) return false;
		}
		return __p__.queryItemInst(showId);
	}
	public static bool publishbabyInst(bin.IReader __r__, Client2ServerProxy __p__)
	{
		ChatKind type;
		uint babyInstId;
		string playerName;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 8) return false;
			type = (ChatKind)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out babyInstId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out playerName, 65535)) return false;
		}
		return __p__.publishbabyInst(type,babyInstId,playerName);
	}
	public static bool querybabyInst(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int showId;
		{
			if(!bin.ProtocolReader.readType(__r__, out showId)) return false;
		}
		return __p__.querybabyInst(showId);
	}
	public static bool useItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint slot;
		uint target;
		uint stack;
		{
			if(!bin.ProtocolReader.readType(__r__, out slot)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out target)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out stack)) return false;
		}
		return __p__.useItem(slot,target,stack);
	}
	public static bool wearEquipment(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint target;
		uint itemInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out target)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itemInstId)) return false;
		}
		return __p__.wearEquipment(target,itemInstId);
	}
	public static bool delEquipment(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint target;
		uint itemInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out target)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itemInstId)) return false;
		}
		return __p__.delEquipment(target,itemInstId);
	}
	public static bool setPlayerFront(bin.IReader __r__, Client2ServerProxy __p__)
	{
		bool isFront;
		{
			if(!bin.ProtocolReader.readType(__r__, out isFront)) return false;
		}
		return __p__.setPlayerFront(isFront);
	}
	public static bool setBattlebaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint babyID;
		bool isBattle;
		{
			if(!bin.ProtocolReader.readType(__r__, out babyID)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isBattle)) return false;
		}
		return __p__.setBattlebaby(babyID,isBattle);
	}
	public static bool changeBabyName(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint babyID;
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out babyID)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.changeBabyName(babyID,name);
	}
	public static bool intensifyBaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint babyid;
		{
			if(!bin.ProtocolReader.readType(__r__, out babyid)) return false;
		}
		return __p__.intensifyBaby(babyid);
	}
	public static bool setBattleEmp(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint empID;
		EmployeesBattleGroup group;
		bool isBattle;
		{
			if(!bin.ProtocolReader.readType(__r__, out empID)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 5) return false;
			group = (EmployeesBattleGroup)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isBattle)) return false;
		}
		return __p__.setBattleEmp(empID,group,isBattle);
	}
	public static bool changeEmpBattleGroup(bin.IReader __r__, Client2ServerProxy __p__)
	{
		EmployeesBattleGroup group;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 5) return false;
			group = (EmployeesBattleGroup)__e__;
		}
		return __p__.changeEmpBattleGroup(group);
	}
	public static bool requestEvolve(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint empInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out empInstId)) return false;
		}
		return __p__.requestEvolve(empInstId);
	}
	public static bool requestUpStar(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint empInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out empInstId)) return false;
		}
		return __p__.requestUpStar(empInstId);
	}
	public static bool requestDelEmp(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint empInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out empInstId)) return false;
		}
		return __p__.requestDelEmp(empInstId);
	}
	public static bool delEmployee(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint[] emps;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			emps = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out emps[i])) return false;
			}
		}
		return __p__.delEmployee(emps);
	}
	public static bool onekeyDelEmp(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.onekeyDelEmp();
	}
	public static bool delEmployeeSoul(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instid;
		uint soulNum;
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out soulNum)) return false;
		}
		return __p__.delEmployeeSoul(instid,soulNum);
	}
	public static bool sortBagItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.sortBagItem();
	}
	public static bool sellBagItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		uint stack;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out stack)) return false;
		}
		return __p__.sellBagItem(instId,stack);
	}
	public static bool depositItemToStorage(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.depositItemToStorage(instid);
	}
	public static bool depositBabyToStorage(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.depositBabyToStorage(instid);
	}
	public static bool storageItemToBag(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.storageItemToBag(instid);
	}
	public static bool storageBabyToPlayer(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.storageBabyToPlayer(instid);
	}
	public static bool sortStorage(bin.IReader __r__, Client2ServerProxy __p__)
	{
		StorageType tp;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 2) return false;
			tp = (StorageType)__e__;
		}
		return __p__.sortStorage(tp);
	}
	public static bool delStorageBaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.delStorageBaby(instid);
	}
	public static bool jointLobby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.jointLobby();
	}
	public static bool exitLobby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.exitLobby();
	}
	public static bool createTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_CreateTeamInfo cti = new COM_CreateTeamInfo();
		{
			if(!cti.deserialize(__r__)) return false;
		}
		return __p__.createTeam(cti);
	}
	public static bool changeTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_CreateTeamInfo info = new COM_CreateTeamInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.changeTeam(info);
	}
	public static bool kickTeamMember(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint uuid;
		{
			if(!bin.ProtocolReader.readType(__r__, out uuid)) return false;
		}
		return __p__.kickTeamMember(uuid);
	}
	public static bool changeTeamLeader(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint uuid;
		{
			if(!bin.ProtocolReader.readType(__r__, out uuid)) return false;
		}
		return __p__.changeTeamLeader(uuid);
	}
	public static bool joinTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint teamId;
		string pwd;
		{
			if(!bin.ProtocolReader.readType(__r__, out teamId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out pwd, 65535)) return false;
		}
		return __p__.joinTeam(teamId,pwd);
	}
	public static bool exitTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.exitTeam();
	}
	public static bool changeTeamPassword(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string pwd;
		{
			if(!bin.ProtocolReader.readType(__r__, out pwd, 65535)) return false;
		}
		return __p__.changeTeamPassword(pwd);
	}
	public static bool joinTeamRoom(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.joinTeamRoom();
	}
	public static bool inviteTeamMember(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.inviteTeamMember(name);
	}
	public static bool isjoinTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint teamId;
		bool isFlag;
		{
			if(!bin.ProtocolReader.readType(__r__, out teamId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isFlag)) return false;
		}
		return __p__.isjoinTeam(teamId,isFlag);
	}
	public static bool leaveTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.leaveTeam();
	}
	public static bool backTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.backTeam();
	}
	public static bool refuseBackTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.refuseBackTeam();
	}
	public static bool teamCallMember(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.teamCallMember(playerId);
	}
	public static bool requestJoinTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string targetName;
		{
			if(!bin.ProtocolReader.readType(__r__, out targetName, 65535)) return false;
		}
		return __p__.requestJoinTeam(targetName);
	}
	public static bool ratifyJoinTeam(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string sendName;
		{
			if(!bin.ProtocolReader.readType(__r__, out sendName, 65535)) return false;
		}
		return __p__.ratifyJoinTeam(sendName);
	}
	public static bool drawLotteryBox(bin.IReader __r__, Client2ServerProxy __p__)
	{
		BoxType type;
		bool isFree;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 4) return false;
			type = (BoxType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isFree)) return false;
		}
		return __p__.drawLotteryBox(type,isFree);
	}
	public static bool acceptQuest(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.acceptQuest(questId);
	}
	public static bool submitQuest(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int npcId;
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.submitQuest(npcId,questId);
	}
	public static bool giveupQuest(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.giveupQuest(questId);
	}
	public static bool requestContactInfoById(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.requestContactInfoById(instId);
	}
	public static bool requestContactInfoByName(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string instName;
		{
			if(!bin.ProtocolReader.readType(__r__, out instName, 65535)) return false;
		}
		return __p__.requestContactInfoByName(instName);
	}
	public static bool requestFriendList(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestFriendList();
	}
	public static bool addFriend(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.addFriend(instId);
	}
	public static bool delFriend(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.delFriend(instId);
	}
	public static bool addBlacklist(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.addBlacklist(instId);
	}
	public static bool delBlacklist(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.delBlacklist(instId);
	}
	public static bool requestReferrFriend(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestReferrFriend();
	}
	public static bool mining(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int gatherId;
		int times;
		{
			if(!bin.ProtocolReader.readType(__r__, out gatherId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out times)) return false;
		}
		return __p__.mining(gatherId,times);
	}
	public static bool compoundItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int itemId;
		int gemId;
		{
			if(!bin.ProtocolReader.readType(__r__, out itemId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out gemId)) return false;
		}
		return __p__.compoundItem(itemId,gemId);
	}
	public static bool bagItemSplit(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		int splitNum;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out splitNum)) return false;
		}
		return __p__.bagItemSplit(instId,splitNum);
	}
	public static bool requestChallenge(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.requestChallenge(name);
	}
	public static bool requestRival(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestRival();
	}
	public static bool requestMySelfJJCData(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestMySelfJJCData();
	}
	public static bool requestCheckMsg(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.requestCheckMsg(name);
	}
	public static bool requestMyAllbattleMsg(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestMyAllbattleMsg();
	}
	public static bool requestJJCRank(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestJJCRank();
	}
	public static bool requestLevelRank(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestLevelRank();
	}
	public static bool requestBabyRank(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestBabyRank();
	}
	public static bool requestEmpRank(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestEmpRank();
	}
	public static bool requestPlayerFFRank(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestPlayerFFRank();
	}
	public static bool queryOnlinePlayerbyName(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.queryOnlinePlayerbyName(name);
	}
	public static bool queryPlayerbyName(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.queryPlayerbyName(name);
	}
	public static bool queryBaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.queryBaby(instId);
	}
	public static bool queryEmployee(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.queryEmployee(instId);
	}
	public static bool guideFinish(bin.IReader __r__, Client2ServerProxy __p__)
	{
		ulong guideIdx;
		{
			if(!bin.ProtocolReader.readType(__r__, out guideIdx)) return false;
		}
		return __p__.guideFinish(guideIdx);
	}
	public static bool enterBattle(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int battleId;
		{
			if(!bin.ProtocolReader.readType(__r__, out battleId)) return false;
		}
		return __p__.enterBattle(battleId);
	}
	public static bool shopBuyItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int id;
		int num;
		{
			if(!bin.ProtocolReader.readType(__r__, out id)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out num)) return false;
		}
		return __p__.shopBuyItem(id,num);
	}
	public static bool getFirstRechargeItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.getFirstRechargeItem();
	}
	public static bool requestLevelGift(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int level;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		return __p__.requestLevelGift(level);
	}
	public static bool setCurrentTitle(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int title;
		{
			if(!bin.ProtocolReader.readType(__r__, out title)) return false;
		}
		return __p__.setCurrentTitle(title);
	}
	public static bool openBuyBox(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.openBuyBox();
	}
	public static bool requestAchaward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int achId;
		{
			if(!bin.ProtocolReader.readType(__r__, out achId)) return false;
		}
		return __p__.requestAchaward(achId);
	}
	public static bool sign(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.sign(index);
	}
	public static bool requestSignupReward7(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestSignupReward7();
	}
	public static bool requestSignupReward14(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestSignupReward14();
	}
	public static bool requestSignupReward28(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestSignupReward28();
	}
	public static bool requestActivityReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestActivityReward(index);
	}
	public static bool resetHundredTier(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.resetHundredTier();
	}
	public static bool enterHundredScene(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int level;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		return __p__.enterHundredScene(level);
	}
	public static bool delBaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.delBaby(instId);
	}
	public static bool resetBaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.resetBaby(instId);
	}
	public static bool resetBabyProp(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.resetBabyProp(instId);
	}
	public static bool remouldBaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.remouldBaby(instid);
	}
	public static bool empSkillLevelUp(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint empId;
		int skillId;
		{
			if(!bin.ProtocolReader.readType(__r__, out empId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out skillId)) return false;
		}
		return __p__.empSkillLevelUp(empId,skillId);
	}
	public static bool setOpenDoubleTimeFlag(bin.IReader __r__, Client2ServerProxy __p__)
	{
		bool isFlag;
		{
			if(!bin.ProtocolReader.readType(__r__, out isFlag)) return false;
		}
		return __p__.setOpenDoubleTimeFlag(isFlag);
	}
	public static bool talkedNpc(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int npcId;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcId)) return false;
		}
		return __p__.talkedNpc(npcId);
	}
	public static bool jjcBattleGo(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint id;
		{
			if(!bin.ProtocolReader.readType(__r__, out id)) return false;
		}
		return __p__.jjcBattleGo(id);
	}
	public static bool requestMyJJCTeamMsg(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestMyJJCTeamMsg();
	}
	public static bool startMatching(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.startMatching();
	}
	public static bool stopMatching(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.stopMatching();
	}
	public static bool exitPvpJJC(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.exitPvpJJC();
	}
	public static bool joinPvpLobby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.joinPvpLobby();
	}
	public static bool exitPvpLobby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.exitPvpLobby();
	}
	public static bool requestpvprank(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestpvprank();
	}
	public static bool joinWarriorchoose(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.joinWarriorchoose();
	}
	public static bool warriorStart(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.warriorStart();
	}
	public static bool warriorStop(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.warriorStop();
	}
	public static bool sendMail(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string playername;
		string title;
		string content;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out title, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out content, 65535)) return false;
		}
		return __p__.sendMail(playername,title,content);
	}
	public static bool readMail(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int mailId;
		{
			if(!bin.ProtocolReader.readType(__r__, out mailId)) return false;
		}
		return __p__.readMail(mailId);
	}
	public static bool delMail(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int mailId;
		{
			if(!bin.ProtocolReader.readType(__r__, out mailId)) return false;
		}
		return __p__.delMail(mailId);
	}
	public static bool getMailItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int mailId;
		{
			if(!bin.ProtocolReader.readType(__r__, out mailId)) return false;
		}
		return __p__.getMailItem(mailId);
	}
	public static bool requestState(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestState();
	}
	public static bool createGuild(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string guildName;
		{
			if(!bin.ProtocolReader.readType(__r__, out guildName, 65535)) return false;
		}
		return __p__.createGuild(guildName);
	}
	public static bool delGuild(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint guildId;
		{
			if(!bin.ProtocolReader.readType(__r__, out guildId)) return false;
		}
		return __p__.delGuild(guildId);
	}
	public static bool requestJoinGuild(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint guid;
		{
			if(!bin.ProtocolReader.readType(__r__, out guid)) return false;
		}
		return __p__.requestJoinGuild(guid);
	}
	public static bool leaveGuild(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.leaveGuild();
	}
	public static bool kickOut(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int guid;
		{
			if(!bin.ProtocolReader.readType(__r__, out guid)) return false;
		}
		return __p__.kickOut(guid);
	}
	public static bool acceptRequestGuild(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.acceptRequestGuild(playerId);
	}
	public static bool refuseRequestGuild(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.refuseRequestGuild(playerId);
	}
	public static bool changeMemberPosition(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int targetId;
		GuildJob job;
		{
			if(!bin.ProtocolReader.readType(__r__, out targetId)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 7) return false;
			job = (GuildJob)__e__;
		}
		return __p__.changeMemberPosition(targetId,job);
	}
	public static bool transferPremier(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int targetId;
		{
			if(!bin.ProtocolReader.readType(__r__, out targetId)) return false;
		}
		return __p__.transferPremier(targetId);
	}
	public static bool changeGuildNotice(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string notice;
		{
			if(!bin.ProtocolReader.readType(__r__, out notice, 65535)) return false;
		}
		return __p__.changeGuildNotice(notice);
	}
	public static bool queryGuildList(bin.IReader __r__, Client2ServerProxy __p__)
	{
		short page;
		{
			if(!bin.ProtocolReader.readType(__r__, out page)) return false;
		}
		return __p__.queryGuildList(page);
	}
	public static bool inviteJoinGuild(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string playerName;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerName, 65535)) return false;
		}
		return __p__.inviteJoinGuild(playerName);
	}
	public static bool respondInviteJoinGuild(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string sendName;
		{
			if(!bin.ProtocolReader.readType(__r__, out sendName, 65535)) return false;
		}
		return __p__.respondInviteJoinGuild(sendName);
	}
	public static bool buyGuildItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int tableId;
		int times;
		{
			if(!bin.ProtocolReader.readType(__r__, out tableId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out times)) return false;
		}
		return __p__.buyGuildItem(tableId,times);
	}
	public static bool entryGuildBattle(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.entryGuildBattle();
	}
	public static bool transforGuildBattleScene(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.transforGuildBattleScene();
	}
	public static bool addGuildMoney(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int money;
		{
			if(!bin.ProtocolReader.readType(__r__, out money)) return false;
		}
		return __p__.addGuildMoney(money);
	}
	public static bool updateGuildBuiling(bin.IReader __r__, Client2ServerProxy __p__)
	{
		GuildBuildingType gbt;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 8) return false;
			gbt = (GuildBuildingType)__e__;
		}
		return __p__.updateGuildBuiling(gbt);
	}
	public static bool refreshGuildShop(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.refreshGuildShop();
	}
	public static bool levelupGuildSkill(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int skId;
		{
			if(!bin.ProtocolReader.readType(__r__, out skId)) return false;
		}
		return __p__.levelupGuildSkill(skId);
	}
	public static bool presentGuildItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int num;
		{
			if(!bin.ProtocolReader.readType(__r__, out num)) return false;
		}
		return __p__.presentGuildItem(num);
	}
	public static bool progenitusAddExp(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int monsterId;
		bool isSuper;
		{
			if(!bin.ProtocolReader.readType(__r__, out monsterId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isSuper)) return false;
		}
		return __p__.progenitusAddExp(monsterId,isSuper);
	}
	public static bool setProgenitusPosition(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int mId;
		int pos;
		{
			if(!bin.ProtocolReader.readType(__r__, out mId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out pos)) return false;
		}
		return __p__.setProgenitusPosition(mId,pos);
	}
	public static bool guildsign(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.guildsign();
	}
	public static bool fetchSelling(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_SearchContext context = new COM_SearchContext();
		{
			if(!context.deserialize(__r__)) return false;
		}
		return __p__.fetchSelling(context);
	}
	public static bool fetchSelling2(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_SearchContext context = new COM_SearchContext();
		{
			if(!context.deserialize(__r__)) return false;
		}
		return __p__.fetchSelling2(context);
	}
	public static bool selling(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int iteminstid;
		int babyinstid;
		int price;
		{
			if(!bin.ProtocolReader.readType(__r__, out iteminstid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out babyinstid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out price)) return false;
		}
		return __p__.selling(iteminstid,babyinstid,price);
	}
	public static bool unselling(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int sellid;
		{
			if(!bin.ProtocolReader.readType(__r__, out sellid)) return false;
		}
		return __p__.unselling(sellid);
	}
	public static bool buy(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int sellid;
		{
			if(!bin.ProtocolReader.readType(__r__, out sellid)) return false;
		}
		return __p__.buy(sellid);
	}
	public static bool fixItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		FixType type;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 4) return false;
			type = (FixType)__e__;
		}
		return __p__.fixItem(instId,type);
	}
	public static bool fixAllItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint[] items;
		FixType type;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out items[i])) return false;
			}
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 4) return false;
			type = (FixType)__e__;
		}
		return __p__.fixAllItem(items,type);
	}
	public static bool makeDebirsItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		int num;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out num)) return false;
		}
		return __p__.makeDebirsItem(instId,num);
	}
	public static bool levelUpMagicItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint[] items;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out items[i])) return false;
			}
		}
		return __p__.levelUpMagicItem(items);
	}
	public static bool tupoMagicItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int level;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		return __p__.tupoMagicItem(level);
	}
	public static bool changeMagicJob(bin.IReader __r__, Client2ServerProxy __p__)
	{
		JobType job;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 12) return false;
			job = (JobType)__e__;
		}
		return __p__.changeMagicJob(job);
	}
	public static bool requestPk(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.requestPk(playerId);
	}
	public static bool uiBehavior(bin.IReader __r__, Client2ServerProxy __p__)
	{
		UIBehaviorType type;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 22) return false;
			type = (UIBehaviorType)__e__;
		}
		return __p__.uiBehavior(type);
	}
	public static bool openZhuanpan(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.openZhuanpan();
	}
	public static bool zhuanpanGo(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint counter;
		{
			if(!bin.ProtocolReader.readType(__r__, out counter)) return false;
		}
		return __p__.zhuanpanGo(counter);
	}
	public static bool redemptionSpree(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string code;
		{
			if(!bin.ProtocolReader.readType(__r__, out code, 65535)) return false;
		}
		return __p__.redemptionSpree(code);
	}
	public static bool sceneFilter(bin.IReader __r__, Client2ServerProxy __p__)
	{
		SceneFilterType[] sfType;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			sfType = new SceneFilterType[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				byte __e__;
				if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 6) return false;
				sfType[i] = (SceneFilterType)__e__;
			}
		}
		return __p__.sceneFilter(sfType);
	}
	public static bool sendExamAnswer(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint questionId;
		byte answer;
		{
			if(!bin.ProtocolReader.readType(__r__, out questionId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out answer)) return false;
		}
		return __p__.sendExamAnswer(questionId,answer);
	}
	public static bool sendwishing(bin.IReader __r__, Client2ServerProxy __p__)
	{
		COM_Wishing wish = new COM_Wishing();
		{
			if(!wish.deserialize(__r__)) return false;
		}
		return __p__.sendwishing(wish);
	}
	public static bool requestWish(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestWish();
	}
	public static bool leaderCloseDialog(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.leaderCloseDialog();
	}
	public static bool requestOnlineReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestOnlineReward(index);
	}
	public static bool requestFundReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint level;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		return __p__.requestFundReward(level);
	}
	public static bool openCard(bin.IReader __r__, Client2ServerProxy __p__)
	{
		ushort index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.openCard(index);
	}
	public static bool resetCard(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.resetCard();
	}
	public static bool hotRoleBuy(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.hotRoleBuy();
	}
	public static bool requestSevenReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint qid;
		{
			if(!bin.ProtocolReader.readType(__r__, out qid)) return false;
		}
		return __p__.requestSevenReward(qid);
	}
	public static bool vipreward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.vipreward();
	}
	public static bool requestChargeTotalSingleReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestChargeTotalSingleReward(index);
	}
	public static bool requestChargeTotalReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestChargeTotalReward(index);
	}
	public static bool requestChargeEverySingleReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestChargeEverySingleReward(index);
	}
	public static bool requestChargeEveryReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestChargeEveryReward(index);
	}
	public static bool requestLoginTotal(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestLoginTotal(index);
	}
	public static bool buyDiscountStoreSingle(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int itemId;
		int itemStack;
		{
			if(!bin.ProtocolReader.readType(__r__, out itemId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itemStack)) return false;
		}
		return __p__.buyDiscountStoreSingle(itemId,itemStack);
	}
	public static bool buyDiscountStore(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int itemId;
		int itemStack;
		{
			if(!bin.ProtocolReader.readType(__r__, out itemId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itemStack)) return false;
		}
		return __p__.buyDiscountStore(itemId,itemStack);
	}
	public static bool requestEmployeeActivityReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestEmployeeActivityReward(index);
	}
	public static bool requestmyselfrechargeleReward(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestmyselfrechargeleReward(index);
	}
	public static bool requestEverydayIntegral(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestEverydayIntegral();
	}
	public static bool buyIntegralItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		uint id;
		uint num;
		{
			if(!bin.ProtocolReader.readType(__r__, out id)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out num)) return false;
		}
		return __p__.buyIntegralItem(id,num);
	}
	public static bool familyLoseLeader(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.familyLoseLeader();
	}
	public static bool verificationSMS(bin.IReader __r__, Client2ServerProxy __p__)
	{
		string phoneNumber;
		string code;
		{
			if(!bin.ProtocolReader.readType(__r__, out phoneNumber, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out code, 65535)) return false;
		}
		return __p__.verificationSMS(phoneNumber,code);
	}
	public static bool lockItem(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		bool isLock;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isLock)) return false;
		}
		return __p__.lockItem(instId,isLock);
	}
	public static bool lockBaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		bool isLock;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isLock)) return false;
		}
		return __p__.lockBaby(instId,isLock);
	}
	public static bool showBaby(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.showBaby(instId);
	}
	public static bool wearFuwen(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int itemInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out itemInstId)) return false;
		}
		return __p__.wearFuwen(itemInstId);
	}
	public static bool takeoffFuwen(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int slotId;
		{
			if(!bin.ProtocolReader.readType(__r__, out slotId)) return false;
		}
		return __p__.takeoffFuwen(slotId);
	}
	public static bool compFuwen(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int itemInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out itemInstId)) return false;
		}
		return __p__.compFuwen(itemInstId);
	}
	public static bool requestEmployeeQuest(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.requestEmployeeQuest();
	}
	public static bool acceptEmployeeQuest(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int questId;
		int[] employees;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			employees = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out employees[i])) return false;
			}
		}
		return __p__.acceptEmployeeQuest(questId,employees);
	}
	public static bool submitEmployeeQuest(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.submitEmployeeQuest(questId);
	}
	public static bool crystalUpLevel(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.crystalUpLevel();
	}
	public static bool resetCrystalProp(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int[] locklist;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			locklist = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out locklist[i])) return false;
			}
		}
		return __p__.resetCrystalProp(locklist);
	}
	public static bool magicItemOneKeyLevel(bin.IReader __r__, Client2ServerProxy __p__)
	{
		return __p__.magicItemOneKeyLevel();
	}
	public static bool submitQuest2(bin.IReader __r__, Client2ServerProxy __p__)
	{
		int npcId;
		int questId;
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.submitQuest2(npcId,questId,instId);
	}
	public static bool dispatch(bin.IReader r, Client2ServerProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!Client2ServerDispatcher.openvip(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!Client2ServerDispatcher.requestPhoto(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!Client2ServerDispatcher.ping(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!Client2ServerDispatcher.sessionlogin(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!Client2ServerDispatcher.login(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!Client2ServerDispatcher.createPlayer(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!Client2ServerDispatcher.deletePlayer(r, p)) return false;
			}
			break;
			case 7:
			{
				if(!Client2ServerDispatcher.enterGame(r, p)) return false;
			}
			break;
			case 8:
			{
				if(!Client2ServerDispatcher.requestBag(r, p)) return false;
			}
			break;
			case 9:
			{
				if(!Client2ServerDispatcher.requestEmployees(r, p)) return false;
			}
			break;
			case 10:
			{
				if(!Client2ServerDispatcher.requestStorage(r, p)) return false;
			}
			break;
			case 11:
			{
				if(!Client2ServerDispatcher.requestAchievement(r, p)) return false;
			}
			break;
			case 12:
			{
				if(!Client2ServerDispatcher.initminig(r, p)) return false;
			}
			break;
			case 13:
			{
				if(!Client2ServerDispatcher.requestCompound(r, p)) return false;
			}
			break;
			case 14:
			{
				if(!Client2ServerDispatcher.move(r, p)) return false;
			}
			break;
			case 15:
			{
				if(!Client2ServerDispatcher.moveToNpc(r, p)) return false;
			}
			break;
			case 16:
			{
				if(!Client2ServerDispatcher.moveToNpc2(r, p)) return false;
			}
			break;
			case 17:
			{
				if(!Client2ServerDispatcher.moveToZone(r, p)) return false;
			}
			break;
			case 18:
			{
				if(!Client2ServerDispatcher.autoBattle(r, p)) return false;
			}
			break;
			case 19:
			{
				if(!Client2ServerDispatcher.stopAutoBattle(r, p)) return false;
			}
			break;
			case 20:
			{
				if(!Client2ServerDispatcher.stopMove(r, p)) return false;
			}
			break;
			case 21:
			{
				if(!Client2ServerDispatcher.exitCopy(r, p)) return false;
			}
			break;
			case 22:
			{
				if(!Client2ServerDispatcher.transforScene(r, p)) return false;
			}
			break;
			case 23:
			{
				if(!Client2ServerDispatcher.sceneLoaded(r, p)) return false;
			}
			break;
			case 24:
			{
				if(!Client2ServerDispatcher.querySimplePlayerInst(r, p)) return false;
			}
			break;
			case 25:
			{
				if(!Client2ServerDispatcher.logout(r, p)) return false;
			}
			break;
			case 26:
			{
				if(!Client2ServerDispatcher.changProp(r, p)) return false;
			}
			break;
			case 27:
			{
				if(!Client2ServerDispatcher.learnSkill(r, p)) return false;
			}
			break;
			case 28:
			{
				if(!Client2ServerDispatcher.babyLearnSkill(r, p)) return false;
			}
			break;
			case 29:
			{
				if(!Client2ServerDispatcher.forgetSkill(r, p)) return false;
			}
			break;
			case 30:
			{
				if(!Client2ServerDispatcher.syncOrder(r, p)) return false;
			}
			break;
			case 31:
			{
				if(!Client2ServerDispatcher.syncOrderTimeout(r, p)) return false;
			}
			break;
			case 32:
			{
				if(!Client2ServerDispatcher.sendChat(r, p)) return false;
			}
			break;
			case 33:
			{
				if(!Client2ServerDispatcher.requestAudio(r, p)) return false;
			}
			break;
			case 34:
			{
				if(!Client2ServerDispatcher.publishItemInst(r, p)) return false;
			}
			break;
			case 35:
			{
				if(!Client2ServerDispatcher.queryItemInst(r, p)) return false;
			}
			break;
			case 36:
			{
				if(!Client2ServerDispatcher.publishbabyInst(r, p)) return false;
			}
			break;
			case 37:
			{
				if(!Client2ServerDispatcher.querybabyInst(r, p)) return false;
			}
			break;
			case 38:
			{
				if(!Client2ServerDispatcher.useItem(r, p)) return false;
			}
			break;
			case 39:
			{
				if(!Client2ServerDispatcher.wearEquipment(r, p)) return false;
			}
			break;
			case 40:
			{
				if(!Client2ServerDispatcher.delEquipment(r, p)) return false;
			}
			break;
			case 41:
			{
				if(!Client2ServerDispatcher.setPlayerFront(r, p)) return false;
			}
			break;
			case 42:
			{
				if(!Client2ServerDispatcher.setBattlebaby(r, p)) return false;
			}
			break;
			case 43:
			{
				if(!Client2ServerDispatcher.changeBabyName(r, p)) return false;
			}
			break;
			case 44:
			{
				if(!Client2ServerDispatcher.intensifyBaby(r, p)) return false;
			}
			break;
			case 45:
			{
				if(!Client2ServerDispatcher.setBattleEmp(r, p)) return false;
			}
			break;
			case 46:
			{
				if(!Client2ServerDispatcher.changeEmpBattleGroup(r, p)) return false;
			}
			break;
			case 47:
			{
				if(!Client2ServerDispatcher.requestEvolve(r, p)) return false;
			}
			break;
			case 48:
			{
				if(!Client2ServerDispatcher.requestUpStar(r, p)) return false;
			}
			break;
			case 49:
			{
				if(!Client2ServerDispatcher.requestDelEmp(r, p)) return false;
			}
			break;
			case 50:
			{
				if(!Client2ServerDispatcher.delEmployee(r, p)) return false;
			}
			break;
			case 51:
			{
				if(!Client2ServerDispatcher.onekeyDelEmp(r, p)) return false;
			}
			break;
			case 52:
			{
				if(!Client2ServerDispatcher.delEmployeeSoul(r, p)) return false;
			}
			break;
			case 53:
			{
				if(!Client2ServerDispatcher.sortBagItem(r, p)) return false;
			}
			break;
			case 54:
			{
				if(!Client2ServerDispatcher.sellBagItem(r, p)) return false;
			}
			break;
			case 55:
			{
				if(!Client2ServerDispatcher.depositItemToStorage(r, p)) return false;
			}
			break;
			case 56:
			{
				if(!Client2ServerDispatcher.depositBabyToStorage(r, p)) return false;
			}
			break;
			case 57:
			{
				if(!Client2ServerDispatcher.storageItemToBag(r, p)) return false;
			}
			break;
			case 58:
			{
				if(!Client2ServerDispatcher.storageBabyToPlayer(r, p)) return false;
			}
			break;
			case 59:
			{
				if(!Client2ServerDispatcher.sortStorage(r, p)) return false;
			}
			break;
			case 60:
			{
				if(!Client2ServerDispatcher.delStorageBaby(r, p)) return false;
			}
			break;
			case 61:
			{
				if(!Client2ServerDispatcher.jointLobby(r, p)) return false;
			}
			break;
			case 62:
			{
				if(!Client2ServerDispatcher.exitLobby(r, p)) return false;
			}
			break;
			case 63:
			{
				if(!Client2ServerDispatcher.createTeam(r, p)) return false;
			}
			break;
			case 64:
			{
				if(!Client2ServerDispatcher.changeTeam(r, p)) return false;
			}
			break;
			case 65:
			{
				if(!Client2ServerDispatcher.kickTeamMember(r, p)) return false;
			}
			break;
			case 66:
			{
				if(!Client2ServerDispatcher.changeTeamLeader(r, p)) return false;
			}
			break;
			case 67:
			{
				if(!Client2ServerDispatcher.joinTeam(r, p)) return false;
			}
			break;
			case 68:
			{
				if(!Client2ServerDispatcher.exitTeam(r, p)) return false;
			}
			break;
			case 69:
			{
				if(!Client2ServerDispatcher.changeTeamPassword(r, p)) return false;
			}
			break;
			case 70:
			{
				if(!Client2ServerDispatcher.joinTeamRoom(r, p)) return false;
			}
			break;
			case 71:
			{
				if(!Client2ServerDispatcher.inviteTeamMember(r, p)) return false;
			}
			break;
			case 72:
			{
				if(!Client2ServerDispatcher.isjoinTeam(r, p)) return false;
			}
			break;
			case 73:
			{
				if(!Client2ServerDispatcher.leaveTeam(r, p)) return false;
			}
			break;
			case 74:
			{
				if(!Client2ServerDispatcher.backTeam(r, p)) return false;
			}
			break;
			case 75:
			{
				if(!Client2ServerDispatcher.refuseBackTeam(r, p)) return false;
			}
			break;
			case 76:
			{
				if(!Client2ServerDispatcher.teamCallMember(r, p)) return false;
			}
			break;
			case 77:
			{
				if(!Client2ServerDispatcher.requestJoinTeam(r, p)) return false;
			}
			break;
			case 78:
			{
				if(!Client2ServerDispatcher.ratifyJoinTeam(r, p)) return false;
			}
			break;
			case 79:
			{
				if(!Client2ServerDispatcher.drawLotteryBox(r, p)) return false;
			}
			break;
			case 80:
			{
				if(!Client2ServerDispatcher.acceptQuest(r, p)) return false;
			}
			break;
			case 81:
			{
				if(!Client2ServerDispatcher.submitQuest(r, p)) return false;
			}
			break;
			case 82:
			{
				if(!Client2ServerDispatcher.giveupQuest(r, p)) return false;
			}
			break;
			case 83:
			{
				if(!Client2ServerDispatcher.requestContactInfoById(r, p)) return false;
			}
			break;
			case 84:
			{
				if(!Client2ServerDispatcher.requestContactInfoByName(r, p)) return false;
			}
			break;
			case 85:
			{
				if(!Client2ServerDispatcher.requestFriendList(r, p)) return false;
			}
			break;
			case 86:
			{
				if(!Client2ServerDispatcher.addFriend(r, p)) return false;
			}
			break;
			case 87:
			{
				if(!Client2ServerDispatcher.delFriend(r, p)) return false;
			}
			break;
			case 88:
			{
				if(!Client2ServerDispatcher.addBlacklist(r, p)) return false;
			}
			break;
			case 89:
			{
				if(!Client2ServerDispatcher.delBlacklist(r, p)) return false;
			}
			break;
			case 90:
			{
				if(!Client2ServerDispatcher.requestReferrFriend(r, p)) return false;
			}
			break;
			case 91:
			{
				if(!Client2ServerDispatcher.mining(r, p)) return false;
			}
			break;
			case 92:
			{
				if(!Client2ServerDispatcher.compoundItem(r, p)) return false;
			}
			break;
			case 93:
			{
				if(!Client2ServerDispatcher.bagItemSplit(r, p)) return false;
			}
			break;
			case 94:
			{
				if(!Client2ServerDispatcher.requestChallenge(r, p)) return false;
			}
			break;
			case 95:
			{
				if(!Client2ServerDispatcher.requestRival(r, p)) return false;
			}
			break;
			case 96:
			{
				if(!Client2ServerDispatcher.requestMySelfJJCData(r, p)) return false;
			}
			break;
			case 97:
			{
				if(!Client2ServerDispatcher.requestCheckMsg(r, p)) return false;
			}
			break;
			case 98:
			{
				if(!Client2ServerDispatcher.requestMyAllbattleMsg(r, p)) return false;
			}
			break;
			case 99:
			{
				if(!Client2ServerDispatcher.requestJJCRank(r, p)) return false;
			}
			break;
			case 100:
			{
				if(!Client2ServerDispatcher.requestLevelRank(r, p)) return false;
			}
			break;
			case 101:
			{
				if(!Client2ServerDispatcher.requestBabyRank(r, p)) return false;
			}
			break;
			case 102:
			{
				if(!Client2ServerDispatcher.requestEmpRank(r, p)) return false;
			}
			break;
			case 103:
			{
				if(!Client2ServerDispatcher.requestPlayerFFRank(r, p)) return false;
			}
			break;
			case 104:
			{
				if(!Client2ServerDispatcher.queryOnlinePlayerbyName(r, p)) return false;
			}
			break;
			case 105:
			{
				if(!Client2ServerDispatcher.queryPlayerbyName(r, p)) return false;
			}
			break;
			case 106:
			{
				if(!Client2ServerDispatcher.queryBaby(r, p)) return false;
			}
			break;
			case 107:
			{
				if(!Client2ServerDispatcher.queryEmployee(r, p)) return false;
			}
			break;
			case 108:
			{
				if(!Client2ServerDispatcher.guideFinish(r, p)) return false;
			}
			break;
			case 109:
			{
				if(!Client2ServerDispatcher.enterBattle(r, p)) return false;
			}
			break;
			case 110:
			{
				if(!Client2ServerDispatcher.shopBuyItem(r, p)) return false;
			}
			break;
			case 111:
			{
				if(!Client2ServerDispatcher.getFirstRechargeItem(r, p)) return false;
			}
			break;
			case 112:
			{
				if(!Client2ServerDispatcher.requestLevelGift(r, p)) return false;
			}
			break;
			case 113:
			{
				if(!Client2ServerDispatcher.setCurrentTitle(r, p)) return false;
			}
			break;
			case 114:
			{
				if(!Client2ServerDispatcher.openBuyBox(r, p)) return false;
			}
			break;
			case 115:
			{
				if(!Client2ServerDispatcher.requestAchaward(r, p)) return false;
			}
			break;
			case 116:
			{
				if(!Client2ServerDispatcher.sign(r, p)) return false;
			}
			break;
			case 117:
			{
				if(!Client2ServerDispatcher.requestSignupReward7(r, p)) return false;
			}
			break;
			case 118:
			{
				if(!Client2ServerDispatcher.requestSignupReward14(r, p)) return false;
			}
			break;
			case 119:
			{
				if(!Client2ServerDispatcher.requestSignupReward28(r, p)) return false;
			}
			break;
			case 120:
			{
				if(!Client2ServerDispatcher.requestActivityReward(r, p)) return false;
			}
			break;
			case 121:
			{
				if(!Client2ServerDispatcher.resetHundredTier(r, p)) return false;
			}
			break;
			case 122:
			{
				if(!Client2ServerDispatcher.enterHundredScene(r, p)) return false;
			}
			break;
			case 123:
			{
				if(!Client2ServerDispatcher.delBaby(r, p)) return false;
			}
			break;
			case 124:
			{
				if(!Client2ServerDispatcher.resetBaby(r, p)) return false;
			}
			break;
			case 125:
			{
				if(!Client2ServerDispatcher.resetBabyProp(r, p)) return false;
			}
			break;
			case 126:
			{
				if(!Client2ServerDispatcher.remouldBaby(r, p)) return false;
			}
			break;
			case 127:
			{
				if(!Client2ServerDispatcher.empSkillLevelUp(r, p)) return false;
			}
			break;
			case 128:
			{
				if(!Client2ServerDispatcher.setOpenDoubleTimeFlag(r, p)) return false;
			}
			break;
			case 129:
			{
				if(!Client2ServerDispatcher.talkedNpc(r, p)) return false;
			}
			break;
			case 130:
			{
				if(!Client2ServerDispatcher.jjcBattleGo(r, p)) return false;
			}
			break;
			case 131:
			{
				if(!Client2ServerDispatcher.requestMyJJCTeamMsg(r, p)) return false;
			}
			break;
			case 132:
			{
				if(!Client2ServerDispatcher.startMatching(r, p)) return false;
			}
			break;
			case 133:
			{
				if(!Client2ServerDispatcher.stopMatching(r, p)) return false;
			}
			break;
			case 134:
			{
				if(!Client2ServerDispatcher.exitPvpJJC(r, p)) return false;
			}
			break;
			case 135:
			{
				if(!Client2ServerDispatcher.joinPvpLobby(r, p)) return false;
			}
			break;
			case 136:
			{
				if(!Client2ServerDispatcher.exitPvpLobby(r, p)) return false;
			}
			break;
			case 137:
			{
				if(!Client2ServerDispatcher.requestpvprank(r, p)) return false;
			}
			break;
			case 138:
			{
				if(!Client2ServerDispatcher.joinWarriorchoose(r, p)) return false;
			}
			break;
			case 139:
			{
				if(!Client2ServerDispatcher.warriorStart(r, p)) return false;
			}
			break;
			case 140:
			{
				if(!Client2ServerDispatcher.warriorStop(r, p)) return false;
			}
			break;
			case 141:
			{
				if(!Client2ServerDispatcher.sendMail(r, p)) return false;
			}
			break;
			case 142:
			{
				if(!Client2ServerDispatcher.readMail(r, p)) return false;
			}
			break;
			case 143:
			{
				if(!Client2ServerDispatcher.delMail(r, p)) return false;
			}
			break;
			case 144:
			{
				if(!Client2ServerDispatcher.getMailItem(r, p)) return false;
			}
			break;
			case 145:
			{
				if(!Client2ServerDispatcher.requestState(r, p)) return false;
			}
			break;
			case 146:
			{
				if(!Client2ServerDispatcher.createGuild(r, p)) return false;
			}
			break;
			case 147:
			{
				if(!Client2ServerDispatcher.delGuild(r, p)) return false;
			}
			break;
			case 148:
			{
				if(!Client2ServerDispatcher.requestJoinGuild(r, p)) return false;
			}
			break;
			case 149:
			{
				if(!Client2ServerDispatcher.leaveGuild(r, p)) return false;
			}
			break;
			case 150:
			{
				if(!Client2ServerDispatcher.kickOut(r, p)) return false;
			}
			break;
			case 151:
			{
				if(!Client2ServerDispatcher.acceptRequestGuild(r, p)) return false;
			}
			break;
			case 152:
			{
				if(!Client2ServerDispatcher.refuseRequestGuild(r, p)) return false;
			}
			break;
			case 153:
			{
				if(!Client2ServerDispatcher.changeMemberPosition(r, p)) return false;
			}
			break;
			case 154:
			{
				if(!Client2ServerDispatcher.transferPremier(r, p)) return false;
			}
			break;
			case 155:
			{
				if(!Client2ServerDispatcher.changeGuildNotice(r, p)) return false;
			}
			break;
			case 156:
			{
				if(!Client2ServerDispatcher.queryGuildList(r, p)) return false;
			}
			break;
			case 157:
			{
				if(!Client2ServerDispatcher.inviteJoinGuild(r, p)) return false;
			}
			break;
			case 158:
			{
				if(!Client2ServerDispatcher.respondInviteJoinGuild(r, p)) return false;
			}
			break;
			case 159:
			{
				if(!Client2ServerDispatcher.buyGuildItem(r, p)) return false;
			}
			break;
			case 160:
			{
				if(!Client2ServerDispatcher.entryGuildBattle(r, p)) return false;
			}
			break;
			case 161:
			{
				if(!Client2ServerDispatcher.transforGuildBattleScene(r, p)) return false;
			}
			break;
			case 162:
			{
				if(!Client2ServerDispatcher.addGuildMoney(r, p)) return false;
			}
			break;
			case 163:
			{
				if(!Client2ServerDispatcher.updateGuildBuiling(r, p)) return false;
			}
			break;
			case 164:
			{
				if(!Client2ServerDispatcher.refreshGuildShop(r, p)) return false;
			}
			break;
			case 165:
			{
				if(!Client2ServerDispatcher.levelupGuildSkill(r, p)) return false;
			}
			break;
			case 166:
			{
				if(!Client2ServerDispatcher.presentGuildItem(r, p)) return false;
			}
			break;
			case 167:
			{
				if(!Client2ServerDispatcher.progenitusAddExp(r, p)) return false;
			}
			break;
			case 168:
			{
				if(!Client2ServerDispatcher.setProgenitusPosition(r, p)) return false;
			}
			break;
			case 169:
			{
				if(!Client2ServerDispatcher.guildsign(r, p)) return false;
			}
			break;
			case 170:
			{
				if(!Client2ServerDispatcher.fetchSelling(r, p)) return false;
			}
			break;
			case 171:
			{
				if(!Client2ServerDispatcher.fetchSelling2(r, p)) return false;
			}
			break;
			case 172:
			{
				if(!Client2ServerDispatcher.selling(r, p)) return false;
			}
			break;
			case 173:
			{
				if(!Client2ServerDispatcher.unselling(r, p)) return false;
			}
			break;
			case 174:
			{
				if(!Client2ServerDispatcher.buy(r, p)) return false;
			}
			break;
			case 175:
			{
				if(!Client2ServerDispatcher.fixItem(r, p)) return false;
			}
			break;
			case 176:
			{
				if(!Client2ServerDispatcher.fixAllItem(r, p)) return false;
			}
			break;
			case 177:
			{
				if(!Client2ServerDispatcher.makeDebirsItem(r, p)) return false;
			}
			break;
			case 178:
			{
				if(!Client2ServerDispatcher.levelUpMagicItem(r, p)) return false;
			}
			break;
			case 179:
			{
				if(!Client2ServerDispatcher.tupoMagicItem(r, p)) return false;
			}
			break;
			case 180:
			{
				if(!Client2ServerDispatcher.changeMagicJob(r, p)) return false;
			}
			break;
			case 181:
			{
				if(!Client2ServerDispatcher.requestPk(r, p)) return false;
			}
			break;
			case 182:
			{
				if(!Client2ServerDispatcher.uiBehavior(r, p)) return false;
			}
			break;
			case 183:
			{
				if(!Client2ServerDispatcher.openZhuanpan(r, p)) return false;
			}
			break;
			case 184:
			{
				if(!Client2ServerDispatcher.zhuanpanGo(r, p)) return false;
			}
			break;
			case 185:
			{
				if(!Client2ServerDispatcher.redemptionSpree(r, p)) return false;
			}
			break;
			case 186:
			{
				if(!Client2ServerDispatcher.sceneFilter(r, p)) return false;
			}
			break;
			case 187:
			{
				if(!Client2ServerDispatcher.sendExamAnswer(r, p)) return false;
			}
			break;
			case 188:
			{
				if(!Client2ServerDispatcher.sendwishing(r, p)) return false;
			}
			break;
			case 189:
			{
				if(!Client2ServerDispatcher.requestWish(r, p)) return false;
			}
			break;
			case 190:
			{
				if(!Client2ServerDispatcher.leaderCloseDialog(r, p)) return false;
			}
			break;
			case 191:
			{
				if(!Client2ServerDispatcher.requestOnlineReward(r, p)) return false;
			}
			break;
			case 192:
			{
				if(!Client2ServerDispatcher.requestFundReward(r, p)) return false;
			}
			break;
			case 193:
			{
				if(!Client2ServerDispatcher.openCard(r, p)) return false;
			}
			break;
			case 194:
			{
				if(!Client2ServerDispatcher.resetCard(r, p)) return false;
			}
			break;
			case 195:
			{
				if(!Client2ServerDispatcher.hotRoleBuy(r, p)) return false;
			}
			break;
			case 196:
			{
				if(!Client2ServerDispatcher.requestSevenReward(r, p)) return false;
			}
			break;
			case 197:
			{
				if(!Client2ServerDispatcher.vipreward(r, p)) return false;
			}
			break;
			case 198:
			{
				if(!Client2ServerDispatcher.requestChargeTotalSingleReward(r, p)) return false;
			}
			break;
			case 199:
			{
				if(!Client2ServerDispatcher.requestChargeTotalReward(r, p)) return false;
			}
			break;
			case 200:
			{
				if(!Client2ServerDispatcher.requestChargeEverySingleReward(r, p)) return false;
			}
			break;
			case 201:
			{
				if(!Client2ServerDispatcher.requestChargeEveryReward(r, p)) return false;
			}
			break;
			case 202:
			{
				if(!Client2ServerDispatcher.requestLoginTotal(r, p)) return false;
			}
			break;
			case 203:
			{
				if(!Client2ServerDispatcher.buyDiscountStoreSingle(r, p)) return false;
			}
			break;
			case 204:
			{
				if(!Client2ServerDispatcher.buyDiscountStore(r, p)) return false;
			}
			break;
			case 205:
			{
				if(!Client2ServerDispatcher.requestEmployeeActivityReward(r, p)) return false;
			}
			break;
			case 206:
			{
				if(!Client2ServerDispatcher.requestmyselfrechargeleReward(r, p)) return false;
			}
			break;
			case 207:
			{
				if(!Client2ServerDispatcher.requestEverydayIntegral(r, p)) return false;
			}
			break;
			case 208:
			{
				if(!Client2ServerDispatcher.buyIntegralItem(r, p)) return false;
			}
			break;
			case 209:
			{
				if(!Client2ServerDispatcher.familyLoseLeader(r, p)) return false;
			}
			break;
			case 210:
			{
				if(!Client2ServerDispatcher.verificationSMS(r, p)) return false;
			}
			break;
			case 211:
			{
				if(!Client2ServerDispatcher.lockItem(r, p)) return false;
			}
			break;
			case 212:
			{
				if(!Client2ServerDispatcher.lockBaby(r, p)) return false;
			}
			break;
			case 213:
			{
				if(!Client2ServerDispatcher.showBaby(r, p)) return false;
			}
			break;
			case 214:
			{
				if(!Client2ServerDispatcher.wearFuwen(r, p)) return false;
			}
			break;
			case 215:
			{
				if(!Client2ServerDispatcher.takeoffFuwen(r, p)) return false;
			}
			break;
			case 216:
			{
				if(!Client2ServerDispatcher.compFuwen(r, p)) return false;
			}
			break;
			case 217:
			{
				if(!Client2ServerDispatcher.requestEmployeeQuest(r, p)) return false;
			}
			break;
			case 218:
			{
				if(!Client2ServerDispatcher.acceptEmployeeQuest(r, p)) return false;
			}
			break;
			case 219:
			{
				if(!Client2ServerDispatcher.submitEmployeeQuest(r, p)) return false;
			}
			break;
			case 220:
			{
				if(!Client2ServerDispatcher.crystalUpLevel(r, p)) return false;
			}
			break;
			case 221:
			{
				if(!Client2ServerDispatcher.resetCrystalProp(r, p)) return false;
			}
			break;
			case 222:
			{
				if(!Client2ServerDispatcher.magicItemOneKeyLevel(r, p)) return false;
			}
			break;
			case 223:
			{
				if(!Client2ServerDispatcher.submitQuest2(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class Server2ClientStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void pong()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void errorno(ErrorNo e)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)e;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void teamerrorno(string name,ErrorNo e)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		{
			byte __e__ = (byte)e;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void reconnection(COM_ReconnectInfo recInfo)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			recInfo.serialize(w);
		}
		methodEnd();
	}
	public void sessionfailed()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void loginok(string sessionkey,COM_SimpleInformation[] players)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sessionkey);
		}
		{
			uint __len__ = (players == null)?0:(uint)players.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				players[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void logoutOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void createPlayerOk(COM_SimpleInformation player)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 7;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			player.serialize(w);
		}
		methodEnd();
	}
	public void deletePlayerOk(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 8;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void enterGameOk(COM_PlayerInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 9;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void initBabies(COM_BabyInst[] insts)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 10;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (insts == null)?0:(uint)insts.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				insts[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void initEmployees(COM_EmployeeInst[] insts,bool isFlag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 11;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (insts == null)?0:(uint)insts.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				insts[i].serialize(w);
			}
		}
		{
			bin.ProtocolWriter.writeType(w, isFlag);
		}
		methodEnd();
	}
	public void initEmpBattleGroup(COM_BattleEmp bep)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 12;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bep.serialize(w);
		}
		methodEnd();
	}
	public void initNpc(int[] npcList)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 13;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (npcList == null)?0:(uint)npcList.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, npcList[i]);
			}
		}
		methodEnd();
	}
	public void initAchievement(COM_Achievement[] actlist)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 14;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (actlist == null)?0:(uint)actlist.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				actlist[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void initGather(uint allnum,COM_Gather[] gathers)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 15;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, allnum);
		}
		{
			uint __len__ = (gathers == null)?0:(uint)gathers.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				gathers[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void initcompound(uint[] compounds)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 16;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (compounds == null)?0:(uint)compounds.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, compounds[i]);
			}
		}
		methodEnd();
	}
	public void addBaby(COM_BabyInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 17;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void refreshBaby(COM_BabyInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 18;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void delBabyOK(uint babyInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 19;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, babyInstId);
		}
		methodEnd();
	}
	public void changeBabyNameOK(uint babyId,string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 20;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, babyId);
		}
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void remouldBabyOK(uint instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 21;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void intensifyBabyOK(uint babyid,uint intensifyLevel)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 22;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, babyid);
		}
		{
			bin.ProtocolWriter.writeType(w, intensifyLevel);
		}
		methodEnd();
	}
	public void learnSkillOk(COM_Skill inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 23;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void forgetSkillOk(uint skid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 24;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, skid);
		}
		methodEnd();
	}
	public void addSkillExp(uint skid,uint uExp,ItemUseFlag flag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 25;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, skid);
		}
		{
			bin.ProtocolWriter.writeType(w, uExp);
		}
		{
			byte __e__ = (byte)flag;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void babyLearnSkillOK(uint instId,uint newSkId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 26;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			bin.ProtocolWriter.writeType(w, newSkId);
		}
		methodEnd();
	}
	public void skillLevelUp(uint instId,COM_Skill inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 27;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void joinScene(COM_SceneInfo info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 28;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void joinCopySceneOK(int secneid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 29;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, secneid);
		}
		methodEnd();
	}
	public void initCopyNums()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 30;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void addToScene(COM_ScenePlayerInformation inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 31;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void delFormScene(int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 32;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void move2(int instId,COM_FPosition pos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 33;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			pos.serialize(w);
		}
		methodEnd();
	}
	public void cantMove()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 34;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void querySimplePlayerInstOk(COM_SimplePlayerInst player)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 35;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			player.serialize(w);
		}
		methodEnd();
	}
	public void transfor2(int instId,COM_FPosition pos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 36;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			pos.serialize(w);
		}
		methodEnd();
	}
	public void openScene(int sceneId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 37;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		methodEnd();
	}
	public void autoBattleResult(bool isOk)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 38;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isOk);
		}
		methodEnd();
	}
	public void talked2Npc(int npcId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 39;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcId);
		}
		methodEnd();
	}
	public void talked2Player(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 40;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void useItemOk(int itemId,int stack)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 41;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, itemId);
		}
		{
			bin.ProtocolWriter.writeType(w, stack);
		}
		methodEnd();
	}
	public void syncBattleStatus(int playerId,bool inBattle)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 42;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, inBattle);
		}
		methodEnd();
	}
	public void enterBattleOk(COM_InitBattle initBattle)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 43;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			initBattle.serialize(w);
		}
		methodEnd();
	}
	public void exitBattleOk(BattleJudgeType bjt,COM_BattleOverClearing init)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 44;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)bjt;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			init.serialize(w);
		}
		methodEnd();
	}
	public void syncOrderOk(uint uid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 45;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, uid);
		}
		methodEnd();
	}
	public void syncOrderOkEX()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 46;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void syncOneTurnAction(COM_BattleReport reports)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 47;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			reports.serialize(w);
		}
		methodEnd();
	}
	public void syncProperties(uint guid,COM_PropValue[] props)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 48;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guid);
		}
		{
			uint __len__ = (props == null)?0:(uint)props.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				props[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void receiveChat(COM_ChatInfo info,COM_ContactInfo myinfo)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 49;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		{
			myinfo.serialize(w);
		}
		methodEnd();
	}
	public void requestAudioOk(int audioId,byte[] content)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 50;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, audioId);
		}
		{
			uint __len__ = (content == null)?0:(uint)content.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, content[i]);
			}
		}
		methodEnd();
	}
	public void publishItemInstRes(COM_ShowItemInstInfo info,ChatKind type)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 51;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void queryItemInstRes(COM_ShowItemInst item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 52;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void publishBabyInstRes(COM_ShowbabyInstInfo info,ChatKind type)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 53;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void queryBabyInstRes(COM_ShowbabyInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 54;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void setNoTalkTime(float t)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 55;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, t);
		}
		methodEnd();
	}
	public void addNpc(int[] npcList)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 56;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (npcList == null)?0:(uint)npcList.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, npcList[i]);
			}
		}
		methodEnd();
	}
	public void delNpc(int[] npcList)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 57;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (npcList == null)?0:(uint)npcList.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, npcList[i]);
			}
		}
		methodEnd();
	}
	public void setTeamLeader(int playerId,bool isLeader)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 58;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, isLeader);
		}
		methodEnd();
	}
	public void initBag(COM_Item[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 59;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void addBagItem(COM_Item item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 60;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void delBagItem(ushort slot)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 61;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, slot);
		}
		methodEnd();
	}
	public void updateBagItem(COM_Item item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 62;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void depositItemOK(COM_Item item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 63;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void getoutItemOK(ushort slot)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 64;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, slot);
		}
		methodEnd();
	}
	public void depositBabyOK(COM_BabyInst baby)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 65;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			baby.serialize(w);
		}
		methodEnd();
	}
	public void getoutBabyOK(ushort slot)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 66;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, slot);
		}
		methodEnd();
	}
	public void sortItemStorageOK(COM_Item[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 67;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void sortBabyStorageOK(uint[] babys)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 68;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (babys == null)?0:(uint)babys.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, babys[i]);
			}
		}
		methodEnd();
	}
	public void initItemStorage(ushort gridNum,COM_Item[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 69;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, gridNum);
		}
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void initBabyStorage(ushort gridNum,COM_BabyInst[] babys)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 70;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, gridNum);
		}
		{
			uint __len__ = (babys == null)?0:(uint)babys.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				babys[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void openStorageGrid(StorageType tp,ushort gridNum)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 71;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)tp;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, gridNum);
		}
		methodEnd();
	}
	public void delStorageBabyOK(ushort slot)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 72;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, slot);
		}
		methodEnd();
	}
	public void initPlayerEquips(COM_Item[] equips)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 73;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (equips == null)?0:(uint)equips.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				equips[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void wearEquipmentOk(uint target,COM_Item equip)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 74;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, target);
		}
		{
			equip.serialize(w);
		}
		methodEnd();
	}
	public void scenePlayerWearEquipment(uint target,uint itemId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 75;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, target);
		}
		{
			bin.ProtocolWriter.writeType(w, itemId);
		}
		methodEnd();
	}
	public void delEquipmentOk(uint target,uint itemInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 76;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, target);
		}
		{
			bin.ProtocolWriter.writeType(w, itemInstId);
		}
		methodEnd();
	}
	public void scenePlayerDoffEquipment(uint target,uint itemId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 77;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, target);
		}
		{
			bin.ProtocolWriter.writeType(w, itemId);
		}
		methodEnd();
	}
	public void sortBagItemOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 78;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void jointLobbyOk(COM_SimpleTeamInfo[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 79;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void exitLobbyOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 80;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void syncDelLobbyTeam(uint teamId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 81;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, teamId);
		}
		methodEnd();
	}
	public void syncUpdateLobbyTeam(COM_SimpleTeamInfo info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 82;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void syncAddLobbyTeam(COM_SimpleTeamInfo team)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 83;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			team.serialize(w);
		}
		methodEnd();
	}
	public void createTeamOk(COM_TeamInfo team)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 84;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			team.serialize(w);
		}
		methodEnd();
	}
	public void changeTeamOk(COM_TeamInfo team)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 85;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			team.serialize(w);
		}
		methodEnd();
	}
	public void joinTeamOk(COM_TeamInfo team)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 86;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			team.serialize(w);
		}
		methodEnd();
	}
	public void addTeamMember(COM_SimplePlayerInst info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 87;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void delTeamMember(int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 88;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void changeTeamLeaderOk(int uuid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 89;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, uuid);
		}
		methodEnd();
	}
	public void exitTeamOk(bool iskick)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 90;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, iskick);
		}
		methodEnd();
	}
	public void updateTeam(COM_TeamInfo team)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 91;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			team.serialize(w);
		}
		methodEnd();
	}
	public void joinTeamRoomOK(COM_TeamInfo team)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 92;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			team.serialize(w);
		}
		methodEnd();
	}
	public void inviteJoinTeam(uint teamId,string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 93;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, teamId);
		}
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void syncTeamDirtyProp(int guid,COM_PropValue[] props)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 94;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guid);
		}
		{
			uint __len__ = (props == null)?0:(uint)props.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				props[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void leaveTeamOk(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 95;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void backTeamOK(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 96;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void teamCallMemberBack()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 97;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void refuseBackTeamOk(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 98;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void requestJoinTeamTranspond(string reqName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 99;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, reqName);
		}
		methodEnd();
	}
	public void drawLotteryBoxRep(COM_Item[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 100;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void addEmployee(COM_EmployeeInst employee)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 101;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			employee.serialize(w);
		}
		methodEnd();
	}
	public void battleEmployee(int empId,EmployeesBattleGroup group,bool forbattle)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 102;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, empId);
		}
		{
			byte __e__ = (byte)group;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, forbattle);
		}
		methodEnd();
	}
	public void changeEmpBattleGroupOK(EmployeesBattleGroup group)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 103;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)group;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void evolveOK(int guid,QualityColor qc)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 104;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guid);
		}
		{
			byte __e__ = (byte)qc;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void upStarOK(int guid,int star,COM_Skill sk)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 105;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guid);
		}
		{
			bin.ProtocolWriter.writeType(w, star);
		}
		{
			sk.serialize(w);
		}
		methodEnd();
	}
	public void delEmployeeOK(uint[] instids)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 106;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (instids == null)?0:(uint)instids.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, instids[i]);
			}
		}
		methodEnd();
	}
	public void sycnEmployeeSoul(int guid,uint soulNum)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 107;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guid);
		}
		{
			bin.ProtocolWriter.writeType(w, soulNum);
		}
		methodEnd();
	}
	public void initQuest(COM_QuestInst[] qlist,int[] clist)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 108;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (qlist == null)?0:(uint)qlist.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				qlist[i].serialize(w);
			}
		}
		{
			uint __len__ = (clist == null)?0:(uint)clist.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, clist[i]);
			}
		}
		methodEnd();
	}
	public void acceptQuestOk(COM_QuestInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 109;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void submitQuestOk(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 110;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void giveupQuestOk(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 111;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void updateQuestInst(COM_QuestInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 112;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void requestContactInfoOk(COM_ContactInfo contact)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 113;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			contact.serialize(w);
		}
		methodEnd();
	}
	public void addFriendOK(COM_ContactInfo inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 114;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void delFriendOK(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 115;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void addBlacklistOK(COM_ContactInfo inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 116;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void delBlacklistOK(uint instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 117;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void findFriendFail()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 118;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void referrFriendOK(COM_ContactInfo[] insts)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 119;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (insts == null)?0:(uint)insts.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				insts[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void requestFriendListOK(COM_ContactInfo[] insts)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 120;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (insts == null)?0:(uint)insts.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				insts[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void lotteryOk(int lotteryId,COM_DropItem[] dropItem)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 121;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, lotteryId);
		}
		{
			uint __len__ = (dropItem == null)?0:(uint)dropItem.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				dropItem[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void openGatherOK(COM_Gather gather)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 122;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			gather.serialize(w);
		}
		methodEnd();
	}
	public void miningOk(COM_DropItem[] items,COM_Gather gather,uint gatherNum)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 123;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		{
			gather.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, gatherNum);
		}
		methodEnd();
	}
	public void openCompound(uint compoundId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 124;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, compoundId);
		}
		methodEnd();
	}
	public void compoundItemOk(COM_Item item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 125;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void openBagGridOk(int num)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 126;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, num);
		}
		methodEnd();
	}
	public void requestChallengeOK(bool isOK)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 127;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isOK);
		}
		methodEnd();
	}
	public void requestMySelfJJCDataOK(COM_EndlessStair info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 128;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void requestRivalOK(COM_EndlessStair[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 129;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void rivalTimeOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 130;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void checkMsgOK(COM_SimplePlayerInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 131;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void requestMyAllbattleMsgOK(COM_JJCBattleMsg[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 132;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void myBattleMsgOK(COM_JJCBattleMsg info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 133;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void requestJJCRankOK(uint myRank,COM_EndlessStair[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 134;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, myRank);
		}
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void requestLevelRankOK(uint myRank,COM_ContactInfo[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 135;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, myRank);
		}
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void requestBabyRankOK(uint myRank,COM_BabyRankData[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 136;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, myRank);
		}
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void requestEmpRankOK(uint myRank,COM_EmployeeRankData[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 137;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, myRank);
		}
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void requestPlayerFFRankOK(uint myRank,COM_ContactInfo[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 138;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, myRank);
		}
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void queryOnlinePlayerOK(bool isOnline)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 139;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isOnline);
		}
		methodEnd();
	}
	public void queryPlayerOK(COM_SimplePlayerInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 140;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void queryBabyOK(COM_BabyInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 141;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void queryEmployeeOK(COM_EmployeeInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 142;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void initGuide(uint guideMask)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 143;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guideMask);
		}
		methodEnd();
	}
	public void buyShopItemOk(int id)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 144;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, id);
		}
		methodEnd();
	}
	public void addPlayerTitle(int title)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 145;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, title);
		}
		methodEnd();
	}
	public void delPlayerTitle(int title)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 146;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, title);
		}
		methodEnd();
	}
	public void requestOpenBuyBox(float greenTime,float blueTime,int greenFreeNum)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 147;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, greenTime);
		}
		{
			bin.ProtocolWriter.writeType(w, blueTime);
		}
		{
			bin.ProtocolWriter.writeType(w, greenFreeNum);
		}
		methodEnd();
	}
	public void requestGreenBoxTimeOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 148;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestBlueBoxTimeOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 149;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void updateAchievementinfo(COM_Achievement achs)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 150;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			achs.serialize(w);
		}
		methodEnd();
	}
	public void syncOpenSystemFlag(ulong flag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 151;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, flag);
		}
		methodEnd();
	}
	public void requestActivityRewardOK(uint ar)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 152;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, ar);
		}
		methodEnd();
	}
	public void syncActivity(COM_ActivityTable table)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 153;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			table.serialize(w);
		}
		methodEnd();
	}
	public void updateActivityStatus(ActivityType type,bool open)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 154;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, open);
		}
		methodEnd();
	}
	public void updateActivityCounter(ActivityType type,int counter,int reward)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 155;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, counter);
		}
		{
			bin.ProtocolWriter.writeType(w, reward);
		}
		methodEnd();
	}
	public void syncExam(COM_Exam exam)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 156;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			exam.serialize(w);
		}
		methodEnd();
	}
	public void syncExamAnswer(COM_Answer answer)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 157;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			answer.serialize(w);
		}
		methodEnd();
	}
	public void petActivityNoNum(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 158;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void syncHundredInfo(COM_HundredBattle hb)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 159;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			hb.serialize(w);
		}
		methodEnd();
	}
	public void initSignUp(int[] info,int process,bool sign7,bool sign14,bool sign28)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 160;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (info == null)?0:(uint)info.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, info[i]);
			}
		}
		{
			bin.ProtocolWriter.writeType(w, process);
		}
		{
			bin.ProtocolWriter.writeType(w, sign7);
		}
		{
			bin.ProtocolWriter.writeType(w, sign14);
		}
		{
			bin.ProtocolWriter.writeType(w, sign28);
		}
		methodEnd();
	}
	public void signUp(bool flag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 161;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, flag);
		}
		methodEnd();
	}
	public void requestSignupRewardOk7()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 162;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestSignupRewardOk14()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 163;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestSignupRewardOk28()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 164;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void sycnDoubleExpTime(bool isFlag,float times)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 165;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isFlag);
		}
		{
			bin.ProtocolWriter.writeType(w, times);
		}
		methodEnd();
	}
	public void sycnStates(COM_State[] states)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 166;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (states == null)?0:(uint)states.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				states[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void requestpvprankOK(COM_ContactInfo[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 167;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void syncMyJJCTeamMember()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 168;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void startMatchingOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 169;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void stopMatchingOK(float times)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 170;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, times);
		}
		methodEnd();
	}
	public void updatePvpJJCinfo(COM_PlayerVsPlayer info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 171;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void exitPvpJJCOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 172;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void syncEnemyPvpJJCPlayerInfo(COM_SimpleInformation info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 173;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void syncEnemyPvpJJCTeamInfo(COM_SimpleInformation[] infos,uint teamID_)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 174;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		{
			bin.ProtocolWriter.writeType(w, teamID_);
		}
		methodEnd();
	}
	public void openWarriorchooseUI()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 175;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void warriorStartOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 176;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void warriorStopOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 177;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void syncWarriorEnemyTeamInfo(COM_SimpleInformation[] infos,uint teamID_)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 178;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		{
			bin.ProtocolWriter.writeType(w, teamID_);
		}
		methodEnd();
	}
	public void appendMail(COM_Mail[] mails)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 179;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (mails == null)?0:(uint)mails.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				mails[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void delMail(int mailId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 180;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, mailId);
		}
		methodEnd();
	}
	public void updateMailOk(COM_Mail mail)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 181;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			mail.serialize(w);
		}
		methodEnd();
	}
	public void boardcastNotice(string content,bool isGm)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 182;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, content);
		}
		{
			bin.ProtocolWriter.writeType(w, isGm);
		}
		methodEnd();
	}
	public void createGuildOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 183;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void delGuildOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 184;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void leaveGuildOk(string who,bool isKick)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 185;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, who);
		}
		{
			bin.ProtocolWriter.writeType(w, isKick);
		}
		methodEnd();
	}
	public void initGuildData(COM_Guild guild)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 186;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			guild.serialize(w);
		}
		methodEnd();
	}
	public void initGuildMemberList(COM_GuildMember[] member)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 187;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (member == null)?0:(uint)member.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				member[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void modifyGuildMemberList(COM_GuildMember member,ModifyListFlag flag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 188;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			member.serialize(w);
		}
		{
			byte __e__ = (byte)flag;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void modifyGuildList(COM_GuildViewerData data,ModifyListFlag flag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 189;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		{
			byte __e__ = (byte)flag;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void queryGuildListResult(short page,short pageNum,COM_GuildViewerData[] guildList)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 190;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, page);
		}
		{
			bin.ProtocolWriter.writeType(w, pageNum);
		}
		{
			uint __len__ = (guildList == null)?0:(uint)guildList.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				guildList[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void inviteGuild(string sendName,string guildName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 191;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sendName);
		}
		{
			bin.ProtocolWriter.writeType(w, guildName);
		}
		methodEnd();
	}
	public void updateGuildShopItems(COM_GuildShopItem[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 192;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void updateGuildBuilding(GuildBuildingType type,COM_GuildBuilding building)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 193;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			building.serialize(w);
		}
		methodEnd();
	}
	public void updateGuildMyMember(COM_GuildMember member)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 194;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			member.serialize(w);
		}
		methodEnd();
	}
	public void levelupGuildSkillOk(COM_Skill skInst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 195;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			skInst.serialize(w);
		}
		methodEnd();
	}
	public void presentGuildItemOk(int val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 196;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, val);
		}
		methodEnd();
	}
	public void progenitusAddExpOk(COM_GuildProgen mInst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 197;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			mInst.serialize(w);
		}
		methodEnd();
	}
	public void setProgenitusPositionOk(int[] positions)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 198;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (positions == null)?0:(uint)positions.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, positions[i]);
			}
		}
		methodEnd();
	}
	public void updateGuildFundz(int val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 199;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, val);
		}
		methodEnd();
	}
	public void updateGuildMemberContribution(int val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 200;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, val);
		}
		methodEnd();
	}
	public void openGuildBattle(string otherName,int playerNum,int level,bool isLeft,int lstime)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 201;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, otherName);
		}
		{
			bin.ProtocolWriter.writeType(w, playerNum);
		}
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		{
			bin.ProtocolWriter.writeType(w, isLeft);
		}
		{
			bin.ProtocolWriter.writeType(w, lstime);
		}
		methodEnd();
	}
	public void startGuildBattle(string otherName,int otherCon,int selfCon)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 202;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, otherName);
		}
		{
			bin.ProtocolWriter.writeType(w, otherCon);
		}
		{
			bin.ProtocolWriter.writeType(w, selfCon);
		}
		methodEnd();
	}
	public void closeGuildBattle(bool isWinner)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 203;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isWinner);
		}
		methodEnd();
	}
	public void syncGuildBattleWinCount(int myWin,int otherWin)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 204;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, myWin);
		}
		{
			bin.ProtocolWriter.writeType(w, otherWin);
		}
		methodEnd();
	}
	public void initMySelling(COM_SellItem[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 205;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void initMySelled(COM_SelledItem[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 206;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void fetchSellingOk(COM_SellItem[] items,int total)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 207;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		{
			bin.ProtocolWriter.writeType(w, total);
		}
		methodEnd();
	}
	public void fetchSellingOk2(COM_SellItem[] items,int total)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 208;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		{
			bin.ProtocolWriter.writeType(w, total);
		}
		methodEnd();
	}
	public void sellingOk(COM_SellItem item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 209;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void selledOk(COM_SelledItem item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 210;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void unsellingOk(int sellid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 211;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sellid);
		}
		methodEnd();
	}
	public void redemptionSpreeOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 212;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void insertState(COM_State st)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 213;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			st.serialize(w);
		}
		methodEnd();
	}
	public void updattState(COM_State st)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 214;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			st.serialize(w);
		}
		methodEnd();
	}
	public void removeState(uint stid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 215;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, stid);
		}
		methodEnd();
	}
	public void requestFixItemOk(COM_Item item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 216;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void makeDebirsItemOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 217;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void updateMagicItem(int level,int exp)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 218;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		{
			bin.ProtocolWriter.writeType(w, exp);
		}
		methodEnd();
	}
	public void changeMagicJobOk(JobType job)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 219;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)job;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void magicItemTupoOk(int level)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 220;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		methodEnd();
	}
	public void zhuanpanOK(uint[] pond)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 221;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (pond == null)?0:(uint)pond.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, pond[i]);
			}
		}
		methodEnd();
	}
	public void updateZhuanpanNotice(COM_Zhuanpan zhuanp)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 222;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			zhuanp.serialize(w);
		}
		methodEnd();
	}
	public void sycnZhuanpanData(COM_ZhuanpanData data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 223;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void copynonum(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 224;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void sceneFilterOk(SceneFilterType[] sfType)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 225;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (sfType == null)?0:(uint)sfType.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, (byte)sfType[i]);
			}
		}
		methodEnd();
	}
	public void wishingOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 226;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void shareWishOK(COM_Wish wish)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 227;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			wish.serialize(w);
		}
		methodEnd();
	}
	public void leaderCloseDialogOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 228;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void startOnlineTime()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 229;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestOnlineTimeRewardOK(uint index)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 230;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, index);
		}
		methodEnd();
	}
	public void sycnVipflag(bool flag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 231;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, flag);
		}
		methodEnd();
	}
	public void buyFundOK(bool flag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 232;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, flag);
		}
		methodEnd();
	}
	public void requestFundRewardOK(uint level)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 233;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		methodEnd();
	}
	public void firstRechargeOK(bool isFlag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 234;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isFlag);
		}
		methodEnd();
	}
	public void firstRechargeGiftOK(bool isFlag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 235;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isFlag);
		}
		methodEnd();
	}
	public void agencyActivity(ADType type,bool isFlag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 236;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, isFlag);
		}
		methodEnd();
	}
	public void updateFestival(COM_ADLoginTotal festival)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 237;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			festival.serialize(w);
		}
		methodEnd();
	}
	public void updateSelfRecharge(COM_ADChargeTotal val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 238;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			val.serialize(w);
		}
		methodEnd();
	}
	public void updateSysRecharge(COM_ADChargeTotal val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 239;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			val.serialize(w);
		}
		methodEnd();
	}
	public void updateSelfDiscountStore(COM_ADDiscountStore val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 240;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			val.serialize(w);
		}
		methodEnd();
	}
	public void updateSysDiscountStore(COM_ADDiscountStore val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 241;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			val.serialize(w);
		}
		methodEnd();
	}
	public void updateSelfOnceRecharge(COM_ADChargeEvery val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 242;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			val.serialize(w);
		}
		methodEnd();
	}
	public void updateSysOnceRecharge(COM_ADChargeEvery val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 243;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			val.serialize(w);
		}
		methodEnd();
	}
	public void openCardOK(COM_ADCardsContent data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 244;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void resetCardOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 245;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void sycnHotRole(COM_ADHotRole data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 246;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void hotRoleBuyOk(ushort buyNum)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 247;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, buyNum);
		}
		methodEnd();
	}
	public void updateSevenday(COM_Sevenday data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 248;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void updateEmployeeActivity(COM_ADEmployeeTotal data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 249;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void updateMinGiftActivity(COM_ADGiftBag data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 250;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void updateIntegralShop(COM_IntegralData data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 251;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void updateShowBaby(uint playerId,uint showBabyTableId,string showBabyName)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 252;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, showBabyTableId);
		}
		{
			bin.ProtocolWriter.writeType(w, showBabyName);
		}
		methodEnd();
	}
	public void updateMySelfRecharge(COM_ADChargeTotal val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 253;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			val.serialize(w);
		}
		methodEnd();
	}
	public void verificationSMSOk(string phoneNumber)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 254;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, phoneNumber);
		}
		methodEnd();
	}
	public void requestLevelGiftOK(int level)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 255;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		methodEnd();
	}
	public void sycnConvertExp(int val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 256;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, val);
		}
		methodEnd();
	}
	public void wearFuwenOk(COM_Item inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 257;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void takeoffFuwenOk(int slot)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 258;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, slot);
		}
		methodEnd();
	}
	public void compFuwenOk()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 259;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void requestEmployeeQuestOk(COM_EmployeeQuestInst[] questList)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 260;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (questList == null)?0:(uint)questList.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				questList[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void acceptEmployeeQuestOk(COM_EmployeeQuestInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 261;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void submitEmployeeQuestOk(int questId,bool isSuccess)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 262;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		{
			bin.ProtocolWriter.writeType(w, isSuccess);
		}
		methodEnd();
	}
	public void sycnCrystal(COM_CrystalData data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 263;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void crystalUpLeveResult(bool isOK)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 264;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isOK);
		}
		methodEnd();
	}
	public void resetCrystalPropOK()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 265;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void sycnCourseGift(COM_CourseGift[] data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 266;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (data == null)?0:(uint)data.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				data[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void orderOk(string orderId,int shopId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 267;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, orderId);
		}
		{
			bin.ProtocolWriter.writeType(w, shopId);
		}
		methodEnd();
	}
	public void updateRandSubmitQuestCount(int submitCount)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 268;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, submitCount);
		}
		methodEnd();
	}
	public void updateTeamMember(int playerId,bool isMember)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 269;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, isMember);
		}
		methodEnd();
	}
}
//=============================================================
public interface Server2ClientProxy
{
	bool pong();
	bool errorno(ErrorNo e);
	bool teamerrorno(string name,ErrorNo e);
	bool reconnection(COM_ReconnectInfo recInfo);
	bool sessionfailed();
	bool loginok(string sessionkey,COM_SimpleInformation[] players);
	bool logoutOk();
	bool createPlayerOk(COM_SimpleInformation player);
	bool deletePlayerOk(string name);
	bool enterGameOk(COM_PlayerInst inst);
	bool initBabies(COM_BabyInst[] insts);
	bool initEmployees(COM_EmployeeInst[] insts,bool isFlag);
	bool initEmpBattleGroup(COM_BattleEmp bep);
	bool initNpc(int[] npcList);
	bool initAchievement(COM_Achievement[] actlist);
	bool initGather(uint allnum,COM_Gather[] gathers);
	bool initcompound(uint[] compounds);
	bool addBaby(COM_BabyInst inst);
	bool refreshBaby(COM_BabyInst inst);
	bool delBabyOK(uint babyInstId);
	bool changeBabyNameOK(uint babyId,string name);
	bool remouldBabyOK(uint instid);
	bool intensifyBabyOK(uint babyid,uint intensifyLevel);
	bool learnSkillOk(COM_Skill inst);
	bool forgetSkillOk(uint skid);
	bool addSkillExp(uint skid,uint uExp,ItemUseFlag flag);
	bool babyLearnSkillOK(uint instId,uint newSkId);
	bool skillLevelUp(uint instId,COM_Skill inst);
	bool joinScene(COM_SceneInfo info);
	bool joinCopySceneOK(int secneid);
	bool initCopyNums();
	bool addToScene(COM_ScenePlayerInformation inst);
	bool delFormScene(int instId);
	bool move2(int instId,COM_FPosition pos);
	bool cantMove();
	bool querySimplePlayerInstOk(COM_SimplePlayerInst player);
	bool transfor2(int instId,COM_FPosition pos);
	bool openScene(int sceneId);
	bool autoBattleResult(bool isOk);
	bool talked2Npc(int npcId);
	bool talked2Player(int playerId);
	bool useItemOk(int itemId,int stack);
	bool syncBattleStatus(int playerId,bool inBattle);
	bool enterBattleOk(COM_InitBattle initBattle);
	bool exitBattleOk(BattleJudgeType bjt,COM_BattleOverClearing init);
	bool syncOrderOk(uint uid);
	bool syncOrderOkEX();
	bool syncOneTurnAction(COM_BattleReport reports);
	bool syncProperties(uint guid,COM_PropValue[] props);
	bool receiveChat(COM_ChatInfo info,COM_ContactInfo myinfo);
	bool requestAudioOk(int audioId,byte[] content);
	bool publishItemInstRes(COM_ShowItemInstInfo info,ChatKind type);
	bool queryItemInstRes(COM_ShowItemInst item);
	bool publishBabyInstRes(COM_ShowbabyInstInfo info,ChatKind type);
	bool queryBabyInstRes(COM_ShowbabyInst inst);
	bool setNoTalkTime(float t);
	bool addNpc(int[] npcList);
	bool delNpc(int[] npcList);
	bool setTeamLeader(int playerId,bool isLeader);
	bool initBag(COM_Item[] items);
	bool addBagItem(COM_Item item);
	bool delBagItem(ushort slot);
	bool updateBagItem(COM_Item item);
	bool depositItemOK(COM_Item item);
	bool getoutItemOK(ushort slot);
	bool depositBabyOK(COM_BabyInst baby);
	bool getoutBabyOK(ushort slot);
	bool sortItemStorageOK(COM_Item[] items);
	bool sortBabyStorageOK(uint[] babys);
	bool initItemStorage(ushort gridNum,COM_Item[] items);
	bool initBabyStorage(ushort gridNum,COM_BabyInst[] babys);
	bool openStorageGrid(StorageType tp,ushort gridNum);
	bool delStorageBabyOK(ushort slot);
	bool initPlayerEquips(COM_Item[] equips);
	bool wearEquipmentOk(uint target,COM_Item equip);
	bool scenePlayerWearEquipment(uint target,uint itemId);
	bool delEquipmentOk(uint target,uint itemInstId);
	bool scenePlayerDoffEquipment(uint target,uint itemId);
	bool sortBagItemOk();
	bool jointLobbyOk(COM_SimpleTeamInfo[] infos);
	bool exitLobbyOk();
	bool syncDelLobbyTeam(uint teamId);
	bool syncUpdateLobbyTeam(COM_SimpleTeamInfo info);
	bool syncAddLobbyTeam(COM_SimpleTeamInfo team);
	bool createTeamOk(COM_TeamInfo team);
	bool changeTeamOk(COM_TeamInfo team);
	bool joinTeamOk(COM_TeamInfo team);
	bool addTeamMember(COM_SimplePlayerInst info);
	bool delTeamMember(int instId);
	bool changeTeamLeaderOk(int uuid);
	bool exitTeamOk(bool iskick);
	bool updateTeam(COM_TeamInfo team);
	bool joinTeamRoomOK(COM_TeamInfo team);
	bool inviteJoinTeam(uint teamId,string name);
	bool syncTeamDirtyProp(int guid,COM_PropValue[] props);
	bool leaveTeamOk(int playerId);
	bool backTeamOK(int playerId);
	bool teamCallMemberBack();
	bool refuseBackTeamOk(int playerId);
	bool requestJoinTeamTranspond(string reqName);
	bool drawLotteryBoxRep(COM_Item[] items);
	bool addEmployee(COM_EmployeeInst employee);
	bool battleEmployee(int empId,EmployeesBattleGroup group,bool forbattle);
	bool changeEmpBattleGroupOK(EmployeesBattleGroup group);
	bool evolveOK(int guid,QualityColor qc);
	bool upStarOK(int guid,int star,COM_Skill sk);
	bool delEmployeeOK(uint[] instids);
	bool sycnEmployeeSoul(int guid,uint soulNum);
	bool initQuest(COM_QuestInst[] qlist,int[] clist);
	bool acceptQuestOk(COM_QuestInst inst);
	bool submitQuestOk(int questId);
	bool giveupQuestOk(int questId);
	bool updateQuestInst(COM_QuestInst inst);
	bool requestContactInfoOk(COM_ContactInfo contact);
	bool addFriendOK(COM_ContactInfo inst);
	bool delFriendOK(uint instId);
	bool addBlacklistOK(COM_ContactInfo inst);
	bool delBlacklistOK(uint instId);
	bool findFriendFail();
	bool referrFriendOK(COM_ContactInfo[] insts);
	bool requestFriendListOK(COM_ContactInfo[] insts);
	bool lotteryOk(int lotteryId,COM_DropItem[] dropItem);
	bool openGatherOK(COM_Gather gather);
	bool miningOk(COM_DropItem[] items,COM_Gather gather,uint gatherNum);
	bool openCompound(uint compoundId);
	bool compoundItemOk(COM_Item item);
	bool openBagGridOk(int num);
	bool requestChallengeOK(bool isOK);
	bool requestMySelfJJCDataOK(COM_EndlessStair info);
	bool requestRivalOK(COM_EndlessStair[] infos);
	bool rivalTimeOK();
	bool checkMsgOK(COM_SimplePlayerInst inst);
	bool requestMyAllbattleMsgOK(COM_JJCBattleMsg[] infos);
	bool myBattleMsgOK(COM_JJCBattleMsg info);
	bool requestJJCRankOK(uint myRank,COM_EndlessStair[] infos);
	bool requestLevelRankOK(uint myRank,COM_ContactInfo[] infos);
	bool requestBabyRankOK(uint myRank,COM_BabyRankData[] infos);
	bool requestEmpRankOK(uint myRank,COM_EmployeeRankData[] infos);
	bool requestPlayerFFRankOK(uint myRank,COM_ContactInfo[] infos);
	bool queryOnlinePlayerOK(bool isOnline);
	bool queryPlayerOK(COM_SimplePlayerInst inst);
	bool queryBabyOK(COM_BabyInst inst);
	bool queryEmployeeOK(COM_EmployeeInst inst);
	bool initGuide(uint guideMask);
	bool buyShopItemOk(int id);
	bool addPlayerTitle(int title);
	bool delPlayerTitle(int title);
	bool requestOpenBuyBox(float greenTime,float blueTime,int greenFreeNum);
	bool requestGreenBoxTimeOk();
	bool requestBlueBoxTimeOk();
	bool updateAchievementinfo(COM_Achievement achs);
	bool syncOpenSystemFlag(ulong flag);
	bool requestActivityRewardOK(uint ar);
	bool syncActivity(COM_ActivityTable table);
	bool updateActivityStatus(ActivityType type,bool open);
	bool updateActivityCounter(ActivityType type,int counter,int reward);
	bool syncExam(COM_Exam exam);
	bool syncExamAnswer(COM_Answer answer);
	bool petActivityNoNum(string name);
	bool syncHundredInfo(COM_HundredBattle hb);
	bool initSignUp(int[] info,int process,bool sign7,bool sign14,bool sign28);
	bool signUp(bool flag);
	bool requestSignupRewardOk7();
	bool requestSignupRewardOk14();
	bool requestSignupRewardOk28();
	bool sycnDoubleExpTime(bool isFlag,float times);
	bool sycnStates(COM_State[] states);
	bool requestpvprankOK(COM_ContactInfo[] infos);
	bool syncMyJJCTeamMember();
	bool startMatchingOK();
	bool stopMatchingOK(float times);
	bool updatePvpJJCinfo(COM_PlayerVsPlayer info);
	bool exitPvpJJCOk();
	bool syncEnemyPvpJJCPlayerInfo(COM_SimpleInformation info);
	bool syncEnemyPvpJJCTeamInfo(COM_SimpleInformation[] infos,uint teamID_);
	bool openWarriorchooseUI();
	bool warriorStartOK();
	bool warriorStopOK();
	bool syncWarriorEnemyTeamInfo(COM_SimpleInformation[] infos,uint teamID_);
	bool appendMail(COM_Mail[] mails);
	bool delMail(int mailId);
	bool updateMailOk(COM_Mail mail);
	bool boardcastNotice(string content,bool isGm);
	bool createGuildOK();
	bool delGuildOK();
	bool leaveGuildOk(string who,bool isKick);
	bool initGuildData(COM_Guild guild);
	bool initGuildMemberList(COM_GuildMember[] member);
	bool modifyGuildMemberList(COM_GuildMember member,ModifyListFlag flag);
	bool modifyGuildList(COM_GuildViewerData data,ModifyListFlag flag);
	bool queryGuildListResult(short page,short pageNum,COM_GuildViewerData[] guildList);
	bool inviteGuild(string sendName,string guildName);
	bool updateGuildShopItems(COM_GuildShopItem[] items);
	bool updateGuildBuilding(GuildBuildingType type,COM_GuildBuilding building);
	bool updateGuildMyMember(COM_GuildMember member);
	bool levelupGuildSkillOk(COM_Skill skInst);
	bool presentGuildItemOk(int val);
	bool progenitusAddExpOk(COM_GuildProgen mInst);
	bool setProgenitusPositionOk(int[] positions);
	bool updateGuildFundz(int val);
	bool updateGuildMemberContribution(int val);
	bool openGuildBattle(string otherName,int playerNum,int level,bool isLeft,int lstime);
	bool startGuildBattle(string otherName,int otherCon,int selfCon);
	bool closeGuildBattle(bool isWinner);
	bool syncGuildBattleWinCount(int myWin,int otherWin);
	bool initMySelling(COM_SellItem[] items);
	bool initMySelled(COM_SelledItem[] items);
	bool fetchSellingOk(COM_SellItem[] items,int total);
	bool fetchSellingOk2(COM_SellItem[] items,int total);
	bool sellingOk(COM_SellItem item);
	bool selledOk(COM_SelledItem item);
	bool unsellingOk(int sellid);
	bool redemptionSpreeOk();
	bool insertState(COM_State st);
	bool updattState(COM_State st);
	bool removeState(uint stid);
	bool requestFixItemOk(COM_Item item);
	bool makeDebirsItemOK();
	bool updateMagicItem(int level,int exp);
	bool changeMagicJobOk(JobType job);
	bool magicItemTupoOk(int level);
	bool zhuanpanOK(uint[] pond);
	bool updateZhuanpanNotice(COM_Zhuanpan zhuanp);
	bool sycnZhuanpanData(COM_ZhuanpanData data);
	bool copynonum(string name);
	bool sceneFilterOk(SceneFilterType[] sfType);
	bool wishingOK();
	bool shareWishOK(COM_Wish wish);
	bool leaderCloseDialogOk();
	bool startOnlineTime();
	bool requestOnlineTimeRewardOK(uint index);
	bool sycnVipflag(bool flag);
	bool buyFundOK(bool flag);
	bool requestFundRewardOK(uint level);
	bool firstRechargeOK(bool isFlag);
	bool firstRechargeGiftOK(bool isFlag);
	bool agencyActivity(ADType type,bool isFlag);
	bool updateFestival(COM_ADLoginTotal festival);
	bool updateSelfRecharge(COM_ADChargeTotal val);
	bool updateSysRecharge(COM_ADChargeTotal val);
	bool updateSelfDiscountStore(COM_ADDiscountStore val);
	bool updateSysDiscountStore(COM_ADDiscountStore val);
	bool updateSelfOnceRecharge(COM_ADChargeEvery val);
	bool updateSysOnceRecharge(COM_ADChargeEvery val);
	bool openCardOK(COM_ADCardsContent data);
	bool resetCardOK();
	bool sycnHotRole(COM_ADHotRole data);
	bool hotRoleBuyOk(ushort buyNum);
	bool updateSevenday(COM_Sevenday data);
	bool updateEmployeeActivity(COM_ADEmployeeTotal data);
	bool updateMinGiftActivity(COM_ADGiftBag data);
	bool updateIntegralShop(COM_IntegralData data);
	bool updateShowBaby(uint playerId,uint showBabyTableId,string showBabyName);
	bool updateMySelfRecharge(COM_ADChargeTotal val);
	bool verificationSMSOk(string phoneNumber);
	bool requestLevelGiftOK(int level);
	bool sycnConvertExp(int val);
	bool wearFuwenOk(COM_Item inst);
	bool takeoffFuwenOk(int slot);
	bool compFuwenOk();
	bool requestEmployeeQuestOk(COM_EmployeeQuestInst[] questList);
	bool acceptEmployeeQuestOk(COM_EmployeeQuestInst inst);
	bool submitEmployeeQuestOk(int questId,bool isSuccess);
	bool sycnCrystal(COM_CrystalData data);
	bool crystalUpLeveResult(bool isOK);
	bool resetCrystalPropOK();
	bool sycnCourseGift(COM_CourseGift[] data);
	bool orderOk(string orderId,int shopId);
	bool updateRandSubmitQuestCount(int submitCount);
	bool updateTeamMember(int playerId,bool isMember);
}
//=============================================================
public static class Server2ClientDispatcher
{
	public static bool pong(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.pong();
	}
	public static bool errorno(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ErrorNo e;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 158) return false;
			e = (ErrorNo)__e__;
		}
		return __p__.errorno(e);
	}
	public static bool teamerrorno(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string name;
		ErrorNo e;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 158) return false;
			e = (ErrorNo)__e__;
		}
		return __p__.teamerrorno(name,e);
	}
	public static bool reconnection(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ReconnectInfo recInfo = new COM_ReconnectInfo();
		{
			if(!recInfo.deserialize(__r__)) return false;
		}
		return __p__.reconnection(recInfo);
	}
	public static bool sessionfailed(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.sessionfailed();
	}
	public static bool loginok(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string sessionkey;
		COM_SimpleInformation[] players;
		{
			if(!bin.ProtocolReader.readType(__r__, out sessionkey, 65535)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			players = new COM_SimpleInformation[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				players[i] = new COM_SimpleInformation();
				if(!players[i].deserialize(__r__)) return false;
			}
		}
		return __p__.loginok(sessionkey,players);
	}
	public static bool logoutOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.logoutOk();
	}
	public static bool createPlayerOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimpleInformation player = new COM_SimpleInformation();
		{
			if(!player.deserialize(__r__)) return false;
		}
		return __p__.createPlayerOk(player);
	}
	public static bool deletePlayerOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.deletePlayerOk(name);
	}
	public static bool enterGameOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_PlayerInst inst = new COM_PlayerInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.enterGameOk(inst);
	}
	public static bool initBabies(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_BabyInst[] insts;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			insts = new COM_BabyInst[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				insts[i] = new COM_BabyInst();
				if(!insts[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initBabies(insts);
	}
	public static bool initEmployees(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_EmployeeInst[] insts;
		bool isFlag;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			insts = new COM_EmployeeInst[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				insts[i] = new COM_EmployeeInst();
				if(!insts[i].deserialize(__r__)) return false;
			}
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isFlag)) return false;
		}
		return __p__.initEmployees(insts,isFlag);
	}
	public static bool initEmpBattleGroup(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_BattleEmp bep = new COM_BattleEmp();
		{
			if(!bep.deserialize(__r__)) return false;
		}
		return __p__.initEmpBattleGroup(bep);
	}
	public static bool initNpc(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int[] npcList;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			npcList = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out npcList[i])) return false;
			}
		}
		return __p__.initNpc(npcList);
	}
	public static bool initAchievement(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Achievement[] actlist;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			actlist = new COM_Achievement[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				actlist[i] = new COM_Achievement();
				if(!actlist[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initAchievement(actlist);
	}
	public static bool initGather(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint allnum;
		COM_Gather[] gathers;
		{
			if(!bin.ProtocolReader.readType(__r__, out allnum)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			gathers = new COM_Gather[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				gathers[i] = new COM_Gather();
				if(!gathers[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initGather(allnum,gathers);
	}
	public static bool initcompound(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint[] compounds;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			compounds = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out compounds[i])) return false;
			}
		}
		return __p__.initcompound(compounds);
	}
	public static bool addBaby(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_BabyInst inst = new COM_BabyInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.addBaby(inst);
	}
	public static bool refreshBaby(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_BabyInst inst = new COM_BabyInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.refreshBaby(inst);
	}
	public static bool delBabyOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint babyInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out babyInstId)) return false;
		}
		return __p__.delBabyOK(babyInstId);
	}
	public static bool changeBabyNameOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint babyId;
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out babyId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.changeBabyNameOK(babyId,name);
	}
	public static bool remouldBabyOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.remouldBabyOK(instid);
	}
	public static bool intensifyBabyOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint babyid;
		uint intensifyLevel;
		{
			if(!bin.ProtocolReader.readType(__r__, out babyid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out intensifyLevel)) return false;
		}
		return __p__.intensifyBabyOK(babyid,intensifyLevel);
	}
	public static bool learnSkillOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Skill inst = new COM_Skill();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.learnSkillOk(inst);
	}
	public static bool forgetSkillOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint skid;
		{
			if(!bin.ProtocolReader.readType(__r__, out skid)) return false;
		}
		return __p__.forgetSkillOk(skid);
	}
	public static bool addSkillExp(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint skid;
		uint uExp;
		ItemUseFlag flag;
		{
			if(!bin.ProtocolReader.readType(__r__, out skid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out uExp)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 4) return false;
			flag = (ItemUseFlag)__e__;
		}
		return __p__.addSkillExp(skid,uExp,flag);
	}
	public static bool babyLearnSkillOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint instId;
		uint newSkId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out newSkId)) return false;
		}
		return __p__.babyLearnSkillOK(instId,newSkId);
	}
	public static bool skillLevelUp(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint instId;
		COM_Skill inst = new COM_Skill();
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.skillLevelUp(instId,inst);
	}
	public static bool joinScene(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SceneInfo info = new COM_SceneInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.joinScene(info);
	}
	public static bool joinCopySceneOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int secneid;
		{
			if(!bin.ProtocolReader.readType(__r__, out secneid)) return false;
		}
		return __p__.joinCopySceneOK(secneid);
	}
	public static bool initCopyNums(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.initCopyNums();
	}
	public static bool addToScene(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ScenePlayerInformation inst = new COM_ScenePlayerInformation();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.addToScene(inst);
	}
	public static bool delFormScene(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.delFormScene(instId);
	}
	public static bool move2(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int instId;
		COM_FPosition pos = new COM_FPosition();
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!pos.deserialize(__r__)) return false;
		}
		return __p__.move2(instId,pos);
	}
	public static bool cantMove(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.cantMove();
	}
	public static bool querySimplePlayerInstOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimplePlayerInst player = new COM_SimplePlayerInst();
		{
			if(!player.deserialize(__r__)) return false;
		}
		return __p__.querySimplePlayerInstOk(player);
	}
	public static bool transfor2(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int instId;
		COM_FPosition pos = new COM_FPosition();
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!pos.deserialize(__r__)) return false;
		}
		return __p__.transfor2(instId,pos);
	}
	public static bool openScene(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int sceneId;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		return __p__.openScene(sceneId);
	}
	public static bool autoBattleResult(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool isOk;
		{
			if(!bin.ProtocolReader.readType(__r__, out isOk)) return false;
		}
		return __p__.autoBattleResult(isOk);
	}
	public static bool talked2Npc(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int npcId;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcId)) return false;
		}
		return __p__.talked2Npc(npcId);
	}
	public static bool talked2Player(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.talked2Player(playerId);
	}
	public static bool useItemOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int itemId;
		int stack;
		{
			if(!bin.ProtocolReader.readType(__r__, out itemId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out stack)) return false;
		}
		return __p__.useItemOk(itemId,stack);
	}
	public static bool syncBattleStatus(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int playerId;
		bool inBattle;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out inBattle)) return false;
		}
		return __p__.syncBattleStatus(playerId,inBattle);
	}
	public static bool enterBattleOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_InitBattle initBattle = new COM_InitBattle();
		{
			if(!initBattle.deserialize(__r__)) return false;
		}
		return __p__.enterBattleOk(initBattle);
	}
	public static bool exitBattleOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		BattleJudgeType bjt;
		COM_BattleOverClearing init = new COM_BattleOverClearing();
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 4) return false;
			bjt = (BattleJudgeType)__e__;
		}
		{
			if(!init.deserialize(__r__)) return false;
		}
		return __p__.exitBattleOk(bjt,init);
	}
	public static bool syncOrderOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint uid;
		{
			if(!bin.ProtocolReader.readType(__r__, out uid)) return false;
		}
		return __p__.syncOrderOk(uid);
	}
	public static bool syncOrderOkEX(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.syncOrderOkEX();
	}
	public static bool syncOneTurnAction(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_BattleReport reports = new COM_BattleReport();
		{
			if(!reports.deserialize(__r__)) return false;
		}
		return __p__.syncOneTurnAction(reports);
	}
	public static bool syncProperties(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint guid;
		COM_PropValue[] props;
		{
			if(!bin.ProtocolReader.readType(__r__, out guid)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			props = new COM_PropValue[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				props[i] = new COM_PropValue();
				if(!props[i].deserialize(__r__)) return false;
			}
		}
		return __p__.syncProperties(guid,props);
	}
	public static bool receiveChat(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ChatInfo info = new COM_ChatInfo();
		COM_ContactInfo myinfo = new COM_ContactInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		{
			if(!myinfo.deserialize(__r__)) return false;
		}
		return __p__.receiveChat(info,myinfo);
	}
	public static bool requestAudioOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int audioId;
		byte[] content;
		{
			if(!bin.ProtocolReader.readType(__r__, out audioId)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			content = new byte[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out content[i])) return false;
			}
		}
		return __p__.requestAudioOk(audioId,content);
	}
	public static bool publishItemInstRes(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ShowItemInstInfo info = new COM_ShowItemInstInfo();
		ChatKind type;
		{
			if(!info.deserialize(__r__)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 8) return false;
			type = (ChatKind)__e__;
		}
		return __p__.publishItemInstRes(info,type);
	}
	public static bool queryItemInstRes(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ShowItemInst item = new COM_ShowItemInst();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.queryItemInstRes(item);
	}
	public static bool publishBabyInstRes(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ShowbabyInstInfo info = new COM_ShowbabyInstInfo();
		ChatKind type;
		{
			if(!info.deserialize(__r__)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 8) return false;
			type = (ChatKind)__e__;
		}
		return __p__.publishBabyInstRes(info,type);
	}
	public static bool queryBabyInstRes(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ShowbabyInst inst = new COM_ShowbabyInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.queryBabyInstRes(inst);
	}
	public static bool setNoTalkTime(bin.IReader __r__, Server2ClientProxy __p__)
	{
		float t;
		{
			if(!bin.ProtocolReader.readType(__r__, out t)) return false;
		}
		return __p__.setNoTalkTime(t);
	}
	public static bool addNpc(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int[] npcList;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			npcList = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out npcList[i])) return false;
			}
		}
		return __p__.addNpc(npcList);
	}
	public static bool delNpc(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int[] npcList;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			npcList = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out npcList[i])) return false;
			}
		}
		return __p__.delNpc(npcList);
	}
	public static bool setTeamLeader(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int playerId;
		bool isLeader;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isLeader)) return false;
		}
		return __p__.setTeamLeader(playerId,isLeader);
	}
	public static bool initBag(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item[] items;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_Item[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_Item();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initBag(items);
	}
	public static bool addBagItem(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item item = new COM_Item();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.addBagItem(item);
	}
	public static bool delBagItem(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ushort slot;
		{
			if(!bin.ProtocolReader.readType(__r__, out slot)) return false;
		}
		return __p__.delBagItem(slot);
	}
	public static bool updateBagItem(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item item = new COM_Item();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.updateBagItem(item);
	}
	public static bool depositItemOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item item = new COM_Item();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.depositItemOK(item);
	}
	public static bool getoutItemOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ushort slot;
		{
			if(!bin.ProtocolReader.readType(__r__, out slot)) return false;
		}
		return __p__.getoutItemOK(slot);
	}
	public static bool depositBabyOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_BabyInst baby = new COM_BabyInst();
		{
			if(!baby.deserialize(__r__)) return false;
		}
		return __p__.depositBabyOK(baby);
	}
	public static bool getoutBabyOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ushort slot;
		{
			if(!bin.ProtocolReader.readType(__r__, out slot)) return false;
		}
		return __p__.getoutBabyOK(slot);
	}
	public static bool sortItemStorageOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item[] items;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_Item[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_Item();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.sortItemStorageOK(items);
	}
	public static bool sortBabyStorageOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint[] babys;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			babys = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out babys[i])) return false;
			}
		}
		return __p__.sortBabyStorageOK(babys);
	}
	public static bool initItemStorage(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ushort gridNum;
		COM_Item[] items;
		{
			if(!bin.ProtocolReader.readType(__r__, out gridNum)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_Item[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_Item();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initItemStorage(gridNum,items);
	}
	public static bool initBabyStorage(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ushort gridNum;
		COM_BabyInst[] babys;
		{
			if(!bin.ProtocolReader.readType(__r__, out gridNum)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			babys = new COM_BabyInst[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				babys[i] = new COM_BabyInst();
				if(!babys[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initBabyStorage(gridNum,babys);
	}
	public static bool openStorageGrid(bin.IReader __r__, Server2ClientProxy __p__)
	{
		StorageType tp;
		ushort gridNum;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 2) return false;
			tp = (StorageType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out gridNum)) return false;
		}
		return __p__.openStorageGrid(tp,gridNum);
	}
	public static bool delStorageBabyOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ushort slot;
		{
			if(!bin.ProtocolReader.readType(__r__, out slot)) return false;
		}
		return __p__.delStorageBabyOK(slot);
	}
	public static bool initPlayerEquips(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item[] equips;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			equips = new COM_Item[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				equips[i] = new COM_Item();
				if(!equips[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initPlayerEquips(equips);
	}
	public static bool wearEquipmentOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint target;
		COM_Item equip = new COM_Item();
		{
			if(!bin.ProtocolReader.readType(__r__, out target)) return false;
		}
		{
			if(!equip.deserialize(__r__)) return false;
		}
		return __p__.wearEquipmentOk(target,equip);
	}
	public static bool scenePlayerWearEquipment(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint target;
		uint itemId;
		{
			if(!bin.ProtocolReader.readType(__r__, out target)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itemId)) return false;
		}
		return __p__.scenePlayerWearEquipment(target,itemId);
	}
	public static bool delEquipmentOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint target;
		uint itemInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out target)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itemInstId)) return false;
		}
		return __p__.delEquipmentOk(target,itemInstId);
	}
	public static bool scenePlayerDoffEquipment(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint target;
		uint itemId;
		{
			if(!bin.ProtocolReader.readType(__r__, out target)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itemId)) return false;
		}
		return __p__.scenePlayerDoffEquipment(target,itemId);
	}
	public static bool sortBagItemOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.sortBagItemOk();
	}
	public static bool jointLobbyOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimpleTeamInfo[] infos;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_SimpleTeamInfo[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_SimpleTeamInfo();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.jointLobbyOk(infos);
	}
	public static bool exitLobbyOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.exitLobbyOk();
	}
	public static bool syncDelLobbyTeam(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint teamId;
		{
			if(!bin.ProtocolReader.readType(__r__, out teamId)) return false;
		}
		return __p__.syncDelLobbyTeam(teamId);
	}
	public static bool syncUpdateLobbyTeam(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimpleTeamInfo info = new COM_SimpleTeamInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.syncUpdateLobbyTeam(info);
	}
	public static bool syncAddLobbyTeam(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimpleTeamInfo team = new COM_SimpleTeamInfo();
		{
			if(!team.deserialize(__r__)) return false;
		}
		return __p__.syncAddLobbyTeam(team);
	}
	public static bool createTeamOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_TeamInfo team = new COM_TeamInfo();
		{
			if(!team.deserialize(__r__)) return false;
		}
		return __p__.createTeamOk(team);
	}
	public static bool changeTeamOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_TeamInfo team = new COM_TeamInfo();
		{
			if(!team.deserialize(__r__)) return false;
		}
		return __p__.changeTeamOk(team);
	}
	public static bool joinTeamOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_TeamInfo team = new COM_TeamInfo();
		{
			if(!team.deserialize(__r__)) return false;
		}
		return __p__.joinTeamOk(team);
	}
	public static bool addTeamMember(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimplePlayerInst info = new COM_SimplePlayerInst();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.addTeamMember(info);
	}
	public static bool delTeamMember(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.delTeamMember(instId);
	}
	public static bool changeTeamLeaderOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int uuid;
		{
			if(!bin.ProtocolReader.readType(__r__, out uuid)) return false;
		}
		return __p__.changeTeamLeaderOk(uuid);
	}
	public static bool exitTeamOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool iskick;
		{
			if(!bin.ProtocolReader.readType(__r__, out iskick)) return false;
		}
		return __p__.exitTeamOk(iskick);
	}
	public static bool updateTeam(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_TeamInfo team = new COM_TeamInfo();
		{
			if(!team.deserialize(__r__)) return false;
		}
		return __p__.updateTeam(team);
	}
	public static bool joinTeamRoomOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_TeamInfo team = new COM_TeamInfo();
		{
			if(!team.deserialize(__r__)) return false;
		}
		return __p__.joinTeamRoomOK(team);
	}
	public static bool inviteJoinTeam(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint teamId;
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out teamId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.inviteJoinTeam(teamId,name);
	}
	public static bool syncTeamDirtyProp(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int guid;
		COM_PropValue[] props;
		{
			if(!bin.ProtocolReader.readType(__r__, out guid)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			props = new COM_PropValue[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				props[i] = new COM_PropValue();
				if(!props[i].deserialize(__r__)) return false;
			}
		}
		return __p__.syncTeamDirtyProp(guid,props);
	}
	public static bool leaveTeamOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.leaveTeamOk(playerId);
	}
	public static bool backTeamOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.backTeamOK(playerId);
	}
	public static bool teamCallMemberBack(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.teamCallMemberBack();
	}
	public static bool refuseBackTeamOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.refuseBackTeamOk(playerId);
	}
	public static bool requestJoinTeamTranspond(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string reqName;
		{
			if(!bin.ProtocolReader.readType(__r__, out reqName, 65535)) return false;
		}
		return __p__.requestJoinTeamTranspond(reqName);
	}
	public static bool drawLotteryBoxRep(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item[] items;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_Item[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_Item();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.drawLotteryBoxRep(items);
	}
	public static bool addEmployee(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_EmployeeInst employee = new COM_EmployeeInst();
		{
			if(!employee.deserialize(__r__)) return false;
		}
		return __p__.addEmployee(employee);
	}
	public static bool battleEmployee(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int empId;
		EmployeesBattleGroup group;
		bool forbattle;
		{
			if(!bin.ProtocolReader.readType(__r__, out empId)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 5) return false;
			group = (EmployeesBattleGroup)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out forbattle)) return false;
		}
		return __p__.battleEmployee(empId,group,forbattle);
	}
	public static bool changeEmpBattleGroupOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		EmployeesBattleGroup group;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 5) return false;
			group = (EmployeesBattleGroup)__e__;
		}
		return __p__.changeEmpBattleGroupOK(group);
	}
	public static bool evolveOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int guid;
		QualityColor qc;
		{
			if(!bin.ProtocolReader.readType(__r__, out guid)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 16) return false;
			qc = (QualityColor)__e__;
		}
		return __p__.evolveOK(guid,qc);
	}
	public static bool upStarOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int guid;
		int star;
		COM_Skill sk = new COM_Skill();
		{
			if(!bin.ProtocolReader.readType(__r__, out guid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out star)) return false;
		}
		{
			if(!sk.deserialize(__r__)) return false;
		}
		return __p__.upStarOK(guid,star,sk);
	}
	public static bool delEmployeeOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint[] instids;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			instids = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out instids[i])) return false;
			}
		}
		return __p__.delEmployeeOK(instids);
	}
	public static bool sycnEmployeeSoul(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int guid;
		uint soulNum;
		{
			if(!bin.ProtocolReader.readType(__r__, out guid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out soulNum)) return false;
		}
		return __p__.sycnEmployeeSoul(guid,soulNum);
	}
	public static bool initQuest(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_QuestInst[] qlist;
		int[] clist;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			qlist = new COM_QuestInst[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				qlist[i] = new COM_QuestInst();
				if(!qlist[i].deserialize(__r__)) return false;
			}
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			clist = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out clist[i])) return false;
			}
		}
		return __p__.initQuest(qlist,clist);
	}
	public static bool acceptQuestOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_QuestInst inst = new COM_QuestInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.acceptQuestOk(inst);
	}
	public static bool submitQuestOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.submitQuestOk(questId);
	}
	public static bool giveupQuestOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.giveupQuestOk(questId);
	}
	public static bool updateQuestInst(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_QuestInst inst = new COM_QuestInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.updateQuestInst(inst);
	}
	public static bool requestContactInfoOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ContactInfo contact = new COM_ContactInfo();
		{
			if(!contact.deserialize(__r__)) return false;
		}
		return __p__.requestContactInfoOk(contact);
	}
	public static bool addFriendOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ContactInfo inst = new COM_ContactInfo();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.addFriendOK(inst);
	}
	public static bool delFriendOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.delFriendOK(instId);
	}
	public static bool addBlacklistOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ContactInfo inst = new COM_ContactInfo();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.addBlacklistOK(inst);
	}
	public static bool delBlacklistOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.delBlacklistOK(instId);
	}
	public static bool findFriendFail(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.findFriendFail();
	}
	public static bool referrFriendOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ContactInfo[] insts;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			insts = new COM_ContactInfo[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				insts[i] = new COM_ContactInfo();
				if(!insts[i].deserialize(__r__)) return false;
			}
		}
		return __p__.referrFriendOK(insts);
	}
	public static bool requestFriendListOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ContactInfo[] insts;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			insts = new COM_ContactInfo[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				insts[i] = new COM_ContactInfo();
				if(!insts[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestFriendListOK(insts);
	}
	public static bool lotteryOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int lotteryId;
		COM_DropItem[] dropItem;
		{
			if(!bin.ProtocolReader.readType(__r__, out lotteryId)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			dropItem = new COM_DropItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				dropItem[i] = new COM_DropItem();
				if(!dropItem[i].deserialize(__r__)) return false;
			}
		}
		return __p__.lotteryOk(lotteryId,dropItem);
	}
	public static bool openGatherOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Gather gather = new COM_Gather();
		{
			if(!gather.deserialize(__r__)) return false;
		}
		return __p__.openGatherOK(gather);
	}
	public static bool miningOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_DropItem[] items;
		COM_Gather gather = new COM_Gather();
		uint gatherNum;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_DropItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_DropItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		{
			if(!gather.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out gatherNum)) return false;
		}
		return __p__.miningOk(items,gather,gatherNum);
	}
	public static bool openCompound(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint compoundId;
		{
			if(!bin.ProtocolReader.readType(__r__, out compoundId)) return false;
		}
		return __p__.openCompound(compoundId);
	}
	public static bool compoundItemOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item item = new COM_Item();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.compoundItemOk(item);
	}
	public static bool openBagGridOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int num;
		{
			if(!bin.ProtocolReader.readType(__r__, out num)) return false;
		}
		return __p__.openBagGridOk(num);
	}
	public static bool requestChallengeOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool isOK;
		{
			if(!bin.ProtocolReader.readType(__r__, out isOK)) return false;
		}
		return __p__.requestChallengeOK(isOK);
	}
	public static bool requestMySelfJJCDataOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_EndlessStair info = new COM_EndlessStair();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.requestMySelfJJCDataOK(info);
	}
	public static bool requestRivalOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_EndlessStair[] infos;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_EndlessStair[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_EndlessStair();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestRivalOK(infos);
	}
	public static bool rivalTimeOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.rivalTimeOK();
	}
	public static bool checkMsgOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimplePlayerInst inst = new COM_SimplePlayerInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.checkMsgOK(inst);
	}
	public static bool requestMyAllbattleMsgOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_JJCBattleMsg[] infos;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_JJCBattleMsg[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_JJCBattleMsg();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestMyAllbattleMsgOK(infos);
	}
	public static bool myBattleMsgOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_JJCBattleMsg info = new COM_JJCBattleMsg();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.myBattleMsgOK(info);
	}
	public static bool requestJJCRankOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint myRank;
		COM_EndlessStair[] infos;
		{
			if(!bin.ProtocolReader.readType(__r__, out myRank)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_EndlessStair[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_EndlessStair();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestJJCRankOK(myRank,infos);
	}
	public static bool requestLevelRankOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint myRank;
		COM_ContactInfo[] infos;
		{
			if(!bin.ProtocolReader.readType(__r__, out myRank)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_ContactInfo[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_ContactInfo();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestLevelRankOK(myRank,infos);
	}
	public static bool requestBabyRankOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint myRank;
		COM_BabyRankData[] infos;
		{
			if(!bin.ProtocolReader.readType(__r__, out myRank)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_BabyRankData[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_BabyRankData();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestBabyRankOK(myRank,infos);
	}
	public static bool requestEmpRankOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint myRank;
		COM_EmployeeRankData[] infos;
		{
			if(!bin.ProtocolReader.readType(__r__, out myRank)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_EmployeeRankData[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_EmployeeRankData();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestEmpRankOK(myRank,infos);
	}
	public static bool requestPlayerFFRankOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint myRank;
		COM_ContactInfo[] infos;
		{
			if(!bin.ProtocolReader.readType(__r__, out myRank)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_ContactInfo[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_ContactInfo();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestPlayerFFRankOK(myRank,infos);
	}
	public static bool queryOnlinePlayerOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool isOnline;
		{
			if(!bin.ProtocolReader.readType(__r__, out isOnline)) return false;
		}
		return __p__.queryOnlinePlayerOK(isOnline);
	}
	public static bool queryPlayerOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimplePlayerInst inst = new COM_SimplePlayerInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.queryPlayerOK(inst);
	}
	public static bool queryBabyOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_BabyInst inst = new COM_BabyInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.queryBabyOK(inst);
	}
	public static bool queryEmployeeOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_EmployeeInst inst = new COM_EmployeeInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.queryEmployeeOK(inst);
	}
	public static bool initGuide(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint guideMask;
		{
			if(!bin.ProtocolReader.readType(__r__, out guideMask)) return false;
		}
		return __p__.initGuide(guideMask);
	}
	public static bool buyShopItemOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int id;
		{
			if(!bin.ProtocolReader.readType(__r__, out id)) return false;
		}
		return __p__.buyShopItemOk(id);
	}
	public static bool addPlayerTitle(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int title;
		{
			if(!bin.ProtocolReader.readType(__r__, out title)) return false;
		}
		return __p__.addPlayerTitle(title);
	}
	public static bool delPlayerTitle(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int title;
		{
			if(!bin.ProtocolReader.readType(__r__, out title)) return false;
		}
		return __p__.delPlayerTitle(title);
	}
	public static bool requestOpenBuyBox(bin.IReader __r__, Server2ClientProxy __p__)
	{
		float greenTime;
		float blueTime;
		int greenFreeNum;
		{
			if(!bin.ProtocolReader.readType(__r__, out greenTime)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out blueTime)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out greenFreeNum)) return false;
		}
		return __p__.requestOpenBuyBox(greenTime,blueTime,greenFreeNum);
	}
	public static bool requestGreenBoxTimeOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.requestGreenBoxTimeOk();
	}
	public static bool requestBlueBoxTimeOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.requestBlueBoxTimeOk();
	}
	public static bool updateAchievementinfo(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Achievement achs = new COM_Achievement();
		{
			if(!achs.deserialize(__r__)) return false;
		}
		return __p__.updateAchievementinfo(achs);
	}
	public static bool syncOpenSystemFlag(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ulong flag;
		{
			if(!bin.ProtocolReader.readType(__r__, out flag)) return false;
		}
		return __p__.syncOpenSystemFlag(flag);
	}
	public static bool requestActivityRewardOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint ar;
		{
			if(!bin.ProtocolReader.readType(__r__, out ar)) return false;
		}
		return __p__.requestActivityRewardOK(ar);
	}
	public static bool syncActivity(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ActivityTable table = new COM_ActivityTable();
		{
			if(!table.deserialize(__r__)) return false;
		}
		return __p__.syncActivity(table);
	}
	public static bool updateActivityStatus(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ActivityType type;
		bool open;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 21) return false;
			type = (ActivityType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out open)) return false;
		}
		return __p__.updateActivityStatus(type,open);
	}
	public static bool updateActivityCounter(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ActivityType type;
		int counter;
		int reward;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 21) return false;
			type = (ActivityType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out counter)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out reward)) return false;
		}
		return __p__.updateActivityCounter(type,counter,reward);
	}
	public static bool syncExam(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Exam exam = new COM_Exam();
		{
			if(!exam.deserialize(__r__)) return false;
		}
		return __p__.syncExam(exam);
	}
	public static bool syncExamAnswer(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Answer answer = new COM_Answer();
		{
			if(!answer.deserialize(__r__)) return false;
		}
		return __p__.syncExamAnswer(answer);
	}
	public static bool petActivityNoNum(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.petActivityNoNum(name);
	}
	public static bool syncHundredInfo(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_HundredBattle hb = new COM_HundredBattle();
		{
			if(!hb.deserialize(__r__)) return false;
		}
		return __p__.syncHundredInfo(hb);
	}
	public static bool initSignUp(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int[] info;
		int process;
		bool sign7;
		bool sign14;
		bool sign28;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			info = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out info[i])) return false;
			}
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out process)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out sign7)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out sign14)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out sign28)) return false;
		}
		return __p__.initSignUp(info,process,sign7,sign14,sign28);
	}
	public static bool signUp(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool flag;
		{
			if(!bin.ProtocolReader.readType(__r__, out flag)) return false;
		}
		return __p__.signUp(flag);
	}
	public static bool requestSignupRewardOk7(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.requestSignupRewardOk7();
	}
	public static bool requestSignupRewardOk14(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.requestSignupRewardOk14();
	}
	public static bool requestSignupRewardOk28(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.requestSignupRewardOk28();
	}
	public static bool sycnDoubleExpTime(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool isFlag;
		float times;
		{
			if(!bin.ProtocolReader.readType(__r__, out isFlag)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out times)) return false;
		}
		return __p__.sycnDoubleExpTime(isFlag,times);
	}
	public static bool sycnStates(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_State[] states;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			states = new COM_State[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				states[i] = new COM_State();
				if(!states[i].deserialize(__r__)) return false;
			}
		}
		return __p__.sycnStates(states);
	}
	public static bool requestpvprankOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ContactInfo[] infos;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_ContactInfo[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_ContactInfo();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestpvprankOK(infos);
	}
	public static bool syncMyJJCTeamMember(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.syncMyJJCTeamMember();
	}
	public static bool startMatchingOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.startMatchingOK();
	}
	public static bool stopMatchingOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		float times;
		{
			if(!bin.ProtocolReader.readType(__r__, out times)) return false;
		}
		return __p__.stopMatchingOK(times);
	}
	public static bool updatePvpJJCinfo(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_PlayerVsPlayer info = new COM_PlayerVsPlayer();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.updatePvpJJCinfo(info);
	}
	public static bool exitPvpJJCOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.exitPvpJJCOk();
	}
	public static bool syncEnemyPvpJJCPlayerInfo(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimpleInformation info = new COM_SimpleInformation();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.syncEnemyPvpJJCPlayerInfo(info);
	}
	public static bool syncEnemyPvpJJCTeamInfo(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimpleInformation[] infos;
		uint teamID_;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_SimpleInformation[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_SimpleInformation();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out teamID_)) return false;
		}
		return __p__.syncEnemyPvpJJCTeamInfo(infos,teamID_);
	}
	public static bool openWarriorchooseUI(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.openWarriorchooseUI();
	}
	public static bool warriorStartOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.warriorStartOK();
	}
	public static bool warriorStopOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.warriorStopOK();
	}
	public static bool syncWarriorEnemyTeamInfo(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SimpleInformation[] infos;
		uint teamID_;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_SimpleInformation[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_SimpleInformation();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out teamID_)) return false;
		}
		return __p__.syncWarriorEnemyTeamInfo(infos,teamID_);
	}
	public static bool appendMail(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Mail[] mails;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			mails = new COM_Mail[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				mails[i] = new COM_Mail();
				if(!mails[i].deserialize(__r__)) return false;
			}
		}
		return __p__.appendMail(mails);
	}
	public static bool delMail(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int mailId;
		{
			if(!bin.ProtocolReader.readType(__r__, out mailId)) return false;
		}
		return __p__.delMail(mailId);
	}
	public static bool updateMailOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Mail mail = new COM_Mail();
		{
			if(!mail.deserialize(__r__)) return false;
		}
		return __p__.updateMailOk(mail);
	}
	public static bool boardcastNotice(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string content;
		bool isGm;
		{
			if(!bin.ProtocolReader.readType(__r__, out content, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isGm)) return false;
		}
		return __p__.boardcastNotice(content,isGm);
	}
	public static bool createGuildOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.createGuildOK();
	}
	public static bool delGuildOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.delGuildOK();
	}
	public static bool leaveGuildOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string who;
		bool isKick;
		{
			if(!bin.ProtocolReader.readType(__r__, out who, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isKick)) return false;
		}
		return __p__.leaveGuildOk(who,isKick);
	}
	public static bool initGuildData(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Guild guild = new COM_Guild();
		{
			if(!guild.deserialize(__r__)) return false;
		}
		return __p__.initGuildData(guild);
	}
	public static bool initGuildMemberList(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_GuildMember[] member;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			member = new COM_GuildMember[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				member[i] = new COM_GuildMember();
				if(!member[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initGuildMemberList(member);
	}
	public static bool modifyGuildMemberList(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_GuildMember member = new COM_GuildMember();
		ModifyListFlag flag;
		{
			if(!member.deserialize(__r__)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 9) return false;
			flag = (ModifyListFlag)__e__;
		}
		return __p__.modifyGuildMemberList(member,flag);
	}
	public static bool modifyGuildList(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_GuildViewerData data = new COM_GuildViewerData();
		ModifyListFlag flag;
		{
			if(!data.deserialize(__r__)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 9) return false;
			flag = (ModifyListFlag)__e__;
		}
		return __p__.modifyGuildList(data,flag);
	}
	public static bool queryGuildListResult(bin.IReader __r__, Server2ClientProxy __p__)
	{
		short page;
		short pageNum;
		COM_GuildViewerData[] guildList;
		{
			if(!bin.ProtocolReader.readType(__r__, out page)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out pageNum)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			guildList = new COM_GuildViewerData[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				guildList[i] = new COM_GuildViewerData();
				if(!guildList[i].deserialize(__r__)) return false;
			}
		}
		return __p__.queryGuildListResult(page,pageNum,guildList);
	}
	public static bool inviteGuild(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string sendName;
		string guildName;
		{
			if(!bin.ProtocolReader.readType(__r__, out sendName, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out guildName, 65535)) return false;
		}
		return __p__.inviteGuild(sendName,guildName);
	}
	public static bool updateGuildShopItems(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_GuildShopItem[] items;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_GuildShopItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_GuildShopItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.updateGuildShopItems(items);
	}
	public static bool updateGuildBuilding(bin.IReader __r__, Server2ClientProxy __p__)
	{
		GuildBuildingType type;
		COM_GuildBuilding building = new COM_GuildBuilding();
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 8) return false;
			type = (GuildBuildingType)__e__;
		}
		{
			if(!building.deserialize(__r__)) return false;
		}
		return __p__.updateGuildBuilding(type,building);
	}
	public static bool updateGuildMyMember(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_GuildMember member = new COM_GuildMember();
		{
			if(!member.deserialize(__r__)) return false;
		}
		return __p__.updateGuildMyMember(member);
	}
	public static bool levelupGuildSkillOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Skill skInst = new COM_Skill();
		{
			if(!skInst.deserialize(__r__)) return false;
		}
		return __p__.levelupGuildSkillOk(skInst);
	}
	public static bool presentGuildItemOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int val;
		{
			if(!bin.ProtocolReader.readType(__r__, out val)) return false;
		}
		return __p__.presentGuildItemOk(val);
	}
	public static bool progenitusAddExpOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_GuildProgen mInst = new COM_GuildProgen();
		{
			if(!mInst.deserialize(__r__)) return false;
		}
		return __p__.progenitusAddExpOk(mInst);
	}
	public static bool setProgenitusPositionOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int[] positions;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			positions = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out positions[i])) return false;
			}
		}
		return __p__.setProgenitusPositionOk(positions);
	}
	public static bool updateGuildFundz(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int val;
		{
			if(!bin.ProtocolReader.readType(__r__, out val)) return false;
		}
		return __p__.updateGuildFundz(val);
	}
	public static bool updateGuildMemberContribution(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int val;
		{
			if(!bin.ProtocolReader.readType(__r__, out val)) return false;
		}
		return __p__.updateGuildMemberContribution(val);
	}
	public static bool openGuildBattle(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string otherName;
		int playerNum;
		int level;
		bool isLeft;
		int lstime;
		{
			if(!bin.ProtocolReader.readType(__r__, out otherName, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out playerNum)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isLeft)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out lstime)) return false;
		}
		return __p__.openGuildBattle(otherName,playerNum,level,isLeft,lstime);
	}
	public static bool startGuildBattle(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string otherName;
		int otherCon;
		int selfCon;
		{
			if(!bin.ProtocolReader.readType(__r__, out otherName, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out otherCon)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out selfCon)) return false;
		}
		return __p__.startGuildBattle(otherName,otherCon,selfCon);
	}
	public static bool closeGuildBattle(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool isWinner;
		{
			if(!bin.ProtocolReader.readType(__r__, out isWinner)) return false;
		}
		return __p__.closeGuildBattle(isWinner);
	}
	public static bool syncGuildBattleWinCount(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int myWin;
		int otherWin;
		{
			if(!bin.ProtocolReader.readType(__r__, out myWin)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out otherWin)) return false;
		}
		return __p__.syncGuildBattleWinCount(myWin,otherWin);
	}
	public static bool initMySelling(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SellItem[] items;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_SellItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_SellItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initMySelling(items);
	}
	public static bool initMySelled(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SelledItem[] items;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_SelledItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_SelledItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.initMySelled(items);
	}
	public static bool fetchSellingOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SellItem[] items;
		int total;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_SellItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_SellItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out total)) return false;
		}
		return __p__.fetchSellingOk(items,total);
	}
	public static bool fetchSellingOk2(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SellItem[] items;
		int total;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_SellItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_SellItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out total)) return false;
		}
		return __p__.fetchSellingOk2(items,total);
	}
	public static bool sellingOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SellItem item = new COM_SellItem();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.sellingOk(item);
	}
	public static bool selledOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_SelledItem item = new COM_SelledItem();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.selledOk(item);
	}
	public static bool unsellingOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int sellid;
		{
			if(!bin.ProtocolReader.readType(__r__, out sellid)) return false;
		}
		return __p__.unsellingOk(sellid);
	}
	public static bool redemptionSpreeOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.redemptionSpreeOk();
	}
	public static bool insertState(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_State st = new COM_State();
		{
			if(!st.deserialize(__r__)) return false;
		}
		return __p__.insertState(st);
	}
	public static bool updattState(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_State st = new COM_State();
		{
			if(!st.deserialize(__r__)) return false;
		}
		return __p__.updattState(st);
	}
	public static bool removeState(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint stid;
		{
			if(!bin.ProtocolReader.readType(__r__, out stid)) return false;
		}
		return __p__.removeState(stid);
	}
	public static bool requestFixItemOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item item = new COM_Item();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.requestFixItemOk(item);
	}
	public static bool makeDebirsItemOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.makeDebirsItemOK();
	}
	public static bool updateMagicItem(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int level;
		int exp;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out exp)) return false;
		}
		return __p__.updateMagicItem(level,exp);
	}
	public static bool changeMagicJobOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		JobType job;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 12) return false;
			job = (JobType)__e__;
		}
		return __p__.changeMagicJobOk(job);
	}
	public static bool magicItemTupoOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int level;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		return __p__.magicItemTupoOk(level);
	}
	public static bool zhuanpanOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint[] pond;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			pond = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out pond[i])) return false;
			}
		}
		return __p__.zhuanpanOK(pond);
	}
	public static bool updateZhuanpanNotice(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Zhuanpan zhuanp = new COM_Zhuanpan();
		{
			if(!zhuanp.deserialize(__r__)) return false;
		}
		return __p__.updateZhuanpanNotice(zhuanp);
	}
	public static bool sycnZhuanpanData(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ZhuanpanData data = new COM_ZhuanpanData();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.sycnZhuanpanData(data);
	}
	public static bool copynonum(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.copynonum(name);
	}
	public static bool sceneFilterOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		SceneFilterType[] sfType;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			sfType = new SceneFilterType[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				byte __e__;
				if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 6) return false;
				sfType[i] = (SceneFilterType)__e__;
			}
		}
		return __p__.sceneFilterOk(sfType);
	}
	public static bool wishingOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.wishingOK();
	}
	public static bool shareWishOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Wish wish = new COM_Wish();
		{
			if(!wish.deserialize(__r__)) return false;
		}
		return __p__.shareWishOK(wish);
	}
	public static bool leaderCloseDialogOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.leaderCloseDialogOk();
	}
	public static bool startOnlineTime(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.startOnlineTime();
	}
	public static bool requestOnlineTimeRewardOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint index;
		{
			if(!bin.ProtocolReader.readType(__r__, out index)) return false;
		}
		return __p__.requestOnlineTimeRewardOK(index);
	}
	public static bool sycnVipflag(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool flag;
		{
			if(!bin.ProtocolReader.readType(__r__, out flag)) return false;
		}
		return __p__.sycnVipflag(flag);
	}
	public static bool buyFundOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool flag;
		{
			if(!bin.ProtocolReader.readType(__r__, out flag)) return false;
		}
		return __p__.buyFundOK(flag);
	}
	public static bool requestFundRewardOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint level;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		return __p__.requestFundRewardOK(level);
	}
	public static bool firstRechargeOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool isFlag;
		{
			if(!bin.ProtocolReader.readType(__r__, out isFlag)) return false;
		}
		return __p__.firstRechargeOK(isFlag);
	}
	public static bool firstRechargeGiftOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool isFlag;
		{
			if(!bin.ProtocolReader.readType(__r__, out isFlag)) return false;
		}
		return __p__.firstRechargeGiftOK(isFlag);
	}
	public static bool agencyActivity(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ADType type;
		bool isFlag;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 21) return false;
			type = (ADType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isFlag)) return false;
		}
		return __p__.agencyActivity(type,isFlag);
	}
	public static bool updateFestival(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADLoginTotal festival = new COM_ADLoginTotal();
		{
			if(!festival.deserialize(__r__)) return false;
		}
		return __p__.updateFestival(festival);
	}
	public static bool updateSelfRecharge(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADChargeTotal val = new COM_ADChargeTotal();
		{
			if(!val.deserialize(__r__)) return false;
		}
		return __p__.updateSelfRecharge(val);
	}
	public static bool updateSysRecharge(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADChargeTotal val = new COM_ADChargeTotal();
		{
			if(!val.deserialize(__r__)) return false;
		}
		return __p__.updateSysRecharge(val);
	}
	public static bool updateSelfDiscountStore(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADDiscountStore val = new COM_ADDiscountStore();
		{
			if(!val.deserialize(__r__)) return false;
		}
		return __p__.updateSelfDiscountStore(val);
	}
	public static bool updateSysDiscountStore(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADDiscountStore val = new COM_ADDiscountStore();
		{
			if(!val.deserialize(__r__)) return false;
		}
		return __p__.updateSysDiscountStore(val);
	}
	public static bool updateSelfOnceRecharge(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADChargeEvery val = new COM_ADChargeEvery();
		{
			if(!val.deserialize(__r__)) return false;
		}
		return __p__.updateSelfOnceRecharge(val);
	}
	public static bool updateSysOnceRecharge(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADChargeEvery val = new COM_ADChargeEvery();
		{
			if(!val.deserialize(__r__)) return false;
		}
		return __p__.updateSysOnceRecharge(val);
	}
	public static bool openCardOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADCardsContent data = new COM_ADCardsContent();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.openCardOK(data);
	}
	public static bool resetCardOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.resetCardOK();
	}
	public static bool sycnHotRole(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADHotRole data = new COM_ADHotRole();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.sycnHotRole(data);
	}
	public static bool hotRoleBuyOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		ushort buyNum;
		{
			if(!bin.ProtocolReader.readType(__r__, out buyNum)) return false;
		}
		return __p__.hotRoleBuyOk(buyNum);
	}
	public static bool updateSevenday(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Sevenday data = new COM_Sevenday();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.updateSevenday(data);
	}
	public static bool updateEmployeeActivity(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADEmployeeTotal data = new COM_ADEmployeeTotal();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.updateEmployeeActivity(data);
	}
	public static bool updateMinGiftActivity(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADGiftBag data = new COM_ADGiftBag();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.updateMinGiftActivity(data);
	}
	public static bool updateIntegralShop(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_IntegralData data = new COM_IntegralData();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.updateIntegralShop(data);
	}
	public static bool updateShowBaby(bin.IReader __r__, Server2ClientProxy __p__)
	{
		uint playerId;
		uint showBabyTableId;
		string showBabyName;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out showBabyTableId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out showBabyName, 65535)) return false;
		}
		return __p__.updateShowBaby(playerId,showBabyTableId,showBabyName);
	}
	public static bool updateMySelfRecharge(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_ADChargeTotal val = new COM_ADChargeTotal();
		{
			if(!val.deserialize(__r__)) return false;
		}
		return __p__.updateMySelfRecharge(val);
	}
	public static bool verificationSMSOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string phoneNumber;
		{
			if(!bin.ProtocolReader.readType(__r__, out phoneNumber, 65535)) return false;
		}
		return __p__.verificationSMSOk(phoneNumber);
	}
	public static bool requestLevelGiftOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int level;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		return __p__.requestLevelGiftOK(level);
	}
	public static bool sycnConvertExp(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int val;
		{
			if(!bin.ProtocolReader.readType(__r__, out val)) return false;
		}
		return __p__.sycnConvertExp(val);
	}
	public static bool wearFuwenOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_Item inst = new COM_Item();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.wearFuwenOk(inst);
	}
	public static bool takeoffFuwenOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int slot;
		{
			if(!bin.ProtocolReader.readType(__r__, out slot)) return false;
		}
		return __p__.takeoffFuwenOk(slot);
	}
	public static bool compFuwenOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.compFuwenOk();
	}
	public static bool requestEmployeeQuestOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_EmployeeQuestInst[] questList;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			questList = new COM_EmployeeQuestInst[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				questList[i] = new COM_EmployeeQuestInst();
				if(!questList[i].deserialize(__r__)) return false;
			}
		}
		return __p__.requestEmployeeQuestOk(questList);
	}
	public static bool acceptEmployeeQuestOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_EmployeeQuestInst inst = new COM_EmployeeQuestInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.acceptEmployeeQuestOk(inst);
	}
	public static bool submitEmployeeQuestOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int questId;
		bool isSuccess;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isSuccess)) return false;
		}
		return __p__.submitEmployeeQuestOk(questId,isSuccess);
	}
	public static bool sycnCrystal(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_CrystalData data = new COM_CrystalData();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.sycnCrystal(data);
	}
	public static bool crystalUpLeveResult(bin.IReader __r__, Server2ClientProxy __p__)
	{
		bool isOK;
		{
			if(!bin.ProtocolReader.readType(__r__, out isOK)) return false;
		}
		return __p__.crystalUpLeveResult(isOK);
	}
	public static bool resetCrystalPropOK(bin.IReader __r__, Server2ClientProxy __p__)
	{
		return __p__.resetCrystalPropOK();
	}
	public static bool sycnCourseGift(bin.IReader __r__, Server2ClientProxy __p__)
	{
		COM_CourseGift[] data;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			data = new COM_CourseGift[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				data[i] = new COM_CourseGift();
				if(!data[i].deserialize(__r__)) return false;
			}
		}
		return __p__.sycnCourseGift(data);
	}
	public static bool orderOk(bin.IReader __r__, Server2ClientProxy __p__)
	{
		string orderId;
		int shopId;
		{
			if(!bin.ProtocolReader.readType(__r__, out orderId, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out shopId)) return false;
		}
		return __p__.orderOk(orderId,shopId);
	}
	public static bool updateRandSubmitQuestCount(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int submitCount;
		{
			if(!bin.ProtocolReader.readType(__r__, out submitCount)) return false;
		}
		return __p__.updateRandSubmitQuestCount(submitCount);
	}
	public static bool updateTeamMember(bin.IReader __r__, Server2ClientProxy __p__)
	{
		int playerId;
		bool isMember;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isMember)) return false;
		}
		return __p__.updateTeamMember(playerId,isMember);
	}
	public static bool dispatch(bin.IReader r, Server2ClientProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!Server2ClientDispatcher.pong(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!Server2ClientDispatcher.errorno(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!Server2ClientDispatcher.teamerrorno(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!Server2ClientDispatcher.reconnection(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!Server2ClientDispatcher.sessionfailed(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!Server2ClientDispatcher.loginok(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!Server2ClientDispatcher.logoutOk(r, p)) return false;
			}
			break;
			case 7:
			{
				if(!Server2ClientDispatcher.createPlayerOk(r, p)) return false;
			}
			break;
			case 8:
			{
				if(!Server2ClientDispatcher.deletePlayerOk(r, p)) return false;
			}
			break;
			case 9:
			{
				if(!Server2ClientDispatcher.enterGameOk(r, p)) return false;
			}
			break;
			case 10:
			{
				if(!Server2ClientDispatcher.initBabies(r, p)) return false;
			}
			break;
			case 11:
			{
				if(!Server2ClientDispatcher.initEmployees(r, p)) return false;
			}
			break;
			case 12:
			{
				if(!Server2ClientDispatcher.initEmpBattleGroup(r, p)) return false;
			}
			break;
			case 13:
			{
				if(!Server2ClientDispatcher.initNpc(r, p)) return false;
			}
			break;
			case 14:
			{
				if(!Server2ClientDispatcher.initAchievement(r, p)) return false;
			}
			break;
			case 15:
			{
				if(!Server2ClientDispatcher.initGather(r, p)) return false;
			}
			break;
			case 16:
			{
				if(!Server2ClientDispatcher.initcompound(r, p)) return false;
			}
			break;
			case 17:
			{
				if(!Server2ClientDispatcher.addBaby(r, p)) return false;
			}
			break;
			case 18:
			{
				if(!Server2ClientDispatcher.refreshBaby(r, p)) return false;
			}
			break;
			case 19:
			{
				if(!Server2ClientDispatcher.delBabyOK(r, p)) return false;
			}
			break;
			case 20:
			{
				if(!Server2ClientDispatcher.changeBabyNameOK(r, p)) return false;
			}
			break;
			case 21:
			{
				if(!Server2ClientDispatcher.remouldBabyOK(r, p)) return false;
			}
			break;
			case 22:
			{
				if(!Server2ClientDispatcher.intensifyBabyOK(r, p)) return false;
			}
			break;
			case 23:
			{
				if(!Server2ClientDispatcher.learnSkillOk(r, p)) return false;
			}
			break;
			case 24:
			{
				if(!Server2ClientDispatcher.forgetSkillOk(r, p)) return false;
			}
			break;
			case 25:
			{
				if(!Server2ClientDispatcher.addSkillExp(r, p)) return false;
			}
			break;
			case 26:
			{
				if(!Server2ClientDispatcher.babyLearnSkillOK(r, p)) return false;
			}
			break;
			case 27:
			{
				if(!Server2ClientDispatcher.skillLevelUp(r, p)) return false;
			}
			break;
			case 28:
			{
				if(!Server2ClientDispatcher.joinScene(r, p)) return false;
			}
			break;
			case 29:
			{
				if(!Server2ClientDispatcher.joinCopySceneOK(r, p)) return false;
			}
			break;
			case 30:
			{
				if(!Server2ClientDispatcher.initCopyNums(r, p)) return false;
			}
			break;
			case 31:
			{
				if(!Server2ClientDispatcher.addToScene(r, p)) return false;
			}
			break;
			case 32:
			{
				if(!Server2ClientDispatcher.delFormScene(r, p)) return false;
			}
			break;
			case 33:
			{
				if(!Server2ClientDispatcher.move2(r, p)) return false;
			}
			break;
			case 34:
			{
				if(!Server2ClientDispatcher.cantMove(r, p)) return false;
			}
			break;
			case 35:
			{
				if(!Server2ClientDispatcher.querySimplePlayerInstOk(r, p)) return false;
			}
			break;
			case 36:
			{
				if(!Server2ClientDispatcher.transfor2(r, p)) return false;
			}
			break;
			case 37:
			{
				if(!Server2ClientDispatcher.openScene(r, p)) return false;
			}
			break;
			case 38:
			{
				if(!Server2ClientDispatcher.autoBattleResult(r, p)) return false;
			}
			break;
			case 39:
			{
				if(!Server2ClientDispatcher.talked2Npc(r, p)) return false;
			}
			break;
			case 40:
			{
				if(!Server2ClientDispatcher.talked2Player(r, p)) return false;
			}
			break;
			case 41:
			{
				if(!Server2ClientDispatcher.useItemOk(r, p)) return false;
			}
			break;
			case 42:
			{
				if(!Server2ClientDispatcher.syncBattleStatus(r, p)) return false;
			}
			break;
			case 43:
			{
				if(!Server2ClientDispatcher.enterBattleOk(r, p)) return false;
			}
			break;
			case 44:
			{
				if(!Server2ClientDispatcher.exitBattleOk(r, p)) return false;
			}
			break;
			case 45:
			{
				if(!Server2ClientDispatcher.syncOrderOk(r, p)) return false;
			}
			break;
			case 46:
			{
				if(!Server2ClientDispatcher.syncOrderOkEX(r, p)) return false;
			}
			break;
			case 47:
			{
				if(!Server2ClientDispatcher.syncOneTurnAction(r, p)) return false;
			}
			break;
			case 48:
			{
				if(!Server2ClientDispatcher.syncProperties(r, p)) return false;
			}
			break;
			case 49:
			{
				if(!Server2ClientDispatcher.receiveChat(r, p)) return false;
			}
			break;
			case 50:
			{
				if(!Server2ClientDispatcher.requestAudioOk(r, p)) return false;
			}
			break;
			case 51:
			{
				if(!Server2ClientDispatcher.publishItemInstRes(r, p)) return false;
			}
			break;
			case 52:
			{
				if(!Server2ClientDispatcher.queryItemInstRes(r, p)) return false;
			}
			break;
			case 53:
			{
				if(!Server2ClientDispatcher.publishBabyInstRes(r, p)) return false;
			}
			break;
			case 54:
			{
				if(!Server2ClientDispatcher.queryBabyInstRes(r, p)) return false;
			}
			break;
			case 55:
			{
				if(!Server2ClientDispatcher.setNoTalkTime(r, p)) return false;
			}
			break;
			case 56:
			{
				if(!Server2ClientDispatcher.addNpc(r, p)) return false;
			}
			break;
			case 57:
			{
				if(!Server2ClientDispatcher.delNpc(r, p)) return false;
			}
			break;
			case 58:
			{
				if(!Server2ClientDispatcher.setTeamLeader(r, p)) return false;
			}
			break;
			case 59:
			{
				if(!Server2ClientDispatcher.initBag(r, p)) return false;
			}
			break;
			case 60:
			{
				if(!Server2ClientDispatcher.addBagItem(r, p)) return false;
			}
			break;
			case 61:
			{
				if(!Server2ClientDispatcher.delBagItem(r, p)) return false;
			}
			break;
			case 62:
			{
				if(!Server2ClientDispatcher.updateBagItem(r, p)) return false;
			}
			break;
			case 63:
			{
				if(!Server2ClientDispatcher.depositItemOK(r, p)) return false;
			}
			break;
			case 64:
			{
				if(!Server2ClientDispatcher.getoutItemOK(r, p)) return false;
			}
			break;
			case 65:
			{
				if(!Server2ClientDispatcher.depositBabyOK(r, p)) return false;
			}
			break;
			case 66:
			{
				if(!Server2ClientDispatcher.getoutBabyOK(r, p)) return false;
			}
			break;
			case 67:
			{
				if(!Server2ClientDispatcher.sortItemStorageOK(r, p)) return false;
			}
			break;
			case 68:
			{
				if(!Server2ClientDispatcher.sortBabyStorageOK(r, p)) return false;
			}
			break;
			case 69:
			{
				if(!Server2ClientDispatcher.initItemStorage(r, p)) return false;
			}
			break;
			case 70:
			{
				if(!Server2ClientDispatcher.initBabyStorage(r, p)) return false;
			}
			break;
			case 71:
			{
				if(!Server2ClientDispatcher.openStorageGrid(r, p)) return false;
			}
			break;
			case 72:
			{
				if(!Server2ClientDispatcher.delStorageBabyOK(r, p)) return false;
			}
			break;
			case 73:
			{
				if(!Server2ClientDispatcher.initPlayerEquips(r, p)) return false;
			}
			break;
			case 74:
			{
				if(!Server2ClientDispatcher.wearEquipmentOk(r, p)) return false;
			}
			break;
			case 75:
			{
				if(!Server2ClientDispatcher.scenePlayerWearEquipment(r, p)) return false;
			}
			break;
			case 76:
			{
				if(!Server2ClientDispatcher.delEquipmentOk(r, p)) return false;
			}
			break;
			case 77:
			{
				if(!Server2ClientDispatcher.scenePlayerDoffEquipment(r, p)) return false;
			}
			break;
			case 78:
			{
				if(!Server2ClientDispatcher.sortBagItemOk(r, p)) return false;
			}
			break;
			case 79:
			{
				if(!Server2ClientDispatcher.jointLobbyOk(r, p)) return false;
			}
			break;
			case 80:
			{
				if(!Server2ClientDispatcher.exitLobbyOk(r, p)) return false;
			}
			break;
			case 81:
			{
				if(!Server2ClientDispatcher.syncDelLobbyTeam(r, p)) return false;
			}
			break;
			case 82:
			{
				if(!Server2ClientDispatcher.syncUpdateLobbyTeam(r, p)) return false;
			}
			break;
			case 83:
			{
				if(!Server2ClientDispatcher.syncAddLobbyTeam(r, p)) return false;
			}
			break;
			case 84:
			{
				if(!Server2ClientDispatcher.createTeamOk(r, p)) return false;
			}
			break;
			case 85:
			{
				if(!Server2ClientDispatcher.changeTeamOk(r, p)) return false;
			}
			break;
			case 86:
			{
				if(!Server2ClientDispatcher.joinTeamOk(r, p)) return false;
			}
			break;
			case 87:
			{
				if(!Server2ClientDispatcher.addTeamMember(r, p)) return false;
			}
			break;
			case 88:
			{
				if(!Server2ClientDispatcher.delTeamMember(r, p)) return false;
			}
			break;
			case 89:
			{
				if(!Server2ClientDispatcher.changeTeamLeaderOk(r, p)) return false;
			}
			break;
			case 90:
			{
				if(!Server2ClientDispatcher.exitTeamOk(r, p)) return false;
			}
			break;
			case 91:
			{
				if(!Server2ClientDispatcher.updateTeam(r, p)) return false;
			}
			break;
			case 92:
			{
				if(!Server2ClientDispatcher.joinTeamRoomOK(r, p)) return false;
			}
			break;
			case 93:
			{
				if(!Server2ClientDispatcher.inviteJoinTeam(r, p)) return false;
			}
			break;
			case 94:
			{
				if(!Server2ClientDispatcher.syncTeamDirtyProp(r, p)) return false;
			}
			break;
			case 95:
			{
				if(!Server2ClientDispatcher.leaveTeamOk(r, p)) return false;
			}
			break;
			case 96:
			{
				if(!Server2ClientDispatcher.backTeamOK(r, p)) return false;
			}
			break;
			case 97:
			{
				if(!Server2ClientDispatcher.teamCallMemberBack(r, p)) return false;
			}
			break;
			case 98:
			{
				if(!Server2ClientDispatcher.refuseBackTeamOk(r, p)) return false;
			}
			break;
			case 99:
			{
				if(!Server2ClientDispatcher.requestJoinTeamTranspond(r, p)) return false;
			}
			break;
			case 100:
			{
				if(!Server2ClientDispatcher.drawLotteryBoxRep(r, p)) return false;
			}
			break;
			case 101:
			{
				if(!Server2ClientDispatcher.addEmployee(r, p)) return false;
			}
			break;
			case 102:
			{
				if(!Server2ClientDispatcher.battleEmployee(r, p)) return false;
			}
			break;
			case 103:
			{
				if(!Server2ClientDispatcher.changeEmpBattleGroupOK(r, p)) return false;
			}
			break;
			case 104:
			{
				if(!Server2ClientDispatcher.evolveOK(r, p)) return false;
			}
			break;
			case 105:
			{
				if(!Server2ClientDispatcher.upStarOK(r, p)) return false;
			}
			break;
			case 106:
			{
				if(!Server2ClientDispatcher.delEmployeeOK(r, p)) return false;
			}
			break;
			case 107:
			{
				if(!Server2ClientDispatcher.sycnEmployeeSoul(r, p)) return false;
			}
			break;
			case 108:
			{
				if(!Server2ClientDispatcher.initQuest(r, p)) return false;
			}
			break;
			case 109:
			{
				if(!Server2ClientDispatcher.acceptQuestOk(r, p)) return false;
			}
			break;
			case 110:
			{
				if(!Server2ClientDispatcher.submitQuestOk(r, p)) return false;
			}
			break;
			case 111:
			{
				if(!Server2ClientDispatcher.giveupQuestOk(r, p)) return false;
			}
			break;
			case 112:
			{
				if(!Server2ClientDispatcher.updateQuestInst(r, p)) return false;
			}
			break;
			case 113:
			{
				if(!Server2ClientDispatcher.requestContactInfoOk(r, p)) return false;
			}
			break;
			case 114:
			{
				if(!Server2ClientDispatcher.addFriendOK(r, p)) return false;
			}
			break;
			case 115:
			{
				if(!Server2ClientDispatcher.delFriendOK(r, p)) return false;
			}
			break;
			case 116:
			{
				if(!Server2ClientDispatcher.addBlacklistOK(r, p)) return false;
			}
			break;
			case 117:
			{
				if(!Server2ClientDispatcher.delBlacklistOK(r, p)) return false;
			}
			break;
			case 118:
			{
				if(!Server2ClientDispatcher.findFriendFail(r, p)) return false;
			}
			break;
			case 119:
			{
				if(!Server2ClientDispatcher.referrFriendOK(r, p)) return false;
			}
			break;
			case 120:
			{
				if(!Server2ClientDispatcher.requestFriendListOK(r, p)) return false;
			}
			break;
			case 121:
			{
				if(!Server2ClientDispatcher.lotteryOk(r, p)) return false;
			}
			break;
			case 122:
			{
				if(!Server2ClientDispatcher.openGatherOK(r, p)) return false;
			}
			break;
			case 123:
			{
				if(!Server2ClientDispatcher.miningOk(r, p)) return false;
			}
			break;
			case 124:
			{
				if(!Server2ClientDispatcher.openCompound(r, p)) return false;
			}
			break;
			case 125:
			{
				if(!Server2ClientDispatcher.compoundItemOk(r, p)) return false;
			}
			break;
			case 126:
			{
				if(!Server2ClientDispatcher.openBagGridOk(r, p)) return false;
			}
			break;
			case 127:
			{
				if(!Server2ClientDispatcher.requestChallengeOK(r, p)) return false;
			}
			break;
			case 128:
			{
				if(!Server2ClientDispatcher.requestMySelfJJCDataOK(r, p)) return false;
			}
			break;
			case 129:
			{
				if(!Server2ClientDispatcher.requestRivalOK(r, p)) return false;
			}
			break;
			case 130:
			{
				if(!Server2ClientDispatcher.rivalTimeOK(r, p)) return false;
			}
			break;
			case 131:
			{
				if(!Server2ClientDispatcher.checkMsgOK(r, p)) return false;
			}
			break;
			case 132:
			{
				if(!Server2ClientDispatcher.requestMyAllbattleMsgOK(r, p)) return false;
			}
			break;
			case 133:
			{
				if(!Server2ClientDispatcher.myBattleMsgOK(r, p)) return false;
			}
			break;
			case 134:
			{
				if(!Server2ClientDispatcher.requestJJCRankOK(r, p)) return false;
			}
			break;
			case 135:
			{
				if(!Server2ClientDispatcher.requestLevelRankOK(r, p)) return false;
			}
			break;
			case 136:
			{
				if(!Server2ClientDispatcher.requestBabyRankOK(r, p)) return false;
			}
			break;
			case 137:
			{
				if(!Server2ClientDispatcher.requestEmpRankOK(r, p)) return false;
			}
			break;
			case 138:
			{
				if(!Server2ClientDispatcher.requestPlayerFFRankOK(r, p)) return false;
			}
			break;
			case 139:
			{
				if(!Server2ClientDispatcher.queryOnlinePlayerOK(r, p)) return false;
			}
			break;
			case 140:
			{
				if(!Server2ClientDispatcher.queryPlayerOK(r, p)) return false;
			}
			break;
			case 141:
			{
				if(!Server2ClientDispatcher.queryBabyOK(r, p)) return false;
			}
			break;
			case 142:
			{
				if(!Server2ClientDispatcher.queryEmployeeOK(r, p)) return false;
			}
			break;
			case 143:
			{
				if(!Server2ClientDispatcher.initGuide(r, p)) return false;
			}
			break;
			case 144:
			{
				if(!Server2ClientDispatcher.buyShopItemOk(r, p)) return false;
			}
			break;
			case 145:
			{
				if(!Server2ClientDispatcher.addPlayerTitle(r, p)) return false;
			}
			break;
			case 146:
			{
				if(!Server2ClientDispatcher.delPlayerTitle(r, p)) return false;
			}
			break;
			case 147:
			{
				if(!Server2ClientDispatcher.requestOpenBuyBox(r, p)) return false;
			}
			break;
			case 148:
			{
				if(!Server2ClientDispatcher.requestGreenBoxTimeOk(r, p)) return false;
			}
			break;
			case 149:
			{
				if(!Server2ClientDispatcher.requestBlueBoxTimeOk(r, p)) return false;
			}
			break;
			case 150:
			{
				if(!Server2ClientDispatcher.updateAchievementinfo(r, p)) return false;
			}
			break;
			case 151:
			{
				if(!Server2ClientDispatcher.syncOpenSystemFlag(r, p)) return false;
			}
			break;
			case 152:
			{
				if(!Server2ClientDispatcher.requestActivityRewardOK(r, p)) return false;
			}
			break;
			case 153:
			{
				if(!Server2ClientDispatcher.syncActivity(r, p)) return false;
			}
			break;
			case 154:
			{
				if(!Server2ClientDispatcher.updateActivityStatus(r, p)) return false;
			}
			break;
			case 155:
			{
				if(!Server2ClientDispatcher.updateActivityCounter(r, p)) return false;
			}
			break;
			case 156:
			{
				if(!Server2ClientDispatcher.syncExam(r, p)) return false;
			}
			break;
			case 157:
			{
				if(!Server2ClientDispatcher.syncExamAnswer(r, p)) return false;
			}
			break;
			case 158:
			{
				if(!Server2ClientDispatcher.petActivityNoNum(r, p)) return false;
			}
			break;
			case 159:
			{
				if(!Server2ClientDispatcher.syncHundredInfo(r, p)) return false;
			}
			break;
			case 160:
			{
				if(!Server2ClientDispatcher.initSignUp(r, p)) return false;
			}
			break;
			case 161:
			{
				if(!Server2ClientDispatcher.signUp(r, p)) return false;
			}
			break;
			case 162:
			{
				if(!Server2ClientDispatcher.requestSignupRewardOk7(r, p)) return false;
			}
			break;
			case 163:
			{
				if(!Server2ClientDispatcher.requestSignupRewardOk14(r, p)) return false;
			}
			break;
			case 164:
			{
				if(!Server2ClientDispatcher.requestSignupRewardOk28(r, p)) return false;
			}
			break;
			case 165:
			{
				if(!Server2ClientDispatcher.sycnDoubleExpTime(r, p)) return false;
			}
			break;
			case 166:
			{
				if(!Server2ClientDispatcher.sycnStates(r, p)) return false;
			}
			break;
			case 167:
			{
				if(!Server2ClientDispatcher.requestpvprankOK(r, p)) return false;
			}
			break;
			case 168:
			{
				if(!Server2ClientDispatcher.syncMyJJCTeamMember(r, p)) return false;
			}
			break;
			case 169:
			{
				if(!Server2ClientDispatcher.startMatchingOK(r, p)) return false;
			}
			break;
			case 170:
			{
				if(!Server2ClientDispatcher.stopMatchingOK(r, p)) return false;
			}
			break;
			case 171:
			{
				if(!Server2ClientDispatcher.updatePvpJJCinfo(r, p)) return false;
			}
			break;
			case 172:
			{
				if(!Server2ClientDispatcher.exitPvpJJCOk(r, p)) return false;
			}
			break;
			case 173:
			{
				if(!Server2ClientDispatcher.syncEnemyPvpJJCPlayerInfo(r, p)) return false;
			}
			break;
			case 174:
			{
				if(!Server2ClientDispatcher.syncEnemyPvpJJCTeamInfo(r, p)) return false;
			}
			break;
			case 175:
			{
				if(!Server2ClientDispatcher.openWarriorchooseUI(r, p)) return false;
			}
			break;
			case 176:
			{
				if(!Server2ClientDispatcher.warriorStartOK(r, p)) return false;
			}
			break;
			case 177:
			{
				if(!Server2ClientDispatcher.warriorStopOK(r, p)) return false;
			}
			break;
			case 178:
			{
				if(!Server2ClientDispatcher.syncWarriorEnemyTeamInfo(r, p)) return false;
			}
			break;
			case 179:
			{
				if(!Server2ClientDispatcher.appendMail(r, p)) return false;
			}
			break;
			case 180:
			{
				if(!Server2ClientDispatcher.delMail(r, p)) return false;
			}
			break;
			case 181:
			{
				if(!Server2ClientDispatcher.updateMailOk(r, p)) return false;
			}
			break;
			case 182:
			{
				if(!Server2ClientDispatcher.boardcastNotice(r, p)) return false;
			}
			break;
			case 183:
			{
				if(!Server2ClientDispatcher.createGuildOK(r, p)) return false;
			}
			break;
			case 184:
			{
				if(!Server2ClientDispatcher.delGuildOK(r, p)) return false;
			}
			break;
			case 185:
			{
				if(!Server2ClientDispatcher.leaveGuildOk(r, p)) return false;
			}
			break;
			case 186:
			{
				if(!Server2ClientDispatcher.initGuildData(r, p)) return false;
			}
			break;
			case 187:
			{
				if(!Server2ClientDispatcher.initGuildMemberList(r, p)) return false;
			}
			break;
			case 188:
			{
				if(!Server2ClientDispatcher.modifyGuildMemberList(r, p)) return false;
			}
			break;
			case 189:
			{
				if(!Server2ClientDispatcher.modifyGuildList(r, p)) return false;
			}
			break;
			case 190:
			{
				if(!Server2ClientDispatcher.queryGuildListResult(r, p)) return false;
			}
			break;
			case 191:
			{
				if(!Server2ClientDispatcher.inviteGuild(r, p)) return false;
			}
			break;
			case 192:
			{
				if(!Server2ClientDispatcher.updateGuildShopItems(r, p)) return false;
			}
			break;
			case 193:
			{
				if(!Server2ClientDispatcher.updateGuildBuilding(r, p)) return false;
			}
			break;
			case 194:
			{
				if(!Server2ClientDispatcher.updateGuildMyMember(r, p)) return false;
			}
			break;
			case 195:
			{
				if(!Server2ClientDispatcher.levelupGuildSkillOk(r, p)) return false;
			}
			break;
			case 196:
			{
				if(!Server2ClientDispatcher.presentGuildItemOk(r, p)) return false;
			}
			break;
			case 197:
			{
				if(!Server2ClientDispatcher.progenitusAddExpOk(r, p)) return false;
			}
			break;
			case 198:
			{
				if(!Server2ClientDispatcher.setProgenitusPositionOk(r, p)) return false;
			}
			break;
			case 199:
			{
				if(!Server2ClientDispatcher.updateGuildFundz(r, p)) return false;
			}
			break;
			case 200:
			{
				if(!Server2ClientDispatcher.updateGuildMemberContribution(r, p)) return false;
			}
			break;
			case 201:
			{
				if(!Server2ClientDispatcher.openGuildBattle(r, p)) return false;
			}
			break;
			case 202:
			{
				if(!Server2ClientDispatcher.startGuildBattle(r, p)) return false;
			}
			break;
			case 203:
			{
				if(!Server2ClientDispatcher.closeGuildBattle(r, p)) return false;
			}
			break;
			case 204:
			{
				if(!Server2ClientDispatcher.syncGuildBattleWinCount(r, p)) return false;
			}
			break;
			case 205:
			{
				if(!Server2ClientDispatcher.initMySelling(r, p)) return false;
			}
			break;
			case 206:
			{
				if(!Server2ClientDispatcher.initMySelled(r, p)) return false;
			}
			break;
			case 207:
			{
				if(!Server2ClientDispatcher.fetchSellingOk(r, p)) return false;
			}
			break;
			case 208:
			{
				if(!Server2ClientDispatcher.fetchSellingOk2(r, p)) return false;
			}
			break;
			case 209:
			{
				if(!Server2ClientDispatcher.sellingOk(r, p)) return false;
			}
			break;
			case 210:
			{
				if(!Server2ClientDispatcher.selledOk(r, p)) return false;
			}
			break;
			case 211:
			{
				if(!Server2ClientDispatcher.unsellingOk(r, p)) return false;
			}
			break;
			case 212:
			{
				if(!Server2ClientDispatcher.redemptionSpreeOk(r, p)) return false;
			}
			break;
			case 213:
			{
				if(!Server2ClientDispatcher.insertState(r, p)) return false;
			}
			break;
			case 214:
			{
				if(!Server2ClientDispatcher.updattState(r, p)) return false;
			}
			break;
			case 215:
			{
				if(!Server2ClientDispatcher.removeState(r, p)) return false;
			}
			break;
			case 216:
			{
				if(!Server2ClientDispatcher.requestFixItemOk(r, p)) return false;
			}
			break;
			case 217:
			{
				if(!Server2ClientDispatcher.makeDebirsItemOK(r, p)) return false;
			}
			break;
			case 218:
			{
				if(!Server2ClientDispatcher.updateMagicItem(r, p)) return false;
			}
			break;
			case 219:
			{
				if(!Server2ClientDispatcher.changeMagicJobOk(r, p)) return false;
			}
			break;
			case 220:
			{
				if(!Server2ClientDispatcher.magicItemTupoOk(r, p)) return false;
			}
			break;
			case 221:
			{
				if(!Server2ClientDispatcher.zhuanpanOK(r, p)) return false;
			}
			break;
			case 222:
			{
				if(!Server2ClientDispatcher.updateZhuanpanNotice(r, p)) return false;
			}
			break;
			case 223:
			{
				if(!Server2ClientDispatcher.sycnZhuanpanData(r, p)) return false;
			}
			break;
			case 224:
			{
				if(!Server2ClientDispatcher.copynonum(r, p)) return false;
			}
			break;
			case 225:
			{
				if(!Server2ClientDispatcher.sceneFilterOk(r, p)) return false;
			}
			break;
			case 226:
			{
				if(!Server2ClientDispatcher.wishingOK(r, p)) return false;
			}
			break;
			case 227:
			{
				if(!Server2ClientDispatcher.shareWishOK(r, p)) return false;
			}
			break;
			case 228:
			{
				if(!Server2ClientDispatcher.leaderCloseDialogOk(r, p)) return false;
			}
			break;
			case 229:
			{
				if(!Server2ClientDispatcher.startOnlineTime(r, p)) return false;
			}
			break;
			case 230:
			{
				if(!Server2ClientDispatcher.requestOnlineTimeRewardOK(r, p)) return false;
			}
			break;
			case 231:
			{
				if(!Server2ClientDispatcher.sycnVipflag(r, p)) return false;
			}
			break;
			case 232:
			{
				if(!Server2ClientDispatcher.buyFundOK(r, p)) return false;
			}
			break;
			case 233:
			{
				if(!Server2ClientDispatcher.requestFundRewardOK(r, p)) return false;
			}
			break;
			case 234:
			{
				if(!Server2ClientDispatcher.firstRechargeOK(r, p)) return false;
			}
			break;
			case 235:
			{
				if(!Server2ClientDispatcher.firstRechargeGiftOK(r, p)) return false;
			}
			break;
			case 236:
			{
				if(!Server2ClientDispatcher.agencyActivity(r, p)) return false;
			}
			break;
			case 237:
			{
				if(!Server2ClientDispatcher.updateFestival(r, p)) return false;
			}
			break;
			case 238:
			{
				if(!Server2ClientDispatcher.updateSelfRecharge(r, p)) return false;
			}
			break;
			case 239:
			{
				if(!Server2ClientDispatcher.updateSysRecharge(r, p)) return false;
			}
			break;
			case 240:
			{
				if(!Server2ClientDispatcher.updateSelfDiscountStore(r, p)) return false;
			}
			break;
			case 241:
			{
				if(!Server2ClientDispatcher.updateSysDiscountStore(r, p)) return false;
			}
			break;
			case 242:
			{
				if(!Server2ClientDispatcher.updateSelfOnceRecharge(r, p)) return false;
			}
			break;
			case 243:
			{
				if(!Server2ClientDispatcher.updateSysOnceRecharge(r, p)) return false;
			}
			break;
			case 244:
			{
				if(!Server2ClientDispatcher.openCardOK(r, p)) return false;
			}
			break;
			case 245:
			{
				if(!Server2ClientDispatcher.resetCardOK(r, p)) return false;
			}
			break;
			case 246:
			{
				if(!Server2ClientDispatcher.sycnHotRole(r, p)) return false;
			}
			break;
			case 247:
			{
				if(!Server2ClientDispatcher.hotRoleBuyOk(r, p)) return false;
			}
			break;
			case 248:
			{
				if(!Server2ClientDispatcher.updateSevenday(r, p)) return false;
			}
			break;
			case 249:
			{
				if(!Server2ClientDispatcher.updateEmployeeActivity(r, p)) return false;
			}
			break;
			case 250:
			{
				if(!Server2ClientDispatcher.updateMinGiftActivity(r, p)) return false;
			}
			break;
			case 251:
			{
				if(!Server2ClientDispatcher.updateIntegralShop(r, p)) return false;
			}
			break;
			case 252:
			{
				if(!Server2ClientDispatcher.updateShowBaby(r, p)) return false;
			}
			break;
			case 253:
			{
				if(!Server2ClientDispatcher.updateMySelfRecharge(r, p)) return false;
			}
			break;
			case 254:
			{
				if(!Server2ClientDispatcher.verificationSMSOk(r, p)) return false;
			}
			break;
			case 255:
			{
				if(!Server2ClientDispatcher.requestLevelGiftOK(r, p)) return false;
			}
			break;
			case 256:
			{
				if(!Server2ClientDispatcher.sycnConvertExp(r, p)) return false;
			}
			break;
			case 257:
			{
				if(!Server2ClientDispatcher.wearFuwenOk(r, p)) return false;
			}
			break;
			case 258:
			{
				if(!Server2ClientDispatcher.takeoffFuwenOk(r, p)) return false;
			}
			break;
			case 259:
			{
				if(!Server2ClientDispatcher.compFuwenOk(r, p)) return false;
			}
			break;
			case 260:
			{
				if(!Server2ClientDispatcher.requestEmployeeQuestOk(r, p)) return false;
			}
			break;
			case 261:
			{
				if(!Server2ClientDispatcher.acceptEmployeeQuestOk(r, p)) return false;
			}
			break;
			case 262:
			{
				if(!Server2ClientDispatcher.submitEmployeeQuestOk(r, p)) return false;
			}
			break;
			case 263:
			{
				if(!Server2ClientDispatcher.sycnCrystal(r, p)) return false;
			}
			break;
			case 264:
			{
				if(!Server2ClientDispatcher.crystalUpLeveResult(r, p)) return false;
			}
			break;
			case 265:
			{
				if(!Server2ClientDispatcher.resetCrystalPropOK(r, p)) return false;
			}
			break;
			case 266:
			{
				if(!Server2ClientDispatcher.sycnCourseGift(r, p)) return false;
			}
			break;
			case 267:
			{
				if(!Server2ClientDispatcher.orderOk(r, p)) return false;
			}
			break;
			case 268:
			{
				if(!Server2ClientDispatcher.updateRandSubmitQuestCount(r, p)) return false;
			}
			break;
			case 269:
			{
				if(!Server2ClientDispatcher.updateTeamMember(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_World2LoginStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void queryAccount(COM_LoginInfo info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void setAccountSeal(string accountname,bool val)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, accountname);
		}
		{
			bin.ProtocolWriter.writeType(w, val);
		}
		methodEnd();
	}
	public void setPhoneNumber(string accountname,string phoneNumber)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, accountname);
		}
		{
			bin.ProtocolWriter.writeType(w, phoneNumber);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_World2LoginProxy
{
	bool queryAccount(COM_LoginInfo info);
	bool setAccountSeal(string accountname,bool val);
	bool setPhoneNumber(string accountname,string phoneNumber);
}
//=============================================================
public static class SGE_World2LoginDispatcher
{
	public static bool queryAccount(bin.IReader __r__, SGE_World2LoginProxy __p__)
	{
		COM_LoginInfo info = new COM_LoginInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.queryAccount(info);
	}
	public static bool setAccountSeal(bin.IReader __r__, SGE_World2LoginProxy __p__)
	{
		string accountname;
		bool val;
		{
			if(!bin.ProtocolReader.readType(__r__, out accountname, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out val)) return false;
		}
		return __p__.setAccountSeal(accountname,val);
	}
	public static bool setPhoneNumber(bin.IReader __r__, SGE_World2LoginProxy __p__)
	{
		string accountname;
		string phoneNumber;
		{
			if(!bin.ProtocolReader.readType(__r__, out accountname, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out phoneNumber, 65535)) return false;
		}
		return __p__.setPhoneNumber(accountname,phoneNumber);
	}
	public static bool dispatch(bin.IReader r, SGE_World2LoginProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_World2LoginDispatcher.queryAccount(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_World2LoginDispatcher.setAccountSeal(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_World2LoginDispatcher.setPhoneNumber(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_Login2WorldStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void queryAccountOk(COM_AccountInfo info,bool isNew,bool isSeal)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, isNew);
		}
		{
			bin.ProtocolWriter.writeType(w, isSeal);
		}
		methodEnd();
	}
	public void setAccountSealOk(string accountname)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, accountname);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_Login2WorldProxy
{
	bool queryAccountOk(COM_AccountInfo info,bool isNew,bool isSeal);
	bool setAccountSealOk(string accountname);
}
//=============================================================
public static class SGE_Login2WorldDispatcher
{
	public static bool queryAccountOk(bin.IReader __r__, SGE_Login2WorldProxy __p__)
	{
		COM_AccountInfo info = new COM_AccountInfo();
		bool isNew;
		bool isSeal;
		{
			if(!info.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isNew)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isSeal)) return false;
		}
		return __p__.queryAccountOk(info,isNew,isSeal);
	}
	public static bool setAccountSealOk(bin.IReader __r__, SGE_Login2WorldProxy __p__)
	{
		string accountname;
		{
			if(!bin.ProtocolReader.readType(__r__, out accountname, 65535)) return false;
		}
		return __p__.setAccountSealOk(accountname);
	}
	public static bool dispatch(bin.IReader r, SGE_Login2WorldProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_Login2WorldDispatcher.queryAccountOk(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_Login2WorldDispatcher.setAccountSealOk(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_Gateway2WorldStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void syncConnectInfo(int indoor,string ip)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, indoor);
		}
		{
			bin.ProtocolWriter.writeType(w, ip);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_Gateway2WorldProxy
{
	bool syncConnectInfo(int indoor,string ip);
}
//=============================================================
public static class SGE_Gateway2WorldDispatcher
{
	public static bool syncConnectInfo(bin.IReader __r__, SGE_Gateway2WorldProxy __p__)
	{
		int indoor;
		string ip;
		{
			if(!bin.ProtocolReader.readType(__r__, out indoor)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out ip, 65535)) return false;
		}
		return __p__.syncConnectInfo(indoor,ip);
	}
	public static bool dispatch(bin.IReader r, SGE_Gateway2WorldProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_Gateway2WorldDispatcher.syncConnectInfo(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_World2DBStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void queryPlayerSimpleInformation(string username,int serverId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, username);
		}
		{
			bin.ProtocolWriter.writeType(w, serverId);
		}
		methodEnd();
	}
	public void queryPlayer(string username,int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, username);
		}
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void createPlayer(string username,SGE_DBPlayerData inst,int serverId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, username);
		}
		{
			inst.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, serverId);
		}
		methodEnd();
	}
	public void updatePlayer(string username,SGE_DBPlayerData inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, username);
		}
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void deletePlayer(string playername)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		methodEnd();
	}
	public void queryPlayerById(string name,int instId,int where)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		{
			bin.ProtocolWriter.writeType(w, where);
		}
		methodEnd();
	}
	public void insertEndlessStair(int rank,string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, rank);
		}
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void updateEndlessStair(int rank,string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 7;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, rank);
		}
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
	public void createBaby(string playername,COM_BabyInst inst,bool isToStorage)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 8;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			inst.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, isToStorage);
		}
		methodEnd();
	}
	public void deleteBaby(string playername,int babyInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 9;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			bin.ProtocolWriter.writeType(w, babyInstId);
		}
		methodEnd();
	}
	public void updateBaby(COM_BabyInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 10;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void updateBabys(string playername,COM_BabyInst[] babys)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 11;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			uint __len__ = (babys == null)?0:(uint)babys.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				babys[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void queryBabyById(string name,uint instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 12;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void createEmployee(string playername,COM_EmployeeInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 13;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void deleteEmployee(string playername,uint[] instIds)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 14;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			uint __len__ = (instIds == null)?0:(uint)instIds.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, instIds[i]);
			}
		}
		methodEnd();
	}
	public void updateEmployee(COM_EmployeeInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 15;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void queryEmployeeById(string name,uint instid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 16;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		{
			bin.ProtocolWriter.writeType(w, instid);
		}
		methodEnd();
	}
	public void insertMail(COM_Mail mail)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 17;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			mail.serialize(w);
		}
		methodEnd();
	}
	public void insertMailAll(COM_Mail mail)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 18;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			mail.serialize(w);
		}
		methodEnd();
	}
	public void insertMailByRecvs(COM_Mail mail,string[] recvs)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 19;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			mail.serialize(w);
		}
		{
			uint __len__ = (recvs == null)?0:(uint)recvs.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, recvs[i]);
			}
		}
		methodEnd();
	}
	public void fatchMail(string recvName,int mailId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 20;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, recvName);
		}
		{
			bin.ProtocolWriter.writeType(w, mailId);
		}
		methodEnd();
	}
	public void delMail(string recvName,int mailId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 21;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, recvName);
		}
		{
			bin.ProtocolWriter.writeType(w, mailId);
		}
		methodEnd();
	}
	public void updateMail(COM_Mail mail)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 22;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			mail.serialize(w);
		}
		methodEnd();
	}
	public void insertGuild(COM_Guild guild,COM_GuildMember guildMember)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 23;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			guild.serialize(w);
		}
		{
			guildMember.serialize(w);
		}
		methodEnd();
	}
	public void updateGuildRequestList(uint guildId,COM_GuildRequestData[] data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 24;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guildId);
		}
		{
			uint __len__ = (data == null)?0:(uint)data.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				data[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void createGuildMember(COM_GuildMember guildMember)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 25;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			guildMember.serialize(w);
		}
		methodEnd();
	}
	public void delGuild(int guildId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 26;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guildId);
		}
		methodEnd();
	}
	public void updateGuildNotice(uint guildId,string notice)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 27;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guildId);
		}
		{
			bin.ProtocolWriter.writeType(w, notice);
		}
		methodEnd();
	}
	public void updateGuild(COM_Guild guild)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 28;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			guild.serialize(w);
		}
		methodEnd();
	}
	public void updateMemberPosition(int roleId,GuildJob job)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 29;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, roleId);
		}
		{
			byte __e__ = (byte)job;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void updateMemberContribution(int roleId,int contribution)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 30;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, roleId);
		}
		{
			bin.ProtocolWriter.writeType(w, contribution);
		}
		methodEnd();
	}
	public void updateGuildStruction(uint guildId,sbyte level,int struction)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 31;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, guildId);
		}
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		{
			bin.ProtocolWriter.writeType(w, struction);
		}
		methodEnd();
	}
	public void deleteGuildMember(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 32;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void insertActivity(ADType adt,SGE_SysActivity date)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 33;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)adt;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			date.serialize(w);
		}
		methodEnd();
	}
	public void insertLoseCharge(int playerId,SGE_OrderInfo order)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 34;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			order.serialize(w);
		}
		methodEnd();
	}
	public void insertEmployeeQuest(uint playerId,SGE_PlayerEmployeeQuest data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 35;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void delEmployeeQuest(uint playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 36;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void deleteEndlessStair(string name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 37;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_World2DBProxy
{
	bool queryPlayerSimpleInformation(string username,int serverId);
	bool queryPlayer(string username,int playerId);
	bool createPlayer(string username,SGE_DBPlayerData inst,int serverId);
	bool updatePlayer(string username,SGE_DBPlayerData inst);
	bool deletePlayer(string playername);
	bool queryPlayerById(string name,int instId,int where);
	bool insertEndlessStair(int rank,string name);
	bool updateEndlessStair(int rank,string name);
	bool createBaby(string playername,COM_BabyInst inst,bool isToStorage);
	bool deleteBaby(string playername,int babyInstId);
	bool updateBaby(COM_BabyInst inst);
	bool updateBabys(string playername,COM_BabyInst[] babys);
	bool queryBabyById(string name,uint instid);
	bool createEmployee(string playername,COM_EmployeeInst inst);
	bool deleteEmployee(string playername,uint[] instIds);
	bool updateEmployee(COM_EmployeeInst inst);
	bool queryEmployeeById(string name,uint instid);
	bool insertMail(COM_Mail mail);
	bool insertMailAll(COM_Mail mail);
	bool insertMailByRecvs(COM_Mail mail,string[] recvs);
	bool fatchMail(string recvName,int mailId);
	bool delMail(string recvName,int mailId);
	bool updateMail(COM_Mail mail);
	bool insertGuild(COM_Guild guild,COM_GuildMember guildMember);
	bool updateGuildRequestList(uint guildId,COM_GuildRequestData[] data);
	bool createGuildMember(COM_GuildMember guildMember);
	bool delGuild(int guildId);
	bool updateGuildNotice(uint guildId,string notice);
	bool updateGuild(COM_Guild guild);
	bool updateMemberPosition(int roleId,GuildJob job);
	bool updateMemberContribution(int roleId,int contribution);
	bool updateGuildStruction(uint guildId,sbyte level,int struction);
	bool deleteGuildMember(int playerId);
	bool insertActivity(ADType adt,SGE_SysActivity date);
	bool insertLoseCharge(int playerId,SGE_OrderInfo order);
	bool insertEmployeeQuest(uint playerId,SGE_PlayerEmployeeQuest data);
	bool delEmployeeQuest(uint playerId);
	bool deleteEndlessStair(string name);
}
//=============================================================
public static class SGE_World2DBDispatcher
{
	public static bool queryPlayerSimpleInformation(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string username;
		int serverId;
		{
			if(!bin.ProtocolReader.readType(__r__, out username, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out serverId)) return false;
		}
		return __p__.queryPlayerSimpleInformation(username,serverId);
	}
	public static bool queryPlayer(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string username;
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out username, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.queryPlayer(username,playerId);
	}
	public static bool createPlayer(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string username;
		SGE_DBPlayerData inst = new SGE_DBPlayerData();
		int serverId;
		{
			if(!bin.ProtocolReader.readType(__r__, out username, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out serverId)) return false;
		}
		return __p__.createPlayer(username,inst,serverId);
	}
	public static bool updatePlayer(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string username;
		SGE_DBPlayerData inst = new SGE_DBPlayerData();
		{
			if(!bin.ProtocolReader.readType(__r__, out username, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.updatePlayer(username,inst);
	}
	public static bool deletePlayer(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string playername;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		return __p__.deletePlayer(playername);
	}
	public static bool queryPlayerById(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string name;
		int instId;
		int where;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out where)) return false;
		}
		return __p__.queryPlayerById(name,instId,where);
	}
	public static bool insertEndlessStair(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		int rank;
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out rank)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.insertEndlessStair(rank,name);
	}
	public static bool updateEndlessStair(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		int rank;
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out rank)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.updateEndlessStair(rank,name);
	}
	public static bool createBaby(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string playername;
		COM_BabyInst inst = new COM_BabyInst();
		bool isToStorage;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isToStorage)) return false;
		}
		return __p__.createBaby(playername,inst,isToStorage);
	}
	public static bool deleteBaby(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string playername;
		int babyInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out babyInstId)) return false;
		}
		return __p__.deleteBaby(playername,babyInstId);
	}
	public static bool updateBaby(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_BabyInst inst = new COM_BabyInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.updateBaby(inst);
	}
	public static bool updateBabys(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string playername;
		COM_BabyInst[] babys;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			babys = new COM_BabyInst[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				babys[i] = new COM_BabyInst();
				if(!babys[i].deserialize(__r__)) return false;
			}
		}
		return __p__.updateBabys(playername,babys);
	}
	public static bool queryBabyById(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string name;
		uint instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.queryBabyById(name,instid);
	}
	public static bool createEmployee(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string playername;
		COM_EmployeeInst inst = new COM_EmployeeInst();
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.createEmployee(playername,inst);
	}
	public static bool deleteEmployee(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string playername;
		uint[] instIds;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			instIds = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out instIds[i])) return false;
			}
		}
		return __p__.deleteEmployee(playername,instIds);
	}
	public static bool updateEmployee(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_EmployeeInst inst = new COM_EmployeeInst();
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.updateEmployee(inst);
	}
	public static bool queryEmployeeById(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string name;
		uint instid;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out instid)) return false;
		}
		return __p__.queryEmployeeById(name,instid);
	}
	public static bool insertMail(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_Mail mail = new COM_Mail();
		{
			if(!mail.deserialize(__r__)) return false;
		}
		return __p__.insertMail(mail);
	}
	public static bool insertMailAll(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_Mail mail = new COM_Mail();
		{
			if(!mail.deserialize(__r__)) return false;
		}
		return __p__.insertMailAll(mail);
	}
	public static bool insertMailByRecvs(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_Mail mail = new COM_Mail();
		string[] recvs;
		{
			if(!mail.deserialize(__r__)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			recvs = new string[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out recvs[i], 65535)) return false;
			}
		}
		return __p__.insertMailByRecvs(mail,recvs);
	}
	public static bool fatchMail(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string recvName;
		int mailId;
		{
			if(!bin.ProtocolReader.readType(__r__, out recvName, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out mailId)) return false;
		}
		return __p__.fatchMail(recvName,mailId);
	}
	public static bool delMail(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string recvName;
		int mailId;
		{
			if(!bin.ProtocolReader.readType(__r__, out recvName, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out mailId)) return false;
		}
		return __p__.delMail(recvName,mailId);
	}
	public static bool updateMail(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_Mail mail = new COM_Mail();
		{
			if(!mail.deserialize(__r__)) return false;
		}
		return __p__.updateMail(mail);
	}
	public static bool insertGuild(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_Guild guild = new COM_Guild();
		COM_GuildMember guildMember = new COM_GuildMember();
		{
			if(!guild.deserialize(__r__)) return false;
		}
		{
			if(!guildMember.deserialize(__r__)) return false;
		}
		return __p__.insertGuild(guild,guildMember);
	}
	public static bool updateGuildRequestList(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		uint guildId;
		COM_GuildRequestData[] data;
		{
			if(!bin.ProtocolReader.readType(__r__, out guildId)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			data = new COM_GuildRequestData[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				data[i] = new COM_GuildRequestData();
				if(!data[i].deserialize(__r__)) return false;
			}
		}
		return __p__.updateGuildRequestList(guildId,data);
	}
	public static bool createGuildMember(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_GuildMember guildMember = new COM_GuildMember();
		{
			if(!guildMember.deserialize(__r__)) return false;
		}
		return __p__.createGuildMember(guildMember);
	}
	public static bool delGuild(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		int guildId;
		{
			if(!bin.ProtocolReader.readType(__r__, out guildId)) return false;
		}
		return __p__.delGuild(guildId);
	}
	public static bool updateGuildNotice(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		uint guildId;
		string notice;
		{
			if(!bin.ProtocolReader.readType(__r__, out guildId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out notice, 65535)) return false;
		}
		return __p__.updateGuildNotice(guildId,notice);
	}
	public static bool updateGuild(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		COM_Guild guild = new COM_Guild();
		{
			if(!guild.deserialize(__r__)) return false;
		}
		return __p__.updateGuild(guild);
	}
	public static bool updateMemberPosition(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		int roleId;
		GuildJob job;
		{
			if(!bin.ProtocolReader.readType(__r__, out roleId)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 7) return false;
			job = (GuildJob)__e__;
		}
		return __p__.updateMemberPosition(roleId,job);
	}
	public static bool updateMemberContribution(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		int roleId;
		int contribution;
		{
			if(!bin.ProtocolReader.readType(__r__, out roleId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out contribution)) return false;
		}
		return __p__.updateMemberContribution(roleId,contribution);
	}
	public static bool updateGuildStruction(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		uint guildId;
		sbyte level;
		int struction;
		{
			if(!bin.ProtocolReader.readType(__r__, out guildId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out struction)) return false;
		}
		return __p__.updateGuildStruction(guildId,level,struction);
	}
	public static bool deleteGuildMember(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.deleteGuildMember(playerId);
	}
	public static bool insertActivity(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		ADType adt;
		SGE_SysActivity date = new SGE_SysActivity();
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 21) return false;
			adt = (ADType)__e__;
		}
		{
			if(!date.deserialize(__r__)) return false;
		}
		return __p__.insertActivity(adt,date);
	}
	public static bool insertLoseCharge(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		int playerId;
		SGE_OrderInfo order = new SGE_OrderInfo();
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!order.deserialize(__r__)) return false;
		}
		return __p__.insertLoseCharge(playerId,order);
	}
	public static bool insertEmployeeQuest(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		uint playerId;
		SGE_PlayerEmployeeQuest data = new SGE_PlayerEmployeeQuest();
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.insertEmployeeQuest(playerId,data);
	}
	public static bool delEmployeeQuest(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		uint playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.delEmployeeQuest(playerId);
	}
	public static bool deleteEndlessStair(bin.IReader __r__, SGE_World2DBProxy __p__)
	{
		string name;
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		return __p__.deleteEndlessStair(name);
	}
	public static bool dispatch(bin.IReader r, SGE_World2DBProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_World2DBDispatcher.queryPlayerSimpleInformation(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_World2DBDispatcher.queryPlayer(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_World2DBDispatcher.createPlayer(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_World2DBDispatcher.updatePlayer(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_World2DBDispatcher.deletePlayer(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_World2DBDispatcher.queryPlayerById(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_World2DBDispatcher.insertEndlessStair(r, p)) return false;
			}
			break;
			case 7:
			{
				if(!SGE_World2DBDispatcher.updateEndlessStair(r, p)) return false;
			}
			break;
			case 8:
			{
				if(!SGE_World2DBDispatcher.createBaby(r, p)) return false;
			}
			break;
			case 9:
			{
				if(!SGE_World2DBDispatcher.deleteBaby(r, p)) return false;
			}
			break;
			case 10:
			{
				if(!SGE_World2DBDispatcher.updateBaby(r, p)) return false;
			}
			break;
			case 11:
			{
				if(!SGE_World2DBDispatcher.updateBabys(r, p)) return false;
			}
			break;
			case 12:
			{
				if(!SGE_World2DBDispatcher.queryBabyById(r, p)) return false;
			}
			break;
			case 13:
			{
				if(!SGE_World2DBDispatcher.createEmployee(r, p)) return false;
			}
			break;
			case 14:
			{
				if(!SGE_World2DBDispatcher.deleteEmployee(r, p)) return false;
			}
			break;
			case 15:
			{
				if(!SGE_World2DBDispatcher.updateEmployee(r, p)) return false;
			}
			break;
			case 16:
			{
				if(!SGE_World2DBDispatcher.queryEmployeeById(r, p)) return false;
			}
			break;
			case 17:
			{
				if(!SGE_World2DBDispatcher.insertMail(r, p)) return false;
			}
			break;
			case 18:
			{
				if(!SGE_World2DBDispatcher.insertMailAll(r, p)) return false;
			}
			break;
			case 19:
			{
				if(!SGE_World2DBDispatcher.insertMailByRecvs(r, p)) return false;
			}
			break;
			case 20:
			{
				if(!SGE_World2DBDispatcher.fatchMail(r, p)) return false;
			}
			break;
			case 21:
			{
				if(!SGE_World2DBDispatcher.delMail(r, p)) return false;
			}
			break;
			case 22:
			{
				if(!SGE_World2DBDispatcher.updateMail(r, p)) return false;
			}
			break;
			case 23:
			{
				if(!SGE_World2DBDispatcher.insertGuild(r, p)) return false;
			}
			break;
			case 24:
			{
				if(!SGE_World2DBDispatcher.updateGuildRequestList(r, p)) return false;
			}
			break;
			case 25:
			{
				if(!SGE_World2DBDispatcher.createGuildMember(r, p)) return false;
			}
			break;
			case 26:
			{
				if(!SGE_World2DBDispatcher.delGuild(r, p)) return false;
			}
			break;
			case 27:
			{
				if(!SGE_World2DBDispatcher.updateGuildNotice(r, p)) return false;
			}
			break;
			case 28:
			{
				if(!SGE_World2DBDispatcher.updateGuild(r, p)) return false;
			}
			break;
			case 29:
			{
				if(!SGE_World2DBDispatcher.updateMemberPosition(r, p)) return false;
			}
			break;
			case 30:
			{
				if(!SGE_World2DBDispatcher.updateMemberContribution(r, p)) return false;
			}
			break;
			case 31:
			{
				if(!SGE_World2DBDispatcher.updateGuildStruction(r, p)) return false;
			}
			break;
			case 32:
			{
				if(!SGE_World2DBDispatcher.deleteGuildMember(r, p)) return false;
			}
			break;
			case 33:
			{
				if(!SGE_World2DBDispatcher.insertActivity(r, p)) return false;
			}
			break;
			case 34:
			{
				if(!SGE_World2DBDispatcher.insertLoseCharge(r, p)) return false;
			}
			break;
			case 35:
			{
				if(!SGE_World2DBDispatcher.insertEmployeeQuest(r, p)) return false;
			}
			break;
			case 36:
			{
				if(!SGE_World2DBDispatcher.delEmployeeQuest(r, p)) return false;
			}
			break;
			case 37:
			{
				if(!SGE_World2DBDispatcher.deleteEndlessStair(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_DB2WorldStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void syncGlobalGuid(uint id)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, id);
		}
		methodEnd();
	}
	public void syncContactInfo(SGE_ContactInfoExt[] info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (info == null)?0:(uint)info.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				info[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void queryPlayerSimpleInformationOk(string username,COM_SimpleInformation[] insts,int serverId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, username);
		}
		{
			uint __len__ = (insts == null)?0:(uint)insts.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				insts[i].serialize(w);
			}
		}
		{
			bin.ProtocolWriter.writeType(w, serverId);
		}
		methodEnd();
	}
	public void queryPlayerOk(string username,SGE_DBPlayerData player)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, username);
		}
		{
			player.serialize(w);
		}
		methodEnd();
	}
	public void createPlayerOk(string username,SGE_DBPlayerData inst,int inDoorId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, username);
		}
		{
			inst.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, inDoorId);
		}
		methodEnd();
	}
	public void createPlayerSameName(string username)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, username);
		}
		methodEnd();
	}
	public void queryPlayerByIdOK(string playername,SGE_DBPlayerData inst,int where)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			inst.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, where);
		}
		methodEnd();
	}
	public void queryEndlessStairAllDateOK(string[] name)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 7;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (name == null)?0:(uint)name.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, name[i]);
			}
		}
		methodEnd();
	}
	public void queryPlayerByLevelOK(COM_ContactInfo[] info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 8;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (info == null)?0:(uint)info.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				info[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void queryPlayerByFFOK(COM_ContactInfo[] info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 9;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (info == null)?0:(uint)info.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				info[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void createBabyOK(string playername,COM_BabyInst inst,bool isToStorage)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 10;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			inst.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, isToStorage);
		}
		methodEnd();
	}
	public void deleteBabyOK(string playername,int babyInstId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 11;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			bin.ProtocolWriter.writeType(w, babyInstId);
		}
		methodEnd();
	}
	public void queryBabyByFFOK(COM_BabyRankData[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 12;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void queryBabyByIdOK(string name,COM_BabyInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 13;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void UpdateBabysOK(string playername)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 14;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		methodEnd();
	}
	public void createEmployeeOK(string playername,COM_EmployeeInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 15;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void deleteEmployeeOK(string playername,uint[] instIds)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 16;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playername);
		}
		{
			uint __len__ = (instIds == null)?0:(uint)instIds.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, instIds[i]);
			}
		}
		methodEnd();
	}
	public void queryEmployeeByFFOK(COM_EmployeeRankData[] infos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 17;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (infos == null)?0:(uint)infos.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				infos[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void queryEmployeeByIdOK(string name,COM_EmployeeInst inst)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 18;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, name);
		}
		{
			inst.serialize(w);
		}
		methodEnd();
	}
	public void appendMail(string playerName,COM_Mail[] mails)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 19;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerName);
		}
		{
			uint __len__ = (mails == null)?0:(uint)mails.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				mails[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void insertGuildOK(COM_Guild guild,COM_GuildMember guildMember)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 20;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			guild.serialize(w);
		}
		{
			guildMember.serialize(w);
		}
		methodEnd();
	}
	public void updateMemberJobOk(int roleId,GuildJob job)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 21;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, roleId);
		}
		{
			byte __e__ = (byte)job;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void syncGuild(COM_Guild[] guilds)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 22;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (guilds == null)?0:(uint)guilds.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				guilds[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void syncGuildMember(COM_GuildMember[] guildMember)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 23;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (guildMember == null)?0:(uint)guildMember.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				guildMember[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void fatchActivity(SGE_SysActivity date)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 24;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			date.serialize(w);
		}
		methodEnd();
	}
	public void syncEmployeeQuest(SGE_PlayerEmployeeQuest[] info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 25;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (info == null)?0:(uint)info.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				info[i].serialize(w);
			}
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_DB2WorldProxy
{
	bool syncGlobalGuid(uint id);
	bool syncContactInfo(SGE_ContactInfoExt[] info);
	bool queryPlayerSimpleInformationOk(string username,COM_SimpleInformation[] insts,int serverId);
	bool queryPlayerOk(string username,SGE_DBPlayerData player);
	bool createPlayerOk(string username,SGE_DBPlayerData inst,int inDoorId);
	bool createPlayerSameName(string username);
	bool queryPlayerByIdOK(string playername,SGE_DBPlayerData inst,int where);
	bool queryEndlessStairAllDateOK(string[] name);
	bool queryPlayerByLevelOK(COM_ContactInfo[] info);
	bool queryPlayerByFFOK(COM_ContactInfo[] info);
	bool createBabyOK(string playername,COM_BabyInst inst,bool isToStorage);
	bool deleteBabyOK(string playername,int babyInstId);
	bool queryBabyByFFOK(COM_BabyRankData[] infos);
	bool queryBabyByIdOK(string name,COM_BabyInst inst);
	bool UpdateBabysOK(string playername);
	bool createEmployeeOK(string playername,COM_EmployeeInst inst);
	bool deleteEmployeeOK(string playername,uint[] instIds);
	bool queryEmployeeByFFOK(COM_EmployeeRankData[] infos);
	bool queryEmployeeByIdOK(string name,COM_EmployeeInst inst);
	bool appendMail(string playerName,COM_Mail[] mails);
	bool insertGuildOK(COM_Guild guild,COM_GuildMember guildMember);
	bool updateMemberJobOk(int roleId,GuildJob job);
	bool syncGuild(COM_Guild[] guilds);
	bool syncGuildMember(COM_GuildMember[] guildMember);
	bool fatchActivity(SGE_SysActivity date);
	bool syncEmployeeQuest(SGE_PlayerEmployeeQuest[] info);
}
//=============================================================
public static class SGE_DB2WorldDispatcher
{
	public static bool syncGlobalGuid(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		uint id;
		{
			if(!bin.ProtocolReader.readType(__r__, out id)) return false;
		}
		return __p__.syncGlobalGuid(id);
	}
	public static bool syncContactInfo(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		SGE_ContactInfoExt[] info;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			info = new SGE_ContactInfoExt[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				info[i] = new SGE_ContactInfoExt();
				if(!info[i].deserialize(__r__)) return false;
			}
		}
		return __p__.syncContactInfo(info);
	}
	public static bool queryPlayerSimpleInformationOk(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string username;
		COM_SimpleInformation[] insts;
		int serverId;
		{
			if(!bin.ProtocolReader.readType(__r__, out username, 65535)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			insts = new COM_SimpleInformation[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				insts[i] = new COM_SimpleInformation();
				if(!insts[i].deserialize(__r__)) return false;
			}
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out serverId)) return false;
		}
		return __p__.queryPlayerSimpleInformationOk(username,insts,serverId);
	}
	public static bool queryPlayerOk(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string username;
		SGE_DBPlayerData player = new SGE_DBPlayerData();
		{
			if(!bin.ProtocolReader.readType(__r__, out username, 65535)) return false;
		}
		{
			if(!player.deserialize(__r__)) return false;
		}
		return __p__.queryPlayerOk(username,player);
	}
	public static bool createPlayerOk(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string username;
		SGE_DBPlayerData inst = new SGE_DBPlayerData();
		int inDoorId;
		{
			if(!bin.ProtocolReader.readType(__r__, out username, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out inDoorId)) return false;
		}
		return __p__.createPlayerOk(username,inst,inDoorId);
	}
	public static bool createPlayerSameName(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string username;
		{
			if(!bin.ProtocolReader.readType(__r__, out username, 65535)) return false;
		}
		return __p__.createPlayerSameName(username);
	}
	public static bool queryPlayerByIdOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string playername;
		SGE_DBPlayerData inst = new SGE_DBPlayerData();
		int where;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out where)) return false;
		}
		return __p__.queryPlayerByIdOK(playername,inst,where);
	}
	public static bool queryEndlessStairAllDateOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string[] name;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			name = new string[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out name[i], 65535)) return false;
			}
		}
		return __p__.queryEndlessStairAllDateOK(name);
	}
	public static bool queryPlayerByLevelOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		COM_ContactInfo[] info;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			info = new COM_ContactInfo[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				info[i] = new COM_ContactInfo();
				if(!info[i].deserialize(__r__)) return false;
			}
		}
		return __p__.queryPlayerByLevelOK(info);
	}
	public static bool queryPlayerByFFOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		COM_ContactInfo[] info;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			info = new COM_ContactInfo[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				info[i] = new COM_ContactInfo();
				if(!info[i].deserialize(__r__)) return false;
			}
		}
		return __p__.queryPlayerByFFOK(info);
	}
	public static bool createBabyOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string playername;
		COM_BabyInst inst = new COM_BabyInst();
		bool isToStorage;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isToStorage)) return false;
		}
		return __p__.createBabyOK(playername,inst,isToStorage);
	}
	public static bool deleteBabyOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string playername;
		int babyInstId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out babyInstId)) return false;
		}
		return __p__.deleteBabyOK(playername,babyInstId);
	}
	public static bool queryBabyByFFOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		COM_BabyRankData[] infos;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_BabyRankData[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_BabyRankData();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.queryBabyByFFOK(infos);
	}
	public static bool queryBabyByIdOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string name;
		COM_BabyInst inst = new COM_BabyInst();
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.queryBabyByIdOK(name,inst);
	}
	public static bool UpdateBabysOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string playername;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		return __p__.UpdateBabysOK(playername);
	}
	public static bool createEmployeeOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string playername;
		COM_EmployeeInst inst = new COM_EmployeeInst();
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.createEmployeeOK(playername,inst);
	}
	public static bool deleteEmployeeOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string playername;
		uint[] instIds;
		{
			if(!bin.ProtocolReader.readType(__r__, out playername, 65535)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			instIds = new uint[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out instIds[i])) return false;
			}
		}
		return __p__.deleteEmployeeOK(playername,instIds);
	}
	public static bool queryEmployeeByFFOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		COM_EmployeeRankData[] infos;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			infos = new COM_EmployeeRankData[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				infos[i] = new COM_EmployeeRankData();
				if(!infos[i].deserialize(__r__)) return false;
			}
		}
		return __p__.queryEmployeeByFFOK(infos);
	}
	public static bool queryEmployeeByIdOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string name;
		COM_EmployeeInst inst = new COM_EmployeeInst();
		{
			if(!bin.ProtocolReader.readType(__r__, out name, 65535)) return false;
		}
		{
			if(!inst.deserialize(__r__)) return false;
		}
		return __p__.queryEmployeeByIdOK(name,inst);
	}
	public static bool appendMail(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		string playerName;
		COM_Mail[] mails;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerName, 65535)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			mails = new COM_Mail[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				mails[i] = new COM_Mail();
				if(!mails[i].deserialize(__r__)) return false;
			}
		}
		return __p__.appendMail(playerName,mails);
	}
	public static bool insertGuildOK(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		COM_Guild guild = new COM_Guild();
		COM_GuildMember guildMember = new COM_GuildMember();
		{
			if(!guild.deserialize(__r__)) return false;
		}
		{
			if(!guildMember.deserialize(__r__)) return false;
		}
		return __p__.insertGuildOK(guild,guildMember);
	}
	public static bool updateMemberJobOk(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		int roleId;
		GuildJob job;
		{
			if(!bin.ProtocolReader.readType(__r__, out roleId)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 7) return false;
			job = (GuildJob)__e__;
		}
		return __p__.updateMemberJobOk(roleId,job);
	}
	public static bool syncGuild(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		COM_Guild[] guilds;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			guilds = new COM_Guild[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				guilds[i] = new COM_Guild();
				if(!guilds[i].deserialize(__r__)) return false;
			}
		}
		return __p__.syncGuild(guilds);
	}
	public static bool syncGuildMember(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		COM_GuildMember[] guildMember;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			guildMember = new COM_GuildMember[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				guildMember[i] = new COM_GuildMember();
				if(!guildMember[i].deserialize(__r__)) return false;
			}
		}
		return __p__.syncGuildMember(guildMember);
	}
	public static bool fatchActivity(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		SGE_SysActivity date = new SGE_SysActivity();
		{
			if(!date.deserialize(__r__)) return false;
		}
		return __p__.fatchActivity(date);
	}
	public static bool syncEmployeeQuest(bin.IReader __r__, SGE_DB2WorldProxy __p__)
	{
		SGE_PlayerEmployeeQuest[] info;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			info = new SGE_PlayerEmployeeQuest[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				info[i] = new SGE_PlayerEmployeeQuest();
				if(!info[i].deserialize(__r__)) return false;
			}
		}
		return __p__.syncEmployeeQuest(info);
	}
	public static bool dispatch(bin.IReader r, SGE_DB2WorldProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_DB2WorldDispatcher.syncGlobalGuid(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_DB2WorldDispatcher.syncContactInfo(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_DB2WorldDispatcher.queryPlayerSimpleInformationOk(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_DB2WorldDispatcher.queryPlayerOk(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_DB2WorldDispatcher.createPlayerOk(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_DB2WorldDispatcher.createPlayerSameName(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_DB2WorldDispatcher.queryPlayerByIdOK(r, p)) return false;
			}
			break;
			case 7:
			{
				if(!SGE_DB2WorldDispatcher.queryEndlessStairAllDateOK(r, p)) return false;
			}
			break;
			case 8:
			{
				if(!SGE_DB2WorldDispatcher.queryPlayerByLevelOK(r, p)) return false;
			}
			break;
			case 9:
			{
				if(!SGE_DB2WorldDispatcher.queryPlayerByFFOK(r, p)) return false;
			}
			break;
			case 10:
			{
				if(!SGE_DB2WorldDispatcher.createBabyOK(r, p)) return false;
			}
			break;
			case 11:
			{
				if(!SGE_DB2WorldDispatcher.deleteBabyOK(r, p)) return false;
			}
			break;
			case 12:
			{
				if(!SGE_DB2WorldDispatcher.queryBabyByFFOK(r, p)) return false;
			}
			break;
			case 13:
			{
				if(!SGE_DB2WorldDispatcher.queryBabyByIdOK(r, p)) return false;
			}
			break;
			case 14:
			{
				if(!SGE_DB2WorldDispatcher.UpdateBabysOK(r, p)) return false;
			}
			break;
			case 15:
			{
				if(!SGE_DB2WorldDispatcher.createEmployeeOK(r, p)) return false;
			}
			break;
			case 16:
			{
				if(!SGE_DB2WorldDispatcher.deleteEmployeeOK(r, p)) return false;
			}
			break;
			case 17:
			{
				if(!SGE_DB2WorldDispatcher.queryEmployeeByFFOK(r, p)) return false;
			}
			break;
			case 18:
			{
				if(!SGE_DB2WorldDispatcher.queryEmployeeByIdOK(r, p)) return false;
			}
			break;
			case 19:
			{
				if(!SGE_DB2WorldDispatcher.appendMail(r, p)) return false;
			}
			break;
			case 20:
			{
				if(!SGE_DB2WorldDispatcher.insertGuildOK(r, p)) return false;
			}
			break;
			case 21:
			{
				if(!SGE_DB2WorldDispatcher.updateMemberJobOk(r, p)) return false;
			}
			break;
			case 22:
			{
				if(!SGE_DB2WorldDispatcher.syncGuild(r, p)) return false;
			}
			break;
			case 23:
			{
				if(!SGE_DB2WorldDispatcher.syncGuildMember(r, p)) return false;
			}
			break;
			case 24:
			{
				if(!SGE_DB2WorldDispatcher.fatchActivity(r, p)) return false;
			}
			break;
			case 25:
			{
				if(!SGE_DB2WorldDispatcher.syncEmployeeQuest(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_Scene2WorldStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
}
//=============================================================
public interface SGE_Scene2WorldProxy
{
}
//=============================================================
public static class SGE_Scene2WorldDispatcher
{
	public static bool dispatch(bin.IReader r, SGE_Scene2WorldProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_World2SceneStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void initDynamicNpcs(NpcType type,int count)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, count);
		}
		methodEnd();
	}
	public void refreshDynamicNpcs(NpcType type,int count)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, count);
		}
		methodEnd();
	}
	public void finiDynamicNpcs(NpcType type)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void addDynamicNpcs(int sceneId,int[] npcs)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		{
			uint __len__ = (npcs == null)?0:(uint)npcs.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, npcs[i]);
			}
		}
		methodEnd();
	}
	public void delDynamicNpc(int npcId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcId);
		}
		methodEnd();
	}
	public void delDynamicNpc2(int sceneId,int npcId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		{
			bin.ProtocolWriter.writeType(w, npcId);
		}
		methodEnd();
	}
	public void openSceneCopy(int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
	public void closeSceneCopy(int instId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 7;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, instId);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_World2SceneProxy
{
	bool initDynamicNpcs(NpcType type,int count);
	bool refreshDynamicNpcs(NpcType type,int count);
	bool finiDynamicNpcs(NpcType type);
	bool addDynamicNpcs(int sceneId,int[] npcs);
	bool delDynamicNpc(int npcId);
	bool delDynamicNpc2(int sceneId,int npcId);
	bool openSceneCopy(int instId);
	bool closeSceneCopy(int instId);
}
//=============================================================
public static class SGE_World2SceneDispatcher
{
	public static bool initDynamicNpcs(bin.IReader __r__, SGE_World2SceneProxy __p__)
	{
		NpcType type;
		int count;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 11) return false;
			type = (NpcType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out count)) return false;
		}
		return __p__.initDynamicNpcs(type,count);
	}
	public static bool refreshDynamicNpcs(bin.IReader __r__, SGE_World2SceneProxy __p__)
	{
		NpcType type;
		int count;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 11) return false;
			type = (NpcType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out count)) return false;
		}
		return __p__.refreshDynamicNpcs(type,count);
	}
	public static bool finiDynamicNpcs(bin.IReader __r__, SGE_World2SceneProxy __p__)
	{
		NpcType type;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 11) return false;
			type = (NpcType)__e__;
		}
		return __p__.finiDynamicNpcs(type);
	}
	public static bool addDynamicNpcs(bin.IReader __r__, SGE_World2SceneProxy __p__)
	{
		int sceneId;
		int[] npcs;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			npcs = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out npcs[i])) return false;
			}
		}
		return __p__.addDynamicNpcs(sceneId,npcs);
	}
	public static bool delDynamicNpc(bin.IReader __r__, SGE_World2SceneProxy __p__)
	{
		int npcId;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcId)) return false;
		}
		return __p__.delDynamicNpc(npcId);
	}
	public static bool delDynamicNpc2(bin.IReader __r__, SGE_World2SceneProxy __p__)
	{
		int sceneId;
		int npcId;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out npcId)) return false;
		}
		return __p__.delDynamicNpc2(sceneId,npcId);
	}
	public static bool openSceneCopy(bin.IReader __r__, SGE_World2SceneProxy __p__)
	{
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.openSceneCopy(instId);
	}
	public static bool closeSceneCopy(bin.IReader __r__, SGE_World2SceneProxy __p__)
	{
		int instId;
		{
			if(!bin.ProtocolReader.readType(__r__, out instId)) return false;
		}
		return __p__.closeSceneCopy(instId);
	}
	public static bool dispatch(bin.IReader r, SGE_World2SceneProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_World2SceneDispatcher.initDynamicNpcs(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_World2SceneDispatcher.refreshDynamicNpcs(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_World2SceneDispatcher.finiDynamicNpcs(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_World2SceneDispatcher.addDynamicNpcs(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_World2SceneDispatcher.delDynamicNpc(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_World2SceneDispatcher.delDynamicNpc2(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_World2SceneDispatcher.openSceneCopy(r, p)) return false;
			}
			break;
			case 7:
			{
				if(!SGE_World2SceneDispatcher.closeSceneCopy(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_Player_Scene2WorldStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void joinScene(COM_SceneInfo info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void move2(COM_FPosition pos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			pos.serialize(w);
		}
		methodEnd();
	}
	public void cantMove()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void transfor2(COM_FPosition pos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			pos.serialize(w);
		}
		methodEnd();
	}
	public void autoBattleResult(bool isOk)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, isOk);
		}
		methodEnd();
	}
	public void zoneJoinBattle(int zoneId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, zoneId);
		}
		methodEnd();
	}
	public void playerAddNpc(int[] npcs)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (npcs == null)?0:(uint)npcs.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, npcs[i]);
			}
		}
		methodEnd();
	}
	public void playerDelNpc(int[] npcs)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 7;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (npcs == null)?0:(uint)npcs.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, npcs[i]);
			}
		}
		methodEnd();
	}
	public void talkedNpc(int npcid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 8;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcid);
		}
		methodEnd();
	}
	public void findDynamicNpcOK(int npcid,bool hasnpc)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 9;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcid);
		}
		{
			bin.ProtocolWriter.writeType(w, hasnpc);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_Player_Scene2WorldProxy
{
	bool joinScene(COM_SceneInfo info);
	bool move2(COM_FPosition pos);
	bool cantMove();
	bool transfor2(COM_FPosition pos);
	bool autoBattleResult(bool isOk);
	bool zoneJoinBattle(int zoneId);
	bool playerAddNpc(int[] npcs);
	bool playerDelNpc(int[] npcs);
	bool talkedNpc(int npcid);
	bool findDynamicNpcOK(int npcid,bool hasnpc);
}
//=============================================================
public static class SGE_Player_Scene2WorldDispatcher
{
	public static bool joinScene(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		COM_SceneInfo info = new COM_SceneInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.joinScene(info);
	}
	public static bool move2(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		COM_FPosition pos = new COM_FPosition();
		{
			if(!pos.deserialize(__r__)) return false;
		}
		return __p__.move2(pos);
	}
	public static bool cantMove(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		return __p__.cantMove();
	}
	public static bool transfor2(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		COM_FPosition pos = new COM_FPosition();
		{
			if(!pos.deserialize(__r__)) return false;
		}
		return __p__.transfor2(pos);
	}
	public static bool autoBattleResult(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		bool isOk;
		{
			if(!bin.ProtocolReader.readType(__r__, out isOk)) return false;
		}
		return __p__.autoBattleResult(isOk);
	}
	public static bool zoneJoinBattle(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		int zoneId;
		{
			if(!bin.ProtocolReader.readType(__r__, out zoneId)) return false;
		}
		return __p__.zoneJoinBattle(zoneId);
	}
	public static bool playerAddNpc(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		int[] npcs;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			npcs = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out npcs[i])) return false;
			}
		}
		return __p__.playerAddNpc(npcs);
	}
	public static bool playerDelNpc(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		int[] npcs;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			npcs = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out npcs[i])) return false;
			}
		}
		return __p__.playerDelNpc(npcs);
	}
	public static bool talkedNpc(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		int npcid;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcid)) return false;
		}
		return __p__.talkedNpc(npcid);
	}
	public static bool findDynamicNpcOK(bin.IReader __r__, SGE_Player_Scene2WorldProxy __p__)
	{
		int npcid;
		bool hasnpc;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out hasnpc)) return false;
		}
		return __p__.findDynamicNpcOK(npcid,hasnpc);
	}
	public static bool dispatch(bin.IReader r, SGE_Player_Scene2WorldProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_Player_Scene2WorldDispatcher.joinScene(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_Player_Scene2WorldDispatcher.move2(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_Player_Scene2WorldDispatcher.cantMove(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_Player_Scene2WorldDispatcher.transfor2(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_Player_Scene2WorldDispatcher.autoBattleResult(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_Player_Scene2WorldDispatcher.zoneJoinBattle(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_Player_Scene2WorldDispatcher.playerAddNpc(r, p)) return false;
			}
			break;
			case 7:
			{
				if(!SGE_Player_Scene2WorldDispatcher.playerDelNpc(r, p)) return false;
			}
			break;
			case 8:
			{
				if(!SGE_Player_Scene2WorldDispatcher.talkedNpc(r, p)) return false;
			}
			break;
			case 9:
			{
				if(!SGE_Player_Scene2WorldDispatcher.findDynamicNpcOK(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_Player_World2SceneStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void initScenePlayer(SGE_ScenePlayerInfo info)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			info.serialize(w);
		}
		methodEnd();
	}
	public void scenePlayerUpLevel(int level)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, level);
		}
		methodEnd();
	}
	public void scenePlayerAddCurrentQuest(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void scenePlayerDelCurrentQuest(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void scenePlayerAddAcceptableQuest(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void scenePlayerDelAcceptableQuest(int questId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, questId);
		}
		methodEnd();
	}
	public void openScene(int sceneId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		methodEnd();
	}
	public void joinBattle()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 7;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void finishBattle()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 8;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void transforScene(int sceneId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 9;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		methodEnd();
	}
	public void transforSceneByEntry(int sceneId,int entryId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 10;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		{
			bin.ProtocolWriter.writeType(w, entryId);
		}
		methodEnd();
	}
	public void backHomeScene()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 11;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void sceneLoaded()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 12;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void move(COM_FPosition pos)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 13;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			pos.serialize(w);
		}
		methodEnd();
	}
	public void moveToNpc(int npcid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 14;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcid);
		}
		methodEnd();
	}
	public void moveToNpc2(NpcType type)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 15;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)type;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
	public void moveToZone(int sceneId,int zoneId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 16;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, sceneId);
		}
		{
			bin.ProtocolWriter.writeType(w, zoneId);
		}
		methodEnd();
	}
	public void autoBattle()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 17;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void stopMove()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 18;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void addFollow(int scenePlayerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 19;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, scenePlayerId);
		}
		methodEnd();
	}
	public void delFollow(int scenePlayerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 20;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, scenePlayerId);
		}
		methodEnd();
	}
	public void delFollows()
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 21;
		bin.ProtocolWriter.writeType(w, __pid__);
		methodEnd();
	}
	public void addFollows(int[] scenePlayers)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 22;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			uint __len__ = (scenePlayers == null)?0:(uint)scenePlayers.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				bin.ProtocolWriter.writeType(w, scenePlayers[i]);
			}
		}
		methodEnd();
	}
	public void setEntryFlag(int scenePlayerId,bool isFlag)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 23;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, scenePlayerId);
		}
		{
			bin.ProtocolWriter.writeType(w, isFlag);
		}
		methodEnd();
	}
	public void addNpc(int npcid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 24;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcid);
		}
		methodEnd();
	}
	public void delNpc(int npcid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 25;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcid);
		}
		methodEnd();
	}
	public void findDynamicNpc(int npcId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 26;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, npcId);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_Player_World2SceneProxy
{
	bool initScenePlayer(SGE_ScenePlayerInfo info);
	bool scenePlayerUpLevel(int level);
	bool scenePlayerAddCurrentQuest(int questId);
	bool scenePlayerDelCurrentQuest(int questId);
	bool scenePlayerAddAcceptableQuest(int questId);
	bool scenePlayerDelAcceptableQuest(int questId);
	bool openScene(int sceneId);
	bool joinBattle();
	bool finishBattle();
	bool transforScene(int sceneId);
	bool transforSceneByEntry(int sceneId,int entryId);
	bool backHomeScene();
	bool sceneLoaded();
	bool move(COM_FPosition pos);
	bool moveToNpc(int npcid);
	bool moveToNpc2(NpcType type);
	bool moveToZone(int sceneId,int zoneId);
	bool autoBattle();
	bool stopMove();
	bool addFollow(int scenePlayerId);
	bool delFollow(int scenePlayerId);
	bool delFollows();
	bool addFollows(int[] scenePlayers);
	bool setEntryFlag(int scenePlayerId,bool isFlag);
	bool addNpc(int npcid);
	bool delNpc(int npcid);
	bool findDynamicNpc(int npcId);
}
//=============================================================
public static class SGE_Player_World2SceneDispatcher
{
	public static bool initScenePlayer(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		SGE_ScenePlayerInfo info = new SGE_ScenePlayerInfo();
		{
			if(!info.deserialize(__r__)) return false;
		}
		return __p__.initScenePlayer(info);
	}
	public static bool scenePlayerUpLevel(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int level;
		{
			if(!bin.ProtocolReader.readType(__r__, out level)) return false;
		}
		return __p__.scenePlayerUpLevel(level);
	}
	public static bool scenePlayerAddCurrentQuest(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.scenePlayerAddCurrentQuest(questId);
	}
	public static bool scenePlayerDelCurrentQuest(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.scenePlayerDelCurrentQuest(questId);
	}
	public static bool scenePlayerAddAcceptableQuest(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.scenePlayerAddAcceptableQuest(questId);
	}
	public static bool scenePlayerDelAcceptableQuest(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int questId;
		{
			if(!bin.ProtocolReader.readType(__r__, out questId)) return false;
		}
		return __p__.scenePlayerDelAcceptableQuest(questId);
	}
	public static bool openScene(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int sceneId;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		return __p__.openScene(sceneId);
	}
	public static bool joinBattle(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		return __p__.joinBattle();
	}
	public static bool finishBattle(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		return __p__.finishBattle();
	}
	public static bool transforScene(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int sceneId;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		return __p__.transforScene(sceneId);
	}
	public static bool transforSceneByEntry(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int sceneId;
		int entryId;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out entryId)) return false;
		}
		return __p__.transforSceneByEntry(sceneId,entryId);
	}
	public static bool backHomeScene(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		return __p__.backHomeScene();
	}
	public static bool sceneLoaded(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		return __p__.sceneLoaded();
	}
	public static bool move(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		COM_FPosition pos = new COM_FPosition();
		{
			if(!pos.deserialize(__r__)) return false;
		}
		return __p__.move(pos);
	}
	public static bool moveToNpc(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int npcid;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcid)) return false;
		}
		return __p__.moveToNpc(npcid);
	}
	public static bool moveToNpc2(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		NpcType type;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 11) return false;
			type = (NpcType)__e__;
		}
		return __p__.moveToNpc2(type);
	}
	public static bool moveToZone(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int sceneId;
		int zoneId;
		{
			if(!bin.ProtocolReader.readType(__r__, out sceneId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out zoneId)) return false;
		}
		return __p__.moveToZone(sceneId,zoneId);
	}
	public static bool autoBattle(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		return __p__.autoBattle();
	}
	public static bool stopMove(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		return __p__.stopMove();
	}
	public static bool addFollow(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int scenePlayerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out scenePlayerId)) return false;
		}
		return __p__.addFollow(scenePlayerId);
	}
	public static bool delFollow(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int scenePlayerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out scenePlayerId)) return false;
		}
		return __p__.delFollow(scenePlayerId);
	}
	public static bool delFollows(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		return __p__.delFollows();
	}
	public static bool addFollows(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int[] scenePlayers;
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			scenePlayers = new int[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				if(!bin.ProtocolReader.readType(__r__, out scenePlayers[i])) return false;
			}
		}
		return __p__.addFollows(scenePlayers);
	}
	public static bool setEntryFlag(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int scenePlayerId;
		bool isFlag;
		{
			if(!bin.ProtocolReader.readType(__r__, out scenePlayerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out isFlag)) return false;
		}
		return __p__.setEntryFlag(scenePlayerId,isFlag);
	}
	public static bool addNpc(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int npcid;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcid)) return false;
		}
		return __p__.addNpc(npcid);
	}
	public static bool delNpc(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int npcid;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcid)) return false;
		}
		return __p__.delNpc(npcid);
	}
	public static bool findDynamicNpc(bin.IReader __r__, SGE_Player_World2SceneProxy __p__)
	{
		int npcId;
		{
			if(!bin.ProtocolReader.readType(__r__, out npcId)) return false;
		}
		return __p__.findDynamicNpc(npcId);
	}
	public static bool dispatch(bin.IReader r, SGE_Player_World2SceneProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_Player_World2SceneDispatcher.initScenePlayer(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_Player_World2SceneDispatcher.scenePlayerUpLevel(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_Player_World2SceneDispatcher.scenePlayerAddCurrentQuest(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_Player_World2SceneDispatcher.scenePlayerDelCurrentQuest(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_Player_World2SceneDispatcher.scenePlayerAddAcceptableQuest(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_Player_World2SceneDispatcher.scenePlayerDelAcceptableQuest(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_Player_World2SceneDispatcher.openScene(r, p)) return false;
			}
			break;
			case 7:
			{
				if(!SGE_Player_World2SceneDispatcher.joinBattle(r, p)) return false;
			}
			break;
			case 8:
			{
				if(!SGE_Player_World2SceneDispatcher.finishBattle(r, p)) return false;
			}
			break;
			case 9:
			{
				if(!SGE_Player_World2SceneDispatcher.transforScene(r, p)) return false;
			}
			break;
			case 10:
			{
				if(!SGE_Player_World2SceneDispatcher.transforSceneByEntry(r, p)) return false;
			}
			break;
			case 11:
			{
				if(!SGE_Player_World2SceneDispatcher.backHomeScene(r, p)) return false;
			}
			break;
			case 12:
			{
				if(!SGE_Player_World2SceneDispatcher.sceneLoaded(r, p)) return false;
			}
			break;
			case 13:
			{
				if(!SGE_Player_World2SceneDispatcher.move(r, p)) return false;
			}
			break;
			case 14:
			{
				if(!SGE_Player_World2SceneDispatcher.moveToNpc(r, p)) return false;
			}
			break;
			case 15:
			{
				if(!SGE_Player_World2SceneDispatcher.moveToNpc2(r, p)) return false;
			}
			break;
			case 16:
			{
				if(!SGE_Player_World2SceneDispatcher.moveToZone(r, p)) return false;
			}
			break;
			case 17:
			{
				if(!SGE_Player_World2SceneDispatcher.autoBattle(r, p)) return false;
			}
			break;
			case 18:
			{
				if(!SGE_Player_World2SceneDispatcher.stopMove(r, p)) return false;
			}
			break;
			case 19:
			{
				if(!SGE_Player_World2SceneDispatcher.addFollow(r, p)) return false;
			}
			break;
			case 20:
			{
				if(!SGE_Player_World2SceneDispatcher.delFollow(r, p)) return false;
			}
			break;
			case 21:
			{
				if(!SGE_Player_World2SceneDispatcher.delFollows(r, p)) return false;
			}
			break;
			case 22:
			{
				if(!SGE_Player_World2SceneDispatcher.addFollows(r, p)) return false;
			}
			break;
			case 23:
			{
				if(!SGE_Player_World2SceneDispatcher.setEntryFlag(r, p)) return false;
			}
			break;
			case 24:
			{
				if(!SGE_Player_World2SceneDispatcher.addNpc(r, p)) return false;
			}
			break;
			case 25:
			{
				if(!SGE_Player_World2SceneDispatcher.delNpc(r, p)) return false;
			}
			break;
			case 26:
			{
				if(!SGE_Player_World2SceneDispatcher.findDynamicNpc(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_World2GMTStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
}
//=============================================================
public interface SGE_World2GMTProxy
{
}
//=============================================================
public static class SGE_World2GMTDispatcher
{
	public static bool dispatch(bin.IReader r, SGE_World2GMTProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_GMT2WorldStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void addExp(uint playerId,uint exp)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, exp);
		}
		methodEnd();
	}
	public void addMoney(uint playerId,int money)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, money);
		}
		methodEnd();
	}
	public void addDiamond(uint playerId,int diamond)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, diamond);
		}
		methodEnd();
	}
	public void openGM(uint playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void closeGM(uint playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void noTalkPlayer(uint playerId,uint time)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, time);
		}
		methodEnd();
	}
	public void sealPlayer(uint playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void kickPlayer(uint playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 7;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void openTalkPlayer(uint playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 8;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void unsealPlayer(uint playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 9;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void sendMailAllOnline(COM_Mail mail,int lowLevel,int highLevel,long lowRegTime,long highRegTime)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 10;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			mail.serialize(w);
		}
		{
			bin.ProtocolWriter.writeType(w, lowLevel);
		}
		{
			bin.ProtocolWriter.writeType(w, highLevel);
		}
		{
			bin.ProtocolWriter.writeType(w, lowRegTime);
		}
		{
			bin.ProtocolWriter.writeType(w, highRegTime);
		}
		methodEnd();
	}
	public void gmtNotice(NoticeSendType bType,string note,ulong thetime,long itvtime)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 11;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			byte __e__ = (byte)bType;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			bin.ProtocolWriter.writeType(w, note);
		}
		{
			bin.ProtocolWriter.writeType(w, thetime);
		}
		{
			bin.ProtocolWriter.writeType(w, itvtime);
		}
		methodEnd();
	}
	public void setChargeTotal(COM_ADChargeTotal data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 12;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void setChargeEvery(COM_ADChargeEvery data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 13;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void setDiscountStore(COM_ADDiscountStore data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 14;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void setLoginTotal(COM_ADLoginTotal data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 15;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void setHotRole(COM_ADHotRole data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 16;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void setEmployeeActivity(COM_ADEmployeeTotal data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 17;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void setMinGiftBagActivity(COM_ADGiftBag data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 18;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void setZhuanpanActivity(COM_ZhuanpanData data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 19;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void setIntegralshop(COM_IntegralData data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 20;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void makeOrder(uint playerId,SGE_GmtOrder order)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 21;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			order.serialize(w);
		}
		methodEnd();
	}
	public void doScript(string script)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 22;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, script);
		}
		methodEnd();
	}
	public void playerDoScript(uint playerId,string script)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 23;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			bin.ProtocolWriter.writeType(w, script);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_GMT2WorldProxy
{
	bool addExp(uint playerId,uint exp);
	bool addMoney(uint playerId,int money);
	bool addDiamond(uint playerId,int diamond);
	bool openGM(uint playerId);
	bool closeGM(uint playerId);
	bool noTalkPlayer(uint playerId,uint time);
	bool sealPlayer(uint playerId);
	bool kickPlayer(uint playerId);
	bool openTalkPlayer(uint playerId);
	bool unsealPlayer(uint playerId);
	bool sendMailAllOnline(COM_Mail mail,int lowLevel,int highLevel,long lowRegTime,long highRegTime);
	bool gmtNotice(NoticeSendType bType,string note,ulong thetime,long itvtime);
	bool setChargeTotal(COM_ADChargeTotal data);
	bool setChargeEvery(COM_ADChargeEvery data);
	bool setDiscountStore(COM_ADDiscountStore data);
	bool setLoginTotal(COM_ADLoginTotal data);
	bool setHotRole(COM_ADHotRole data);
	bool setEmployeeActivity(COM_ADEmployeeTotal data);
	bool setMinGiftBagActivity(COM_ADGiftBag data);
	bool setZhuanpanActivity(COM_ZhuanpanData data);
	bool setIntegralshop(COM_IntegralData data);
	bool makeOrder(uint playerId,SGE_GmtOrder order);
	bool doScript(string script);
	bool playerDoScript(uint playerId,string script);
}
//=============================================================
public static class SGE_GMT2WorldDispatcher
{
	public static bool addExp(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		uint exp;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out exp)) return false;
		}
		return __p__.addExp(playerId,exp);
	}
	public static bool addMoney(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		int money;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out money)) return false;
		}
		return __p__.addMoney(playerId,money);
	}
	public static bool addDiamond(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		int diamond;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out diamond)) return false;
		}
		return __p__.addDiamond(playerId,diamond);
	}
	public static bool openGM(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.openGM(playerId);
	}
	public static bool closeGM(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.closeGM(playerId);
	}
	public static bool noTalkPlayer(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		uint time;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out time)) return false;
		}
		return __p__.noTalkPlayer(playerId,time);
	}
	public static bool sealPlayer(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.sealPlayer(playerId);
	}
	public static bool kickPlayer(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.kickPlayer(playerId);
	}
	public static bool openTalkPlayer(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.openTalkPlayer(playerId);
	}
	public static bool unsealPlayer(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.unsealPlayer(playerId);
	}
	public static bool sendMailAllOnline(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_Mail mail = new COM_Mail();
		int lowLevel;
		int highLevel;
		long lowRegTime;
		long highRegTime;
		{
			if(!mail.deserialize(__r__)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out lowLevel)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out highLevel)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out lowRegTime)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out highRegTime)) return false;
		}
		return __p__.sendMailAllOnline(mail,lowLevel,highLevel,lowRegTime,highRegTime);
	}
	public static bool gmtNotice(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		NoticeSendType bType;
		string note;
		ulong thetime;
		long itvtime;
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 3) return false;
			bType = (NoticeSendType)__e__;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out note, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out thetime)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out itvtime)) return false;
		}
		return __p__.gmtNotice(bType,note,thetime,itvtime);
	}
	public static bool setChargeTotal(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_ADChargeTotal data = new COM_ADChargeTotal();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setChargeTotal(data);
	}
	public static bool setChargeEvery(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_ADChargeEvery data = new COM_ADChargeEvery();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setChargeEvery(data);
	}
	public static bool setDiscountStore(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_ADDiscountStore data = new COM_ADDiscountStore();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setDiscountStore(data);
	}
	public static bool setLoginTotal(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_ADLoginTotal data = new COM_ADLoginTotal();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setLoginTotal(data);
	}
	public static bool setHotRole(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_ADHotRole data = new COM_ADHotRole();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setHotRole(data);
	}
	public static bool setEmployeeActivity(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_ADEmployeeTotal data = new COM_ADEmployeeTotal();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setEmployeeActivity(data);
	}
	public static bool setMinGiftBagActivity(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_ADGiftBag data = new COM_ADGiftBag();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setMinGiftBagActivity(data);
	}
	public static bool setZhuanpanActivity(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_ZhuanpanData data = new COM_ZhuanpanData();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setZhuanpanActivity(data);
	}
	public static bool setIntegralshop(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		COM_IntegralData data = new COM_IntegralData();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.setIntegralshop(data);
	}
	public static bool makeOrder(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		SGE_GmtOrder order = new SGE_GmtOrder();
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!order.deserialize(__r__)) return false;
		}
		return __p__.makeOrder(playerId,order);
	}
	public static bool doScript(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		string script;
		{
			if(!bin.ProtocolReader.readType(__r__, out script, 65535)) return false;
		}
		return __p__.doScript(script);
	}
	public static bool playerDoScript(bin.IReader __r__, SGE_GMT2WorldProxy __p__)
	{
		uint playerId;
		string script;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out script, 65535)) return false;
		}
		return __p__.playerDoScript(playerId,script);
	}
	public static bool dispatch(bin.IReader r, SGE_GMT2WorldProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_GMT2WorldDispatcher.addExp(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_GMT2WorldDispatcher.addMoney(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_GMT2WorldDispatcher.addDiamond(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_GMT2WorldDispatcher.openGM(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_GMT2WorldDispatcher.closeGM(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_GMT2WorldDispatcher.noTalkPlayer(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_GMT2WorldDispatcher.sealPlayer(r, p)) return false;
			}
			break;
			case 7:
			{
				if(!SGE_GMT2WorldDispatcher.kickPlayer(r, p)) return false;
			}
			break;
			case 8:
			{
				if(!SGE_GMT2WorldDispatcher.openTalkPlayer(r, p)) return false;
			}
			break;
			case 9:
			{
				if(!SGE_GMT2WorldDispatcher.unsealPlayer(r, p)) return false;
			}
			break;
			case 10:
			{
				if(!SGE_GMT2WorldDispatcher.sendMailAllOnline(r, p)) return false;
			}
			break;
			case 11:
			{
				if(!SGE_GMT2WorldDispatcher.gmtNotice(r, p)) return false;
			}
			break;
			case 12:
			{
				if(!SGE_GMT2WorldDispatcher.setChargeTotal(r, p)) return false;
			}
			break;
			case 13:
			{
				if(!SGE_GMT2WorldDispatcher.setChargeEvery(r, p)) return false;
			}
			break;
			case 14:
			{
				if(!SGE_GMT2WorldDispatcher.setDiscountStore(r, p)) return false;
			}
			break;
			case 15:
			{
				if(!SGE_GMT2WorldDispatcher.setLoginTotal(r, p)) return false;
			}
			break;
			case 16:
			{
				if(!SGE_GMT2WorldDispatcher.setHotRole(r, p)) return false;
			}
			break;
			case 17:
			{
				if(!SGE_GMT2WorldDispatcher.setEmployeeActivity(r, p)) return false;
			}
			break;
			case 18:
			{
				if(!SGE_GMT2WorldDispatcher.setMinGiftBagActivity(r, p)) return false;
			}
			break;
			case 19:
			{
				if(!SGE_GMT2WorldDispatcher.setZhuanpanActivity(r, p)) return false;
			}
			break;
			case 20:
			{
				if(!SGE_GMT2WorldDispatcher.setIntegralshop(r, p)) return false;
			}
			break;
			case 21:
			{
				if(!SGE_GMT2WorldDispatcher.makeOrder(r, p)) return false;
			}
			break;
			case 22:
			{
				if(!SGE_GMT2WorldDispatcher.doScript(r, p)) return false;
			}
			break;
			case 23:
			{
				if(!SGE_GMT2WorldDispatcher.playerDoScript(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_World2MallStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void fetchSell(int playerid,COM_SearchContext context)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		{
			context.serialize(w);
		}
		methodEnd();
	}
	public void fetchMySell(int playerid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		methodEnd();
	}
	public void fetchSelledItem(int playerId)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		methodEnd();
	}
	public void sell(COM_SellItem item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void unSell(int playerid,int sellid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		{
			bin.ProtocolWriter.writeType(w, sellid);
		}
		methodEnd();
	}
	public void buy(SGE_BuyContent content)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			content.serialize(w);
		}
		methodEnd();
	}
	public void insertSelledItem(COM_SelledItem item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			item.serialize(w);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_World2MallProxy
{
	bool fetchSell(int playerid,COM_SearchContext context);
	bool fetchMySell(int playerid);
	bool fetchSelledItem(int playerId);
	bool sell(COM_SellItem item);
	bool unSell(int playerid,int sellid);
	bool buy(SGE_BuyContent content);
	bool insertSelledItem(COM_SelledItem item);
}
//=============================================================
public static class SGE_World2MallDispatcher
{
	public static bool fetchSell(bin.IReader __r__, SGE_World2MallProxy __p__)
	{
		int playerid;
		COM_SearchContext context = new COM_SearchContext();
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		{
			if(!context.deserialize(__r__)) return false;
		}
		return __p__.fetchSell(playerid,context);
	}
	public static bool fetchMySell(bin.IReader __r__, SGE_World2MallProxy __p__)
	{
		int playerid;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		return __p__.fetchMySell(playerid);
	}
	public static bool fetchSelledItem(bin.IReader __r__, SGE_World2MallProxy __p__)
	{
		int playerId;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		return __p__.fetchSelledItem(playerId);
	}
	public static bool sell(bin.IReader __r__, SGE_World2MallProxy __p__)
	{
		COM_SellItem item = new COM_SellItem();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.sell(item);
	}
	public static bool unSell(bin.IReader __r__, SGE_World2MallProxy __p__)
	{
		int playerid;
		int sellid;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out sellid)) return false;
		}
		return __p__.unSell(playerid,sellid);
	}
	public static bool buy(bin.IReader __r__, SGE_World2MallProxy __p__)
	{
		SGE_BuyContent content = new SGE_BuyContent();
		{
			if(!content.deserialize(__r__)) return false;
		}
		return __p__.buy(content);
	}
	public static bool insertSelledItem(bin.IReader __r__, SGE_World2MallProxy __p__)
	{
		COM_SelledItem item = new COM_SelledItem();
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.insertSelledItem(item);
	}
	public static bool dispatch(bin.IReader r, SGE_World2MallProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_World2MallDispatcher.fetchSell(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_World2MallDispatcher.fetchMySell(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_World2MallDispatcher.fetchSelledItem(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_World2MallDispatcher.sell(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_World2MallDispatcher.unSell(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_World2MallDispatcher.buy(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_World2MallDispatcher.insertSelledItem(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_Mall2WorldStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void fetchSellOk(int playerid,COM_SellItem[] items,int totalSize)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		{
			bin.ProtocolWriter.writeType(w, totalSize);
		}
		methodEnd();
	}
	public void fetchMySellOk(int playerid,COM_SellItem[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void fetchSelledItemOk(int playerId,COM_SelledItem[] items)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerId);
		}
		{
			uint __len__ = (items == null)?0:(uint)items.Length;
			bin.ProtocolWriter.writeDynSize(w, __len__);
			for(uint i = 0; i < __len__; i++)
			{
				items[i].serialize(w);
			}
		}
		methodEnd();
	}
	public void sellOk(int playerid,COM_SellItem item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void unSellOk(int playerid,int sellid)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		{
			bin.ProtocolWriter.writeType(w, sellid);
		}
		methodEnd();
	}
	public void buyOk(int playerid,COM_SellItem item)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		{
			item.serialize(w);
		}
		methodEnd();
	}
	public void buyFail(int playerid,ErrorNo errorno)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, playerid);
		}
		{
			byte __e__ = (byte)errorno;
			bin.ProtocolWriter.writeType(w, __e__);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_Mall2WorldProxy
{
	bool fetchSellOk(int playerid,COM_SellItem[] items,int totalSize);
	bool fetchMySellOk(int playerid,COM_SellItem[] items);
	bool fetchSelledItemOk(int playerId,COM_SelledItem[] items);
	bool sellOk(int playerid,COM_SellItem item);
	bool unSellOk(int playerid,int sellid);
	bool buyOk(int playerid,COM_SellItem item);
	bool buyFail(int playerid,ErrorNo errorno);
}
//=============================================================
public static class SGE_Mall2WorldDispatcher
{
	public static bool fetchSellOk(bin.IReader __r__, SGE_Mall2WorldProxy __p__)
	{
		int playerid;
		COM_SellItem[] items;
		int totalSize;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_SellItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_SellItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out totalSize)) return false;
		}
		return __p__.fetchSellOk(playerid,items,totalSize);
	}
	public static bool fetchMySellOk(bin.IReader __r__, SGE_Mall2WorldProxy __p__)
	{
		int playerid;
		COM_SellItem[] items;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_SellItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_SellItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.fetchMySellOk(playerid,items);
	}
	public static bool fetchSelledItemOk(bin.IReader __r__, SGE_Mall2WorldProxy __p__)
	{
		int playerId;
		COM_SelledItem[] items;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerId)) return false;
		}
		{
			uint __len__;
			if(!bin.ProtocolReader.readDynSize(__r__, out __len__) || __len__ > 65535) return false;
			items = new COM_SelledItem[__len__];
			for(uint i = 0; i < __len__; i++)
			{
				items[i] = new COM_SelledItem();
				if(!items[i].deserialize(__r__)) return false;
			}
		}
		return __p__.fetchSelledItemOk(playerId,items);
	}
	public static bool sellOk(bin.IReader __r__, SGE_Mall2WorldProxy __p__)
	{
		int playerid;
		COM_SellItem item = new COM_SellItem();
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.sellOk(playerid,item);
	}
	public static bool unSellOk(bin.IReader __r__, SGE_Mall2WorldProxy __p__)
	{
		int playerid;
		int sellid;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out sellid)) return false;
		}
		return __p__.unSellOk(playerid,sellid);
	}
	public static bool buyOk(bin.IReader __r__, SGE_Mall2WorldProxy __p__)
	{
		int playerid;
		COM_SellItem item = new COM_SellItem();
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		{
			if(!item.deserialize(__r__)) return false;
		}
		return __p__.buyOk(playerid,item);
	}
	public static bool buyFail(bin.IReader __r__, SGE_Mall2WorldProxy __p__)
	{
		int playerid;
		ErrorNo errorno;
		{
			if(!bin.ProtocolReader.readType(__r__, out playerid)) return false;
		}
		{
			byte __e__ = 0;
			if(!bin.ProtocolReader.readType(__r__, out __e__) || __e__ >= 158) return false;
			errorno = (ErrorNo)__e__;
		}
		return __p__.buyFail(playerid,errorno);
	}
	public static bool dispatch(bin.IReader r, SGE_Mall2WorldProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_Mall2WorldDispatcher.fetchSellOk(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_Mall2WorldDispatcher.fetchMySellOk(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_Mall2WorldDispatcher.fetchSelledItemOk(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_Mall2WorldDispatcher.sellOk(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_Mall2WorldDispatcher.unSellOk(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_Mall2WorldDispatcher.buyOk(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_Mall2WorldDispatcher.buyFail(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class BacklogStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void log(string key,string msg,string stack,string version)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, key);
		}
		{
			bin.ProtocolWriter.writeType(w, msg);
		}
		{
			bin.ProtocolWriter.writeType(w, stack);
		}
		{
			bin.ProtocolWriter.writeType(w, version);
		}
		methodEnd();
	}
}
//=============================================================
public interface BacklogProxy
{
	bool log(string key,string msg,string stack,string version);
}
//=============================================================
public static class BacklogDispatcher
{
	public static bool log(bin.IReader __r__, BacklogProxy __p__)
	{
		string key;
		string msg;
		string stack;
		string version;
		{
			if(!bin.ProtocolReader.readType(__r__, out key, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out msg, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out stack, 65535)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out version, 65535)) return false;
		}
		return __p__.log(key,msg,stack,version);
	}
	public static bool dispatch(bin.IReader r, BacklogProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!BacklogDispatcher.log(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}
//=============================================================
public abstract class SGE_LogStub
{
	protected abstract bin.IWriter methodBegin();
	protected abstract void methodEnd();
	public void account(SGE_Account data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 0;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void login(SGE_Login data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 1;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void order(SGE_Order data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 2;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void role(SGE_LogRole data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 3;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void playersay(uint senderId,string senderName,COM_Chat chat)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 4;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			bin.ProtocolWriter.writeType(w, senderId);
		}
		{
			bin.ProtocolWriter.writeType(w, senderName);
		}
		{
			chat.serialize(w);
		}
		methodEnd();
	}
	public void playerTrack(SGE_LogProduceTrack data)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 5;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			data.serialize(w);
		}
		methodEnd();
	}
	public void playerUIBehavior(SGE_LogUIBehavior core)
	{
		bin.IWriter w = methodBegin();
		if(w == null) return;
		ushort __pid__ = 6;
		bin.ProtocolWriter.writeType(w, __pid__);
		{
			core.serialize(w);
		}
		methodEnd();
	}
}
//=============================================================
public interface SGE_LogProxy
{
	bool account(SGE_Account data);
	bool login(SGE_Login data);
	bool order(SGE_Order data);
	bool role(SGE_LogRole data);
	bool playersay(uint senderId,string senderName,COM_Chat chat);
	bool playerTrack(SGE_LogProduceTrack data);
	bool playerUIBehavior(SGE_LogUIBehavior core);
}
//=============================================================
public static class SGE_LogDispatcher
{
	public static bool account(bin.IReader __r__, SGE_LogProxy __p__)
	{
		SGE_Account data = new SGE_Account();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.account(data);
	}
	public static bool login(bin.IReader __r__, SGE_LogProxy __p__)
	{
		SGE_Login data = new SGE_Login();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.login(data);
	}
	public static bool order(bin.IReader __r__, SGE_LogProxy __p__)
	{
		SGE_Order data = new SGE_Order();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.order(data);
	}
	public static bool role(bin.IReader __r__, SGE_LogProxy __p__)
	{
		SGE_LogRole data = new SGE_LogRole();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.role(data);
	}
	public static bool playersay(bin.IReader __r__, SGE_LogProxy __p__)
	{
		uint senderId;
		string senderName;
		COM_Chat chat = new COM_Chat();
		{
			if(!bin.ProtocolReader.readType(__r__, out senderId)) return false;
		}
		{
			if(!bin.ProtocolReader.readType(__r__, out senderName, 65535)) return false;
		}
		{
			if(!chat.deserialize(__r__)) return false;
		}
		return __p__.playersay(senderId,senderName,chat);
	}
	public static bool playerTrack(bin.IReader __r__, SGE_LogProxy __p__)
	{
		SGE_LogProduceTrack data = new SGE_LogProduceTrack();
		{
			if(!data.deserialize(__r__)) return false;
		}
		return __p__.playerTrack(data);
	}
	public static bool playerUIBehavior(bin.IReader __r__, SGE_LogProxy __p__)
	{
		SGE_LogUIBehavior core = new SGE_LogUIBehavior();
		{
			if(!core.deserialize(__r__)) return false;
		}
		return __p__.playerUIBehavior(core);
	}
	public static bool dispatch(bin.IReader r, SGE_LogProxy p)
	{
		ushort pid;
		if(!bin.ProtocolReader.readType(r, out pid)) return false;
		switch(pid)
		{
			case 0:
			{
				if(!SGE_LogDispatcher.account(r, p)) return false;
			}
			break;
			case 1:
			{
				if(!SGE_LogDispatcher.login(r, p)) return false;
			}
			break;
			case 2:
			{
				if(!SGE_LogDispatcher.order(r, p)) return false;
			}
			break;
			case 3:
			{
				if(!SGE_LogDispatcher.role(r, p)) return false;
			}
			break;
			case 4:
			{
				if(!SGE_LogDispatcher.playersay(r, p)) return false;
			}
			break;
			case 5:
			{
				if(!SGE_LogDispatcher.playerTrack(r, p)) return false;
			}
			break;
			case 6:
			{
				if(!SGE_LogDispatcher.playerUIBehavior(r, p)) return false;
			}
			break;
			default: return false;
		}
		return true;
	}
}

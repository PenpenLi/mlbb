/* This file is generated by arpcc, do not change manually! */
//=============================================================
public class SGE_OrderInfo
{
	public int productId_;
	public int productCount_;
	public float amount_;
	public string orderId_ = "";
	public string payTime_ = "";
	// member ids.
	public enum FID
	{
		productId_ = 0,
		productCount_ = 1,
		amount_ = 2,
		orderId_ = 3,
		payTime_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(productId_==0?false:true);
		__fm__.writeBit(productCount_==0?false:true);
		__fm__.writeBit(amount_==0?false:true);
		__fm__.writeBit(orderId_.Length>0?true:false);
		__fm__.writeBit(payTime_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(productId_ != 0)
				bin.ProtocolWriter.writeType(w, productId_);
		}
		{
			if(productCount_ != 0)
				bin.ProtocolWriter.writeType(w, productCount_);
		}
		{
			if(amount_ != 0)
				bin.ProtocolWriter.writeType(w, amount_);
		}
		{
			if(orderId_.Length > 0)
				bin.ProtocolWriter.writeType(w, orderId_);
		}
		{
			if(payTime_.Length > 0)
				bin.ProtocolWriter.writeType(w, payTime_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out productId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out productCount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out amount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out orderId_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out payTime_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.productId_:
			{
				{
					bin.ProtocolWriter.writeType(w, productId_);
				}
			}
			return true;
			case (uint)FID.productCount_:
			{
				{
					bin.ProtocolWriter.writeType(w, productCount_);
				}
			}
			return true;
			case (uint)FID.amount_:
			{
				{
					bin.ProtocolWriter.writeType(w, amount_);
				}
			}
			return true;
			case (uint)FID.orderId_:
			{
				{
					bin.ProtocolWriter.writeType(w, orderId_);
				}
			}
			return true;
			case (uint)FID.payTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, payTime_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.productId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out productId_)) return false;
				}
			}
			return true;
			case (uint)FID.productCount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out productCount_)) return false;
				}
			}
			return true;
			case (uint)FID.amount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out amount_)) return false;
				}
			}
			return true;
			case (uint)FID.orderId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out orderId_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.payTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out payTime_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADLoginTotalContent
{
	public uint totalDays_;
	public uint[] itemIds_ = new uint[0];
	public uint[] itemStacks_ = new uint[0];
	public byte status_;
	// member ids.
	public enum FID
	{
		totalDays_ = 0,
		itemIds_ = 1,
		itemStacks_ = 2,
		status_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(totalDays_==0?false:true);
		__fm__.writeBit((itemIds_==null)?false:(itemIds_.Length>0?true:false));
		__fm__.writeBit((itemStacks_==null)?false:(itemStacks_.Length>0?true:false));
		__fm__.writeBit(status_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(totalDays_ != 0)
				bin.ProtocolWriter.writeType(w, totalDays_);
		}
		{
			if(itemIds_ != null && itemIds_.Length > 0)
			{
				uint __len__ = (itemIds_ == null)?0:(uint)itemIds_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, itemIds_[i]);
				}
			}
		}
		{
			if(itemStacks_ != null && itemStacks_.Length > 0)
			{
				uint __len__ = (itemStacks_ == null)?0:(uint)itemStacks_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, itemStacks_[i]);
				}
			}
		}
		{
			if(status_ != 0)
				bin.ProtocolWriter.writeType(w, status_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out totalDays_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemIds_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out itemIds_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemStacks_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out itemStacks_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out status_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.totalDays_:
			{
				{
					bin.ProtocolWriter.writeType(w, totalDays_);
				}
			}
			return true;
			case (uint)FID.itemIds_:
			{
				{
					uint __len__ = (itemIds_ == null)?0:(uint)itemIds_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, itemIds_[i]);
					}
				}
			}
			return true;
			case (uint)FID.itemStacks_:
			{
				{
					uint __len__ = (itemStacks_ == null)?0:(uint)itemStacks_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, itemStacks_[i]);
					}
				}
			}
			return true;
			case (uint)FID.status_:
			{
				{
					bin.ProtocolWriter.writeType(w, status_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.totalDays_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out totalDays_)) return false;
				}
			}
			return true;
			case (uint)FID.itemIds_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemIds_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out itemIds_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.itemStacks_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemStacks_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out itemStacks_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.status_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out status_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADLoginTotal
{
	public int loginDays_;
	public ulong sinceStamp_;
	public ulong endStamp_;
	public COM_ADLoginTotalContent[] contents_ = new COM_ADLoginTotalContent[0];
	// member ids.
	public enum FID
	{
		loginDays_ = 0,
		sinceStamp_ = 1,
		endStamp_ = 2,
		contents_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(loginDays_==0?false:true);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(loginDays_ != 0)
				bin.ProtocolWriter.writeType(w, loginDays_);
		}
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out loginDays_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_ADLoginTotalContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_ADLoginTotalContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.loginDays_:
			{
				{
					bin.ProtocolWriter.writeType(w, loginDays_);
				}
			}
			return true;
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.loginDays_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out loginDays_)) return false;
				}
			}
			return true;
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_ADLoginTotalContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_ADLoginTotalContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADChargeTotalContent
{
	public uint currencyCount_;
	public uint[] itemIds_ = new uint[0];
	public uint[] itemStacks_ = new uint[0];
	public byte status_;
	// member ids.
	public enum FID
	{
		currencyCount_ = 0,
		itemIds_ = 1,
		itemStacks_ = 2,
		status_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(currencyCount_==0?false:true);
		__fm__.writeBit((itemIds_==null)?false:(itemIds_.Length>0?true:false));
		__fm__.writeBit((itemStacks_==null)?false:(itemStacks_.Length>0?true:false));
		__fm__.writeBit(status_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(currencyCount_ != 0)
				bin.ProtocolWriter.writeType(w, currencyCount_);
		}
		{
			if(itemIds_ != null && itemIds_.Length > 0)
			{
				uint __len__ = (itemIds_ == null)?0:(uint)itemIds_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, itemIds_[i]);
				}
			}
		}
		{
			if(itemStacks_ != null && itemStacks_.Length > 0)
			{
				uint __len__ = (itemStacks_ == null)?0:(uint)itemStacks_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, itemStacks_[i]);
				}
			}
		}
		{
			if(status_ != 0)
				bin.ProtocolWriter.writeType(w, status_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out currencyCount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemIds_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out itemIds_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemStacks_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out itemStacks_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out status_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.currencyCount_:
			{
				{
					bin.ProtocolWriter.writeType(w, currencyCount_);
				}
			}
			return true;
			case (uint)FID.itemIds_:
			{
				{
					uint __len__ = (itemIds_ == null)?0:(uint)itemIds_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, itemIds_[i]);
					}
				}
			}
			return true;
			case (uint)FID.itemStacks_:
			{
				{
					uint __len__ = (itemStacks_ == null)?0:(uint)itemStacks_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, itemStacks_[i]);
					}
				}
			}
			return true;
			case (uint)FID.status_:
			{
				{
					bin.ProtocolWriter.writeType(w, status_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.currencyCount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out currencyCount_)) return false;
				}
			}
			return true;
			case (uint)FID.itemIds_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemIds_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out itemIds_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.itemStacks_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemStacks_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out itemStacks_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.status_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out status_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADChargeTotal
{
	public int recharge_;
	public ulong sinceStamp_;
	public ulong endStamp_;
	public COM_ADChargeTotalContent[] contents_ = new COM_ADChargeTotalContent[0];
	// member ids.
	public enum FID
	{
		recharge_ = 0,
		sinceStamp_ = 1,
		endStamp_ = 2,
		contents_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(recharge_==0?false:true);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(recharge_ != 0)
				bin.ProtocolWriter.writeType(w, recharge_);
		}
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out recharge_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_ADChargeTotalContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_ADChargeTotalContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.recharge_:
			{
				{
					bin.ProtocolWriter.writeType(w, recharge_);
				}
			}
			return true;
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.recharge_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out recharge_)) return false;
				}
			}
			return true;
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_ADChargeTotalContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_ADChargeTotalContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADDiscountStoreContent
{
	public uint price_;
	public uint itemId_;
	public float discount_;
	public uint buyLimit_;
	// member ids.
	public enum FID
	{
		price_ = 0,
		itemId_ = 1,
		discount_ = 2,
		buyLimit_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(price_==0?false:true);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(discount_==0?false:true);
		__fm__.writeBit(buyLimit_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(price_ != 0)
				bin.ProtocolWriter.writeType(w, price_);
		}
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(discount_ != 0)
				bin.ProtocolWriter.writeType(w, discount_);
		}
		{
			if(buyLimit_ != 0)
				bin.ProtocolWriter.writeType(w, buyLimit_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out price_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out discount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out buyLimit_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.price_:
			{
				{
					bin.ProtocolWriter.writeType(w, price_);
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.discount_:
			{
				{
					bin.ProtocolWriter.writeType(w, discount_);
				}
			}
			return true;
			case (uint)FID.buyLimit_:
			{
				{
					bin.ProtocolWriter.writeType(w, buyLimit_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.price_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out price_)) return false;
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.discount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out discount_)) return false;
				}
			}
			return true;
			case (uint)FID.buyLimit_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out buyLimit_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADDiscountStore
{
	public ulong sinceStamp_;
	public ulong endStamp_;
	public COM_ADDiscountStoreContent[] contents_ = new COM_ADDiscountStoreContent[0];
	// member ids.
	public enum FID
	{
		sinceStamp_ = 0,
		endStamp_ = 1,
		contents_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_ADDiscountStoreContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_ADDiscountStoreContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_ADDiscountStoreContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_ADDiscountStoreContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADChargeEveryContent
{
	public uint currencyCount_;
	public uint[] itemIds_ = new uint[0];
	public uint[] itemStacks_ = new uint[0];
	public byte status_;
	public byte count_;
	// member ids.
	public enum FID
	{
		currencyCount_ = 0,
		itemIds_ = 1,
		itemStacks_ = 2,
		status_ = 3,
		count_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(currencyCount_==0?false:true);
		__fm__.writeBit((itemIds_==null)?false:(itemIds_.Length>0?true:false));
		__fm__.writeBit((itemStacks_==null)?false:(itemStacks_.Length>0?true:false));
		__fm__.writeBit(status_==0?false:true);
		__fm__.writeBit(count_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(currencyCount_ != 0)
				bin.ProtocolWriter.writeType(w, currencyCount_);
		}
		{
			if(itemIds_ != null && itemIds_.Length > 0)
			{
				uint __len__ = (itemIds_ == null)?0:(uint)itemIds_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, itemIds_[i]);
				}
			}
		}
		{
			if(itemStacks_ != null && itemStacks_.Length > 0)
			{
				uint __len__ = (itemStacks_ == null)?0:(uint)itemStacks_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, itemStacks_[i]);
				}
			}
		}
		{
			if(status_ != 0)
				bin.ProtocolWriter.writeType(w, status_);
		}
		{
			if(count_ != 0)
				bin.ProtocolWriter.writeType(w, count_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out currencyCount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemIds_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out itemIds_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemStacks_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out itemStacks_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out status_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out count_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.currencyCount_:
			{
				{
					bin.ProtocolWriter.writeType(w, currencyCount_);
				}
			}
			return true;
			case (uint)FID.itemIds_:
			{
				{
					uint __len__ = (itemIds_ == null)?0:(uint)itemIds_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, itemIds_[i]);
					}
				}
			}
			return true;
			case (uint)FID.itemStacks_:
			{
				{
					uint __len__ = (itemStacks_ == null)?0:(uint)itemStacks_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, itemStacks_[i]);
					}
				}
			}
			return true;
			case (uint)FID.status_:
			{
				{
					bin.ProtocolWriter.writeType(w, status_);
				}
			}
			return true;
			case (uint)FID.count_:
			{
				{
					bin.ProtocolWriter.writeType(w, count_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.currencyCount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out currencyCount_)) return false;
				}
			}
			return true;
			case (uint)FID.itemIds_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemIds_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out itemIds_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.itemStacks_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemStacks_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out itemStacks_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.status_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out status_)) return false;
				}
			}
			return true;
			case (uint)FID.count_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out count_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADChargeEvery
{
	public int currentCount_;
	public ulong sinceStamp_;
	public ulong endStamp_;
	public COM_ADChargeEveryContent[] contents_ = new COM_ADChargeEveryContent[0];
	// member ids.
	public enum FID
	{
		currentCount_ = 0,
		sinceStamp_ = 1,
		endStamp_ = 2,
		contents_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(currentCount_==0?false:true);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(currentCount_ != 0)
				bin.ProtocolWriter.writeType(w, currentCount_);
		}
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out currentCount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_ADChargeEveryContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_ADChargeEveryContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.currentCount_:
			{
				{
					bin.ProtocolWriter.writeType(w, currentCount_);
				}
			}
			return true;
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.currentCount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out currentCount_)) return false;
				}
			}
			return true;
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_ADChargeEveryContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_ADChargeEveryContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADCardsContent
{
	public uint count_;
	public uint rewardId_;
	// member ids.
	public enum FID
	{
		count_ = 0,
		rewardId_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(count_==0?false:true);
		__fm__.writeBit(rewardId_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(count_ != 0)
				bin.ProtocolWriter.writeType(w, count_);
		}
		{
			if(rewardId_ != 0)
				bin.ProtocolWriter.writeType(w, rewardId_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out count_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rewardId_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.count_:
			{
				{
					bin.ProtocolWriter.writeType(w, count_);
				}
			}
			return true;
			case (uint)FID.rewardId_:
			{
				{
					bin.ProtocolWriter.writeType(w, rewardId_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.count_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out count_)) return false;
				}
			}
			return true;
			case (uint)FID.rewardId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rewardId_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADCards
{
	public ulong sinceStamp_;
	public ulong endStamp_;
	public COM_ADCardsContent[] contents_ = new COM_ADCardsContent[0];
	// member ids.
	public enum FID
	{
		sinceStamp_ = 0,
		endStamp_ = 1,
		contents_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_ADCardsContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_ADCardsContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_ADCardsContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_ADCardsContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADHotRoleContent
{
	public EntityType type_;
	public uint buyNum_;
	public uint roleId_;
	public uint price_;
	// member ids.
	public enum FID
	{
		type_ = 0,
		buyNum_ = 1,
		roleId_ = 2,
		price_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(buyNum_==0?false:true);
		__fm__.writeBit(roleId_==0?false:true);
		__fm__.writeBit(price_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(buyNum_ != 0)
				bin.ProtocolWriter.writeType(w, buyNum_);
		}
		{
			if(roleId_ != 0)
				bin.ProtocolWriter.writeType(w, roleId_);
		}
		{
			if(price_ != 0)
				bin.ProtocolWriter.writeType(w, price_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
				type_ = (EntityType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out buyNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out price_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.buyNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, buyNum_);
				}
			}
			return true;
			case (uint)FID.roleId_:
			{
				{
					bin.ProtocolWriter.writeType(w, roleId_);
				}
			}
			return true;
			case (uint)FID.price_:
			{
				{
					bin.ProtocolWriter.writeType(w, price_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
					type_ = (EntityType)__e__;
				}
			}
			return true;
			case (uint)FID.buyNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out buyNum_)) return false;
				}
			}
			return true;
			case (uint)FID.roleId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
				}
			}
			return true;
			case (uint)FID.price_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out price_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADHotRole
{
	public ulong sinceStamp_;
	public ulong endStamp_;
	public COM_ADHotRoleContent[] contents_ = new COM_ADHotRoleContent[0];
	// member ids.
	public enum FID
	{
		sinceStamp_ = 0,
		endStamp_ = 1,
		contents_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_ADHotRoleContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_ADHotRoleContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_ADHotRoleContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_ADHotRoleContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADEmployeeTotalContent
{
	public uint outputCount_;
	public uint[] itemIds_ = new uint[0];
	public uint[] itemStacks_ = new uint[0];
	public byte status_;
	// member ids.
	public enum FID
	{
		outputCount_ = 0,
		itemIds_ = 1,
		itemStacks_ = 2,
		status_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(outputCount_==0?false:true);
		__fm__.writeBit((itemIds_==null)?false:(itemIds_.Length>0?true:false));
		__fm__.writeBit((itemStacks_==null)?false:(itemStacks_.Length>0?true:false));
		__fm__.writeBit(status_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(outputCount_ != 0)
				bin.ProtocolWriter.writeType(w, outputCount_);
		}
		{
			if(itemIds_ != null && itemIds_.Length > 0)
			{
				uint __len__ = (itemIds_ == null)?0:(uint)itemIds_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, itemIds_[i]);
				}
			}
		}
		{
			if(itemStacks_ != null && itemStacks_.Length > 0)
			{
				uint __len__ = (itemStacks_ == null)?0:(uint)itemStacks_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, itemStacks_[i]);
				}
			}
		}
		{
			if(status_ != 0)
				bin.ProtocolWriter.writeType(w, status_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out outputCount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemIds_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out itemIds_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemStacks_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out itemStacks_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out status_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.outputCount_:
			{
				{
					bin.ProtocolWriter.writeType(w, outputCount_);
				}
			}
			return true;
			case (uint)FID.itemIds_:
			{
				{
					uint __len__ = (itemIds_ == null)?0:(uint)itemIds_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, itemIds_[i]);
					}
				}
			}
			return true;
			case (uint)FID.itemStacks_:
			{
				{
					uint __len__ = (itemStacks_ == null)?0:(uint)itemStacks_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, itemStacks_[i]);
					}
				}
			}
			return true;
			case (uint)FID.status_:
			{
				{
					bin.ProtocolWriter.writeType(w, status_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.outputCount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out outputCount_)) return false;
				}
			}
			return true;
			case (uint)FID.itemIds_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemIds_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out itemIds_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.itemStacks_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemStacks_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out itemStacks_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.status_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out status_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADEmployeeTotal
{
	public int outputNum_;
	public ulong sinceStamp_;
	public ulong endStamp_;
	public COM_ADEmployeeTotalContent[] contents_ = new COM_ADEmployeeTotalContent[0];
	// member ids.
	public enum FID
	{
		outputNum_ = 0,
		sinceStamp_ = 1,
		endStamp_ = 2,
		contents_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(outputNum_==0?false:true);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(outputNum_ != 0)
				bin.ProtocolWriter.writeType(w, outputNum_);
		}
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out outputNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_ADEmployeeTotalContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_ADEmployeeTotalContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.outputNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, outputNum_);
				}
			}
			return true;
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.outputNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out outputNum_)) return false;
				}
			}
			return true;
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_ADEmployeeTotalContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_ADEmployeeTotalContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_GiftItem
{
	public uint itemId_;
	public uint itemNum_;
	// member ids.
	public enum FID
	{
		itemId_ = 0,
		itemNum_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(itemNum_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(itemNum_ != 0)
				bin.ProtocolWriter.writeType(w, itemNum_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemNum_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.itemNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemNum_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.itemNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemNum_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ADGiftBag
{
	public ulong sinceStamp_;
	public ulong endStamp_;
	public bool isflag_;
	public byte price_;
	public byte oldprice_;
	public COM_GiftItem[] itemdata_ = new COM_GiftItem[0];
	// member ids.
	public enum FID
	{
		sinceStamp_ = 0,
		endStamp_ = 1,
		isflag_ = 2,
		price_ = 3,
		oldprice_ = 4,
		itemdata_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit(isflag_);
		__fm__.writeBit(price_==0?false:true);
		__fm__.writeBit(oldprice_==0?false:true);
		__fm__.writeBit((itemdata_==null)?false:(itemdata_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
		}
		{
			if(price_ != 0)
				bin.ProtocolWriter.writeType(w, price_);
		}
		{
			if(oldprice_ != 0)
				bin.ProtocolWriter.writeType(w, oldprice_);
		}
		{
			if(itemdata_ != null && itemdata_.Length > 0)
			{
				uint __len__ = (itemdata_ == null)?0:(uint)itemdata_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					itemdata_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			isflag_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out price_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out oldprice_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemdata_ = new COM_GiftItem[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					itemdata_[i] = new COM_GiftItem();
					if(!itemdata_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.isflag_:
			{
				{
					bin.ProtocolWriter.writeType(w, isflag_);
				}
			}
			return true;
			case (uint)FID.price_:
			{
				{
					bin.ProtocolWriter.writeType(w, price_);
				}
			}
			return true;
			case (uint)FID.oldprice_:
			{
				{
					bin.ProtocolWriter.writeType(w, oldprice_);
				}
			}
			return true;
			case (uint)FID.itemdata_:
			{
				{
					uint __len__ = (itemdata_ == null)?0:(uint)itemdata_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						itemdata_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.isflag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isflag_)) return false;
				}
			}
			return true;
			case (uint)FID.price_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out price_)) return false;
				}
			}
			return true;
			case (uint)FID.oldprice_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out oldprice_)) return false;
				}
			}
			return true;
			case (uint)FID.itemdata_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemdata_ = new COM_GiftItem[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						itemdata_[i] = new COM_GiftItem();
						if(!itemdata_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Sevenday
{
	public uint quest_;
	public AchievementType stype_;
	public uint qvalue_;
	public bool isfinish_;
	public bool isreward_;
	// member ids.
	public enum FID
	{
		quest_ = 0,
		stype_ = 1,
		qvalue_ = 2,
		isfinish_ = 3,
		isreward_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(quest_==0?false:true);
		__fm__.writeBit(stype_==0?false:true);
		__fm__.writeBit(qvalue_==0?false:true);
		__fm__.writeBit(isfinish_);
		__fm__.writeBit(isreward_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(quest_ != 0)
				bin.ProtocolWriter.writeType(w, quest_);
		}
		{
			byte __e__ = (byte)stype_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(qvalue_ != 0)
				bin.ProtocolWriter.writeType(w, qvalue_);
		}
		{
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out quest_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 60) return false;
				stype_ = (AchievementType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out qvalue_)) return false;
			}
		}
		{
			isfinish_ = __fm__.readBit();
		}
		{
			isreward_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.quest_:
			{
				{
					bin.ProtocolWriter.writeType(w, quest_);
				}
			}
			return true;
			case (uint)FID.stype_:
			{
				{
					byte __e__ = (byte)stype_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.qvalue_:
			{
				{
					bin.ProtocolWriter.writeType(w, qvalue_);
				}
			}
			return true;
			case (uint)FID.isfinish_:
			{
				{
					bin.ProtocolWriter.writeType(w, isfinish_);
				}
			}
			return true;
			case (uint)FID.isreward_:
			{
				{
					bin.ProtocolWriter.writeType(w, isreward_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.quest_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out quest_)) return false;
				}
			}
			return true;
			case (uint)FID.stype_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 60) return false;
					stype_ = (AchievementType)__e__;
				}
			}
			return true;
			case (uint)FID.qvalue_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out qvalue_)) return false;
				}
			}
			return true;
			case (uint)FID.isfinish_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isfinish_)) return false;
				}
			}
			return true;
			case (uint)FID.isreward_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isreward_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ZhuanpanContent
{
	public uint id_;
	public uint item_;
	public uint itemNum_;
	public uint rate_;
	public uint maxdrop_;
	// member ids.
	public enum FID
	{
		id_ = 0,
		item_ = 1,
		itemNum_ = 2,
		rate_ = 3,
		maxdrop_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(id_==0?false:true);
		__fm__.writeBit(item_==0?false:true);
		__fm__.writeBit(itemNum_==0?false:true);
		__fm__.writeBit(rate_==0?false:true);
		__fm__.writeBit(maxdrop_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(id_ != 0)
				bin.ProtocolWriter.writeType(w, id_);
		}
		{
			if(item_ != 0)
				bin.ProtocolWriter.writeType(w, item_);
		}
		{
			if(itemNum_ != 0)
				bin.ProtocolWriter.writeType(w, itemNum_);
		}
		{
			if(rate_ != 0)
				bin.ProtocolWriter.writeType(w, rate_);
		}
		{
			if(maxdrop_ != 0)
				bin.ProtocolWriter.writeType(w, maxdrop_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out id_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out item_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rate_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out maxdrop_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.id_:
			{
				{
					bin.ProtocolWriter.writeType(w, id_);
				}
			}
			return true;
			case (uint)FID.item_:
			{
				{
					bin.ProtocolWriter.writeType(w, item_);
				}
			}
			return true;
			case (uint)FID.itemNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemNum_);
				}
			}
			return true;
			case (uint)FID.rate_:
			{
				{
					bin.ProtocolWriter.writeType(w, rate_);
				}
			}
			return true;
			case (uint)FID.maxdrop_:
			{
				{
					bin.ProtocolWriter.writeType(w, maxdrop_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.id_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out id_)) return false;
				}
			}
			return true;
			case (uint)FID.item_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out item_)) return false;
				}
			}
			return true;
			case (uint)FID.itemNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemNum_)) return false;
				}
			}
			return true;
			case (uint)FID.rate_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rate_)) return false;
				}
			}
			return true;
			case (uint)FID.maxdrop_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out maxdrop_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Zhuanpan
{
	public string playerName_ = "";
	public uint zhuanpanId_;
	// member ids.
	public enum FID
	{
		playerName_ = 0,
		zhuanpanId_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(zhuanpanId_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(zhuanpanId_ != 0)
				bin.ProtocolWriter.writeType(w, zhuanpanId_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out zhuanpanId_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.zhuanpanId_:
			{
				{
					bin.ProtocolWriter.writeType(w, zhuanpanId_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.zhuanpanId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out zhuanpanId_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ZhuanpanData
{
	public ulong sinceStamp_;
	public ulong endStamp_;
	public COM_ZhuanpanContent[] contents_ = new COM_ZhuanpanContent[0];
	public COM_Zhuanpan[] rarity_ = new COM_Zhuanpan[0];
	// member ids.
	public enum FID
	{
		sinceStamp_ = 0,
		endStamp_ = 1,
		contents_ = 2,
		rarity_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		__fm__.writeBit((rarity_==null)?false:(rarity_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
		{
			if(rarity_ != null && rarity_.Length > 0)
			{
				uint __len__ = (rarity_ == null)?0:(uint)rarity_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					rarity_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_ZhuanpanContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_ZhuanpanContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				rarity_ = new COM_Zhuanpan[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					rarity_[i] = new COM_Zhuanpan();
					if(!rarity_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.rarity_:
			{
				{
					uint __len__ = (rarity_ == null)?0:(uint)rarity_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						rarity_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_ZhuanpanContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_ZhuanpanContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.rarity_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					rarity_ = new COM_Zhuanpan[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						rarity_[i] = new COM_Zhuanpan();
						if(!rarity_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_IntegralContent
{
	public uint id_;
	public uint itemid_;
	public int times_;
	public int cost_;
	// member ids.
	public enum FID
	{
		id_ = 0,
		itemid_ = 1,
		times_ = 2,
		cost_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(id_==0?false:true);
		__fm__.writeBit(itemid_==0?false:true);
		__fm__.writeBit(times_==0?false:true);
		__fm__.writeBit(cost_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(id_ != 0)
				bin.ProtocolWriter.writeType(w, id_);
		}
		{
			if(itemid_ != 0)
				bin.ProtocolWriter.writeType(w, itemid_);
		}
		{
			if(times_ != 0)
				bin.ProtocolWriter.writeType(w, times_);
		}
		{
			if(cost_ != 0)
				bin.ProtocolWriter.writeType(w, cost_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out id_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out times_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out cost_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.id_:
			{
				{
					bin.ProtocolWriter.writeType(w, id_);
				}
			}
			return true;
			case (uint)FID.itemid_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemid_);
				}
			}
			return true;
			case (uint)FID.times_:
			{
				{
					bin.ProtocolWriter.writeType(w, times_);
				}
			}
			return true;
			case (uint)FID.cost_:
			{
				{
					bin.ProtocolWriter.writeType(w, cost_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.id_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out id_)) return false;
				}
			}
			return true;
			case (uint)FID.itemid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemid_)) return false;
				}
			}
			return true;
			case (uint)FID.times_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out times_)) return false;
				}
			}
			return true;
			case (uint)FID.cost_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out cost_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_IntegralData
{
	public ulong sinceStamp_;
	public ulong endStamp_;
	public uint integral_;
	public bool isflag_;
	public COM_IntegralContent[] contents_ = new COM_IntegralContent[0];
	// member ids.
	public enum FID
	{
		sinceStamp_ = 0,
		endStamp_ = 1,
		integral_ = 2,
		isflag_ = 3,
		contents_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(sinceStamp_==0?false:true);
		__fm__.writeBit(endStamp_==0?false:true);
		__fm__.writeBit(integral_==0?false:true);
		__fm__.writeBit(isflag_);
		__fm__.writeBit((contents_==null)?false:(contents_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(sinceStamp_ != 0)
				bin.ProtocolWriter.writeType(w, sinceStamp_);
		}
		{
			if(endStamp_ != 0)
				bin.ProtocolWriter.writeType(w, endStamp_);
		}
		{
			if(integral_ != 0)
				bin.ProtocolWriter.writeType(w, integral_);
		}
		{
		}
		{
			if(contents_ != null && contents_.Length > 0)
			{
				uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out integral_)) return false;
			}
		}
		{
			isflag_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				contents_ = new COM_IntegralContent[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					contents_[i] = new COM_IntegralContent();
					if(!contents_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, sinceStamp_);
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, endStamp_);
				}
			}
			return true;
			case (uint)FID.integral_:
			{
				{
					bin.ProtocolWriter.writeType(w, integral_);
				}
			}
			return true;
			case (uint)FID.isflag_:
			{
				{
					bin.ProtocolWriter.writeType(w, isflag_);
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__ = (contents_ == null)?0:(uint)contents_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.sinceStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sinceStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.endStamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out endStamp_)) return false;
				}
			}
			return true;
			case (uint)FID.integral_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out integral_)) return false;
				}
			}
			return true;
			case (uint)FID.isflag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isflag_)) return false;
				}
			}
			return true;
			case (uint)FID.contents_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					contents_ = new COM_IntegralContent[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						contents_[i] = new COM_IntegralContent();
						if(!contents_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_SysActivity
{
	public COM_ADLoginTotal loginData_ = new COM_ADLoginTotal();
	public COM_ADChargeTotal chData_ = new COM_ADChargeTotal();
	public COM_ADDiscountStore stData_ = new COM_ADDiscountStore();
	public COM_ADChargeEvery ceData_ = new COM_ADChargeEvery();
	public COM_ADCards acData_ = new COM_ADCards();
	public COM_ADHotRole hrData_ = new COM_ADHotRole();
	public COM_ADEmployeeTotal etdata_ = new COM_ADEmployeeTotal();
	public COM_ADGiftBag gbdata_ = new COM_ADGiftBag();
	public COM_ZhuanpanData zpdata_ = new COM_ZhuanpanData();
	public COM_IntegralData icdata_ = new COM_IntegralData();
	// member ids.
	public enum FID
	{
		loginData_ = 0,
		chData_ = 1,
		stData_ = 2,
		ceData_ = 3,
		acData_ = 4,
		hrData_ = 5,
		etdata_ = 6,
		gbdata_ = 7,
		zpdata_ = 8,
		icdata_ = 9,
		MAX = 10,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			loginData_.serialize(w);
		}
		{
			chData_.serialize(w);
		}
		{
			stData_.serialize(w);
		}
		{
			ceData_.serialize(w);
		}
		{
			acData_.serialize(w);
		}
		{
			hrData_.serialize(w);
		}
		{
			etdata_.serialize(w);
		}
		{
			gbdata_.serialize(w);
		}
		{
			zpdata_.serialize(w);
		}
		{
			icdata_.serialize(w);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			__fm__.readBit();
			if(!loginData_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!chData_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!stData_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!ceData_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!acData_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!hrData_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!etdata_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!gbdata_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!zpdata_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!icdata_.deserialize(r)) return false;
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.loginData_:
			{
				{
					loginData_.serialize(w);
				}
			}
			return true;
			case (uint)FID.chData_:
			{
				{
					chData_.serialize(w);
				}
			}
			return true;
			case (uint)FID.stData_:
			{
				{
					stData_.serialize(w);
				}
			}
			return true;
			case (uint)FID.ceData_:
			{
				{
					ceData_.serialize(w);
				}
			}
			return true;
			case (uint)FID.acData_:
			{
				{
					acData_.serialize(w);
				}
			}
			return true;
			case (uint)FID.hrData_:
			{
				{
					hrData_.serialize(w);
				}
			}
			return true;
			case (uint)FID.etdata_:
			{
				{
					etdata_.serialize(w);
				}
			}
			return true;
			case (uint)FID.gbdata_:
			{
				{
					gbdata_.serialize(w);
				}
			}
			return true;
			case (uint)FID.zpdata_:
			{
				{
					zpdata_.serialize(w);
				}
			}
			return true;
			case (uint)FID.icdata_:
			{
				{
					icdata_.serialize(w);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.loginData_:
			{
				{
					if(!loginData_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.chData_:
			{
				{
					if(!chData_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.stData_:
			{
				{
					if(!stData_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.ceData_:
			{
				{
					if(!ceData_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.acData_:
			{
				{
					if(!acData_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.hrData_:
			{
				{
					if(!hrData_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.etdata_:
			{
				{
					if(!etdata_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.gbdata_:
			{
				{
					if(!gbdata_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.zpdata_:
			{
				{
					if(!zpdata_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.icdata_:
			{
				{
					if(!icdata_.deserialize(r)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_LoginInfo
{
	public string username_ = "";
	public string password_ = "";
	public uint version_;
	public string sessionkey_ = "";
	public string mac_ = "";
	public string idfa_ = "";
	public string devicetype_ = "";
	// member ids.
	public enum FID
	{
		username_ = 0,
		password_ = 1,
		version_ = 2,
		sessionkey_ = 3,
		mac_ = 4,
		idfa_ = 5,
		devicetype_ = 6,
		MAX = 7,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(username_.Length>0?true:false);
		__fm__.writeBit(password_.Length>0?true:false);
		__fm__.writeBit(version_==0?false:true);
		__fm__.writeBit(sessionkey_.Length>0?true:false);
		__fm__.writeBit(mac_.Length>0?true:false);
		__fm__.writeBit(idfa_.Length>0?true:false);
		__fm__.writeBit(devicetype_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(username_.Length > 0)
				bin.ProtocolWriter.writeType(w, username_);
		}
		{
			if(password_.Length > 0)
				bin.ProtocolWriter.writeType(w, password_);
		}
		{
			if(version_ != 0)
				bin.ProtocolWriter.writeType(w, version_);
		}
		{
			if(sessionkey_.Length > 0)
				bin.ProtocolWriter.writeType(w, sessionkey_);
		}
		{
			if(mac_.Length > 0)
				bin.ProtocolWriter.writeType(w, mac_);
		}
		{
			if(idfa_.Length > 0)
				bin.ProtocolWriter.writeType(w, idfa_);
		}
		{
			if(devicetype_.Length > 0)
				bin.ProtocolWriter.writeType(w, devicetype_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out username_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out password_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out version_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sessionkey_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mac_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out idfa_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out devicetype_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.username_:
			{
				{
					bin.ProtocolWriter.writeType(w, username_);
				}
			}
			return true;
			case (uint)FID.password_:
			{
				{
					bin.ProtocolWriter.writeType(w, password_);
				}
			}
			return true;
			case (uint)FID.version_:
			{
				{
					bin.ProtocolWriter.writeType(w, version_);
				}
			}
			return true;
			case (uint)FID.sessionkey_:
			{
				{
					bin.ProtocolWriter.writeType(w, sessionkey_);
				}
			}
			return true;
			case (uint)FID.mac_:
			{
				{
					bin.ProtocolWriter.writeType(w, mac_);
				}
			}
			return true;
			case (uint)FID.idfa_:
			{
				{
					bin.ProtocolWriter.writeType(w, idfa_);
				}
			}
			return true;
			case (uint)FID.devicetype_:
			{
				{
					bin.ProtocolWriter.writeType(w, devicetype_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.username_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out username_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.password_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out password_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.version_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out version_)) return false;
				}
			}
			return true;
			case (uint)FID.sessionkey_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sessionkey_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.mac_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mac_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.idfa_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out idfa_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.devicetype_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out devicetype_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_FPosition
{
	public float x_;
	public float z_;
	public bool isLast_;
	// member ids.
	public enum FID
	{
		x_ = 0,
		z_ = 1,
		isLast_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(x_==0?false:true);
		__fm__.writeBit(z_==0?false:true);
		__fm__.writeBit(isLast_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(x_ != 0)
				bin.ProtocolWriter.writeType(w, x_);
		}
		{
			if(z_ != 0)
				bin.ProtocolWriter.writeType(w, z_);
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out x_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out z_)) return false;
			}
		}
		{
			isLast_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.x_:
			{
				{
					bin.ProtocolWriter.writeType(w, x_);
				}
			}
			return true;
			case (uint)FID.z_:
			{
				{
					bin.ProtocolWriter.writeType(w, z_);
				}
			}
			return true;
			case (uint)FID.isLast_:
			{
				{
					bin.ProtocolWriter.writeType(w, isLast_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.x_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out x_)) return false;
				}
			}
			return true;
			case (uint)FID.z_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out z_)) return false;
				}
			}
			return true;
			case (uint)FID.isLast_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isLast_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ScenePlayerInformation
{
	public bool isLeader_;
	public bool isTeamMember_;
	public bool isInBattle_;
	public short vip_;
	public int instId_;
	public int assetId_;
	public int weaponItemId_;
	public int fashionId_;
	public int hpMax_;
	public int hpCrt_;
	public int mpMax_;
	public int mpCrt_;
	public int level_;
	public int battlePower_;
	public int jl_;
	public int magicLv_;
	public ulong openSubSystemFlag_;
	public int title_;
	public string instName_ = "";
	public string guildeName_ = "";
	public JobType jt_;
	public EntityType type_;
	public COM_FPosition originPos_ = new COM_FPosition();
	public int showBabyTableId_;
	public string showBabyName_ = "";
	// member ids.
	public enum FID
	{
		isLeader_ = 0,
		isTeamMember_ = 1,
		isInBattle_ = 2,
		vip_ = 3,
		instId_ = 4,
		assetId_ = 5,
		weaponItemId_ = 6,
		fashionId_ = 7,
		hpMax_ = 8,
		hpCrt_ = 9,
		mpMax_ = 10,
		mpCrt_ = 11,
		level_ = 12,
		battlePower_ = 13,
		jl_ = 14,
		magicLv_ = 15,
		openSubSystemFlag_ = 16,
		title_ = 17,
		instName_ = 18,
		guildeName_ = 19,
		jt_ = 20,
		type_ = 21,
		originPos_ = 22,
		showBabyTableId_ = 23,
		showBabyName_ = 24,
		MAX = 25,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[4]);
		__fm__.writeBit(isLeader_);
		__fm__.writeBit(isTeamMember_);
		__fm__.writeBit(isInBattle_);
		__fm__.writeBit(vip_==0?false:true);
		__fm__.writeBit(instId_==0?false:true);
		__fm__.writeBit(assetId_==0?false:true);
		__fm__.writeBit(weaponItemId_==0?false:true);
		__fm__.writeBit(fashionId_==0?false:true);
		__fm__.writeBit(hpMax_==0?false:true);
		__fm__.writeBit(hpCrt_==0?false:true);
		__fm__.writeBit(mpMax_==0?false:true);
		__fm__.writeBit(mpCrt_==0?false:true);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(battlePower_==0?false:true);
		__fm__.writeBit(jl_==0?false:true);
		__fm__.writeBit(magicLv_==0?false:true);
		__fm__.writeBit(openSubSystemFlag_==0?false:true);
		__fm__.writeBit(title_==0?false:true);
		__fm__.writeBit(instName_.Length>0?true:false);
		__fm__.writeBit(guildeName_.Length>0?true:false);
		__fm__.writeBit(jt_==0?false:true);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(true);
		__fm__.writeBit(showBabyTableId_==0?false:true);
		__fm__.writeBit(showBabyName_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
		}
		{
		}
		{
		}
		{
			if(vip_ != 0)
				bin.ProtocolWriter.writeType(w, vip_);
		}
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
		{
			if(assetId_ != 0)
				bin.ProtocolWriter.writeType(w, assetId_);
		}
		{
			if(weaponItemId_ != 0)
				bin.ProtocolWriter.writeType(w, weaponItemId_);
		}
		{
			if(fashionId_ != 0)
				bin.ProtocolWriter.writeType(w, fashionId_);
		}
		{
			if(hpMax_ != 0)
				bin.ProtocolWriter.writeType(w, hpMax_);
		}
		{
			if(hpCrt_ != 0)
				bin.ProtocolWriter.writeType(w, hpCrt_);
		}
		{
			if(mpMax_ != 0)
				bin.ProtocolWriter.writeType(w, mpMax_);
		}
		{
			if(mpCrt_ != 0)
				bin.ProtocolWriter.writeType(w, mpCrt_);
		}
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(battlePower_ != 0)
				bin.ProtocolWriter.writeType(w, battlePower_);
		}
		{
			if(jl_ != 0)
				bin.ProtocolWriter.writeType(w, jl_);
		}
		{
			if(magicLv_ != 0)
				bin.ProtocolWriter.writeType(w, magicLv_);
		}
		{
			if(openSubSystemFlag_ != 0)
				bin.ProtocolWriter.writeType(w, openSubSystemFlag_);
		}
		{
			if(title_ != 0)
				bin.ProtocolWriter.writeType(w, title_);
		}
		{
			if(instName_.Length > 0)
				bin.ProtocolWriter.writeType(w, instName_);
		}
		{
			if(guildeName_.Length > 0)
				bin.ProtocolWriter.writeType(w, guildeName_);
		}
		{
			byte __e__ = (byte)jt_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			originPos_.serialize(w);
		}
		{
			if(showBabyTableId_ != 0)
				bin.ProtocolWriter.writeType(w, showBabyTableId_);
		}
		{
			if(showBabyName_.Length > 0)
				bin.ProtocolWriter.writeType(w, showBabyName_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 4)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			isLeader_ = __fm__.readBit();
		}
		{
			isTeamMember_ = __fm__.readBit();
		}
		{
			isInBattle_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out vip_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out weaponItemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out fashionId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out hpMax_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out hpCrt_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mpMax_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mpCrt_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out battlePower_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out jl_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out magicLv_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out openSubSystemFlag_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out title_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildeName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				jt_ = (JobType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
				type_ = (EntityType)__e__;
			}
		}
		{
			__fm__.readBit();
			if(!originPos_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out showBabyTableId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out showBabyName_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.isLeader_:
			{
				{
					bin.ProtocolWriter.writeType(w, isLeader_);
				}
			}
			return true;
			case (uint)FID.isTeamMember_:
			{
				{
					bin.ProtocolWriter.writeType(w, isTeamMember_);
				}
			}
			return true;
			case (uint)FID.isInBattle_:
			{
				{
					bin.ProtocolWriter.writeType(w, isInBattle_);
				}
			}
			return true;
			case (uint)FID.vip_:
			{
				{
					bin.ProtocolWriter.writeType(w, vip_);
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					bin.ProtocolWriter.writeType(w, assetId_);
				}
			}
			return true;
			case (uint)FID.weaponItemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, weaponItemId_);
				}
			}
			return true;
			case (uint)FID.fashionId_:
			{
				{
					bin.ProtocolWriter.writeType(w, fashionId_);
				}
			}
			return true;
			case (uint)FID.hpMax_:
			{
				{
					bin.ProtocolWriter.writeType(w, hpMax_);
				}
			}
			return true;
			case (uint)FID.hpCrt_:
			{
				{
					bin.ProtocolWriter.writeType(w, hpCrt_);
				}
			}
			return true;
			case (uint)FID.mpMax_:
			{
				{
					bin.ProtocolWriter.writeType(w, mpMax_);
				}
			}
			return true;
			case (uint)FID.mpCrt_:
			{
				{
					bin.ProtocolWriter.writeType(w, mpCrt_);
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.battlePower_:
			{
				{
					bin.ProtocolWriter.writeType(w, battlePower_);
				}
			}
			return true;
			case (uint)FID.jl_:
			{
				{
					bin.ProtocolWriter.writeType(w, jl_);
				}
			}
			return true;
			case (uint)FID.magicLv_:
			{
				{
					bin.ProtocolWriter.writeType(w, magicLv_);
				}
			}
			return true;
			case (uint)FID.openSubSystemFlag_:
			{
				{
					bin.ProtocolWriter.writeType(w, openSubSystemFlag_);
				}
			}
			return true;
			case (uint)FID.title_:
			{
				{
					bin.ProtocolWriter.writeType(w, title_);
				}
			}
			return true;
			case (uint)FID.instName_:
			{
				{
					bin.ProtocolWriter.writeType(w, instName_);
				}
			}
			return true;
			case (uint)FID.guildeName_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildeName_);
				}
			}
			return true;
			case (uint)FID.jt_:
			{
				{
					byte __e__ = (byte)jt_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.originPos_:
			{
				{
					originPos_.serialize(w);
				}
			}
			return true;
			case (uint)FID.showBabyTableId_:
			{
				{
					bin.ProtocolWriter.writeType(w, showBabyTableId_);
				}
			}
			return true;
			case (uint)FID.showBabyName_:
			{
				{
					bin.ProtocolWriter.writeType(w, showBabyName_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.isLeader_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isLeader_)) return false;
				}
			}
			return true;
			case (uint)FID.isTeamMember_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isTeamMember_)) return false;
				}
			}
			return true;
			case (uint)FID.isInBattle_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isInBattle_)) return false;
				}
			}
			return true;
			case (uint)FID.vip_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out vip_)) return false;
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
				}
			}
			return true;
			case (uint)FID.weaponItemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out weaponItemId_)) return false;
				}
			}
			return true;
			case (uint)FID.fashionId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out fashionId_)) return false;
				}
			}
			return true;
			case (uint)FID.hpMax_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out hpMax_)) return false;
				}
			}
			return true;
			case (uint)FID.hpCrt_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out hpCrt_)) return false;
				}
			}
			return true;
			case (uint)FID.mpMax_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mpMax_)) return false;
				}
			}
			return true;
			case (uint)FID.mpCrt_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mpCrt_)) return false;
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.battlePower_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out battlePower_)) return false;
				}
			}
			return true;
			case (uint)FID.jl_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out jl_)) return false;
				}
			}
			return true;
			case (uint)FID.magicLv_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out magicLv_)) return false;
				}
			}
			return true;
			case (uint)FID.openSubSystemFlag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out openSubSystemFlag_)) return false;
				}
			}
			return true;
			case (uint)FID.title_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out title_)) return false;
				}
			}
			return true;
			case (uint)FID.instName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.guildeName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildeName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.jt_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					jt_ = (JobType)__e__;
				}
			}
			return true;
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
					type_ = (EntityType)__e__;
				}
			}
			return true;
			case (uint)FID.originPos_:
			{
				{
					if(!originPos_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.showBabyTableId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out showBabyTableId_)) return false;
				}
			}
			return true;
			case (uint)FID.showBabyName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out showBabyName_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_BattleEntityInformation
{
	public EntityType type_;
	public string instName_ = "";
	public int instId_;
	public int tableId_;
	public int assetId_;
	public JobType jt_;
	public BattlePosition battlePosition_;
	public int weaponItemId_;
	public int fashionId_;
	public int hpMax_;
	public int hpCrt_;
	public int mpMax_;
	public int mpCrt_;
	public int level_;
	// member ids.
	public enum FID
	{
		type_ = 0,
		instName_ = 1,
		instId_ = 2,
		tableId_ = 3,
		assetId_ = 4,
		jt_ = 5,
		battlePosition_ = 6,
		weaponItemId_ = 7,
		fashionId_ = 8,
		hpMax_ = 9,
		hpCrt_ = 10,
		mpMax_ = 11,
		mpCrt_ = 12,
		level_ = 13,
		MAX = 14,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(instName_.Length>0?true:false);
		__fm__.writeBit(instId_==0?false:true);
		__fm__.writeBit(tableId_==0?false:true);
		__fm__.writeBit(assetId_==0?false:true);
		__fm__.writeBit(jt_==0?false:true);
		__fm__.writeBit(battlePosition_==0?false:true);
		__fm__.writeBit(weaponItemId_==0?false:true);
		__fm__.writeBit(fashionId_==0?false:true);
		__fm__.writeBit(hpMax_==0?false:true);
		__fm__.writeBit(hpCrt_==0?false:true);
		__fm__.writeBit(mpMax_==0?false:true);
		__fm__.writeBit(mpCrt_==0?false:true);
		__fm__.writeBit(level_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(instName_.Length > 0)
				bin.ProtocolWriter.writeType(w, instName_);
		}
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
		{
			if(tableId_ != 0)
				bin.ProtocolWriter.writeType(w, tableId_);
		}
		{
			if(assetId_ != 0)
				bin.ProtocolWriter.writeType(w, assetId_);
		}
		{
			byte __e__ = (byte)jt_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			byte __e__ = (byte)battlePosition_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(weaponItemId_ != 0)
				bin.ProtocolWriter.writeType(w, weaponItemId_);
		}
		{
			if(fashionId_ != 0)
				bin.ProtocolWriter.writeType(w, fashionId_);
		}
		{
			if(hpMax_ != 0)
				bin.ProtocolWriter.writeType(w, hpMax_);
		}
		{
			if(hpCrt_ != 0)
				bin.ProtocolWriter.writeType(w, hpCrt_);
		}
		{
			if(mpMax_ != 0)
				bin.ProtocolWriter.writeType(w, mpMax_);
		}
		{
			if(mpCrt_ != 0)
				bin.ProtocolWriter.writeType(w, mpCrt_);
		}
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
				type_ = (EntityType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out tableId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				jt_ = (JobType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
				battlePosition_ = (BattlePosition)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out weaponItemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out fashionId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out hpMax_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out hpCrt_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mpMax_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mpCrt_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.instName_:
			{
				{
					bin.ProtocolWriter.writeType(w, instName_);
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
			case (uint)FID.tableId_:
			{
				{
					bin.ProtocolWriter.writeType(w, tableId_);
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					bin.ProtocolWriter.writeType(w, assetId_);
				}
			}
			return true;
			case (uint)FID.jt_:
			{
				{
					byte __e__ = (byte)jt_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.battlePosition_:
			{
				{
					byte __e__ = (byte)battlePosition_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.weaponItemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, weaponItemId_);
				}
			}
			return true;
			case (uint)FID.fashionId_:
			{
				{
					bin.ProtocolWriter.writeType(w, fashionId_);
				}
			}
			return true;
			case (uint)FID.hpMax_:
			{
				{
					bin.ProtocolWriter.writeType(w, hpMax_);
				}
			}
			return true;
			case (uint)FID.hpCrt_:
			{
				{
					bin.ProtocolWriter.writeType(w, hpCrt_);
				}
			}
			return true;
			case (uint)FID.mpMax_:
			{
				{
					bin.ProtocolWriter.writeType(w, mpMax_);
				}
			}
			return true;
			case (uint)FID.mpCrt_:
			{
				{
					bin.ProtocolWriter.writeType(w, mpCrt_);
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
					type_ = (EntityType)__e__;
				}
			}
			return true;
			case (uint)FID.instName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
			case (uint)FID.tableId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out tableId_)) return false;
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
				}
			}
			return true;
			case (uint)FID.jt_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					jt_ = (JobType)__e__;
				}
			}
			return true;
			case (uint)FID.battlePosition_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
					battlePosition_ = (BattlePosition)__e__;
				}
			}
			return true;
			case (uint)FID.weaponItemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out weaponItemId_)) return false;
				}
			}
			return true;
			case (uint)FID.fashionId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out fashionId_)) return false;
				}
			}
			return true;
			case (uint)FID.hpMax_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out hpMax_)) return false;
				}
			}
			return true;
			case (uint)FID.hpCrt_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out hpCrt_)) return false;
				}
			}
			return true;
			case (uint)FID.mpMax_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mpMax_)) return false;
				}
			}
			return true;
			case (uint)FID.mpCrt_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mpCrt_)) return false;
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_SimpleInformation
{
	public int instId_;
	public int level_;
	public int asset_id_;
	public string instName_ = "";
	public int weaponItemId_;
	public int fashionId_;
	public uint section_;
	public JobType jt_;
	public int jl_;
	// member ids.
	public enum FID
	{
		instId_ = 0,
		level_ = 1,
		asset_id_ = 2,
		instName_ = 3,
		weaponItemId_ = 4,
		fashionId_ = 5,
		section_ = 6,
		jt_ = 7,
		jl_ = 8,
		MAX = 9,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(instId_==0?false:true);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(asset_id_==0?false:true);
		__fm__.writeBit(instName_.Length>0?true:false);
		__fm__.writeBit(weaponItemId_==0?false:true);
		__fm__.writeBit(fashionId_==0?false:true);
		__fm__.writeBit(section_==0?false:true);
		__fm__.writeBit(jt_==0?false:true);
		__fm__.writeBit(jl_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(asset_id_ != 0)
				bin.ProtocolWriter.writeType(w, asset_id_);
		}
		{
			if(instName_.Length > 0)
				bin.ProtocolWriter.writeType(w, instName_);
		}
		{
			if(weaponItemId_ != 0)
				bin.ProtocolWriter.writeType(w, weaponItemId_);
		}
		{
			if(fashionId_ != 0)
				bin.ProtocolWriter.writeType(w, fashionId_);
		}
		{
			if(section_ != 0)
				bin.ProtocolWriter.writeType(w, section_);
		}
		{
			byte __e__ = (byte)jt_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(jl_ != 0)
				bin.ProtocolWriter.writeType(w, jl_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out asset_id_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out weaponItemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out fashionId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out section_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				jt_ = (JobType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out jl_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.asset_id_:
			{
				{
					bin.ProtocolWriter.writeType(w, asset_id_);
				}
			}
			return true;
			case (uint)FID.instName_:
			{
				{
					bin.ProtocolWriter.writeType(w, instName_);
				}
			}
			return true;
			case (uint)FID.weaponItemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, weaponItemId_);
				}
			}
			return true;
			case (uint)FID.fashionId_:
			{
				{
					bin.ProtocolWriter.writeType(w, fashionId_);
				}
			}
			return true;
			case (uint)FID.section_:
			{
				{
					bin.ProtocolWriter.writeType(w, section_);
				}
			}
			return true;
			case (uint)FID.jt_:
			{
				{
					byte __e__ = (byte)jt_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.jl_:
			{
				{
					bin.ProtocolWriter.writeType(w, jl_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.asset_id_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out asset_id_)) return false;
				}
			}
			return true;
			case (uint)FID.instName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.weaponItemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out weaponItemId_)) return false;
				}
			}
			return true;
			case (uint)FID.fashionId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out fashionId_)) return false;
				}
			}
			return true;
			case (uint)FID.section_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out section_)) return false;
				}
			}
			return true;
			case (uint)FID.jt_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					jt_ = (JobType)__e__;
				}
			}
			return true;
			case (uint)FID.jl_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out jl_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_AccountInfo
{
	public uint guid_;
	public string username_ = "";
	public string password_ = "";
	public ulong createtime_;
	public string phoneNumber_ = "";
	// member ids.
	public enum FID
	{
		guid_ = 0,
		username_ = 1,
		password_ = 2,
		createtime_ = 3,
		phoneNumber_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(guid_==0?false:true);
		__fm__.writeBit(username_.Length>0?true:false);
		__fm__.writeBit(password_.Length>0?true:false);
		__fm__.writeBit(createtime_==0?false:true);
		__fm__.writeBit(phoneNumber_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(guid_ != 0)
				bin.ProtocolWriter.writeType(w, guid_);
		}
		{
			if(username_.Length > 0)
				bin.ProtocolWriter.writeType(w, username_);
		}
		{
			if(password_.Length > 0)
				bin.ProtocolWriter.writeType(w, password_);
		}
		{
			if(createtime_ != 0)
				bin.ProtocolWriter.writeType(w, createtime_);
		}
		{
			if(phoneNumber_.Length > 0)
				bin.ProtocolWriter.writeType(w, phoneNumber_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out username_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out password_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out createtime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out phoneNumber_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.guid_:
			{
				{
					bin.ProtocolWriter.writeType(w, guid_);
				}
			}
			return true;
			case (uint)FID.username_:
			{
				{
					bin.ProtocolWriter.writeType(w, username_);
				}
			}
			return true;
			case (uint)FID.password_:
			{
				{
					bin.ProtocolWriter.writeType(w, password_);
				}
			}
			return true;
			case (uint)FID.createtime_:
			{
				{
					bin.ProtocolWriter.writeType(w, createtime_);
				}
			}
			return true;
			case (uint)FID.phoneNumber_:
			{
				{
					bin.ProtocolWriter.writeType(w, phoneNumber_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.guid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guid_)) return false;
				}
			}
			return true;
			case (uint)FID.username_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out username_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.password_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out password_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.createtime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out createtime_)) return false;
				}
			}
			return true;
			case (uint)FID.phoneNumber_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out phoneNumber_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_PropValue
{
	public PropertyType type_;
	public float value_;
	// member ids.
	public enum FID
	{
		type_ = 0,
		value_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(value_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(value_ != 0)
				bin.ProtocolWriter.writeType(w, value_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 63) return false;
				type_ = (PropertyType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out value_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.value_:
			{
				{
					bin.ProtocolWriter.writeType(w, value_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 63) return false;
					type_ = (PropertyType)__e__;
				}
			}
			return true;
			case (uint)FID.value_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out value_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Item
{
	public uint itemId_;
	public uint instId_;
	public short stack_;
	public bool isBind_;
	public bool isLock_;
	public sbyte strLevel_;
	public short slot_;
	public int skillID_;
	public int durability_;
	public int durabilityMax_;
	public int usedTimeout_;
	public int lastSellTime_;
	public COM_PropValue[] propArr = new COM_PropValue[0];
	// member ids.
	public enum FID
	{
		itemId_ = 0,
		instId_ = 1,
		stack_ = 2,
		isBind_ = 3,
		isLock_ = 4,
		strLevel_ = 5,
		slot_ = 6,
		skillID_ = 7,
		durability_ = 8,
		durabilityMax_ = 9,
		usedTimeout_ = 10,
		lastSellTime_ = 11,
		propArr = 12,
		MAX = 13,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(instId_==0?false:true);
		__fm__.writeBit(stack_==0?false:true);
		__fm__.writeBit(isBind_);
		__fm__.writeBit(isLock_);
		__fm__.writeBit(strLevel_==0?false:true);
		__fm__.writeBit(slot_==0?false:true);
		__fm__.writeBit(skillID_==0?false:true);
		__fm__.writeBit(durability_==0?false:true);
		__fm__.writeBit(durabilityMax_==0?false:true);
		__fm__.writeBit(usedTimeout_==0?false:true);
		__fm__.writeBit(lastSellTime_==0?false:true);
		__fm__.writeBit((propArr==null)?false:(propArr.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
		{
			if(stack_ != 0)
				bin.ProtocolWriter.writeType(w, stack_);
		}
		{
		}
		{
		}
		{
			if(strLevel_ != 0)
				bin.ProtocolWriter.writeType(w, strLevel_);
		}
		{
			if(slot_ != 0)
				bin.ProtocolWriter.writeType(w, slot_);
		}
		{
			if(skillID_ != 0)
				bin.ProtocolWriter.writeType(w, skillID_);
		}
		{
			if(durability_ != 0)
				bin.ProtocolWriter.writeType(w, durability_);
		}
		{
			if(durabilityMax_ != 0)
				bin.ProtocolWriter.writeType(w, durabilityMax_);
		}
		{
			if(usedTimeout_ != 0)
				bin.ProtocolWriter.writeType(w, usedTimeout_);
		}
		{
			if(lastSellTime_ != 0)
				bin.ProtocolWriter.writeType(w, lastSellTime_);
		}
		{
			if(propArr != null && propArr.Length > 0)
			{
				uint __len__ = (propArr == null)?0:(uint)propArr.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					propArr[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out stack_)) return false;
			}
		}
		{
			isBind_ = __fm__.readBit();
		}
		{
			isLock_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out strLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out slot_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out skillID_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out durability_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out durabilityMax_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out usedTimeout_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out lastSellTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				propArr = new COM_PropValue[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					propArr[i] = new COM_PropValue();
					if(!propArr[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
			case (uint)FID.stack_:
			{
				{
					bin.ProtocolWriter.writeType(w, stack_);
				}
			}
			return true;
			case (uint)FID.isBind_:
			{
				{
					bin.ProtocolWriter.writeType(w, isBind_);
				}
			}
			return true;
			case (uint)FID.isLock_:
			{
				{
					bin.ProtocolWriter.writeType(w, isLock_);
				}
			}
			return true;
			case (uint)FID.strLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, strLevel_);
				}
			}
			return true;
			case (uint)FID.slot_:
			{
				{
					bin.ProtocolWriter.writeType(w, slot_);
				}
			}
			return true;
			case (uint)FID.skillID_:
			{
				{
					bin.ProtocolWriter.writeType(w, skillID_);
				}
			}
			return true;
			case (uint)FID.durability_:
			{
				{
					bin.ProtocolWriter.writeType(w, durability_);
				}
			}
			return true;
			case (uint)FID.durabilityMax_:
			{
				{
					bin.ProtocolWriter.writeType(w, durabilityMax_);
				}
			}
			return true;
			case (uint)FID.usedTimeout_:
			{
				{
					bin.ProtocolWriter.writeType(w, usedTimeout_);
				}
			}
			return true;
			case (uint)FID.lastSellTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, lastSellTime_);
				}
			}
			return true;
			case (uint)FID.propArr:
			{
				{
					uint __len__ = (propArr == null)?0:(uint)propArr.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						propArr[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
			case (uint)FID.stack_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out stack_)) return false;
				}
			}
			return true;
			case (uint)FID.isBind_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isBind_)) return false;
				}
			}
			return true;
			case (uint)FID.isLock_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isLock_)) return false;
				}
			}
			return true;
			case (uint)FID.strLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out strLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.slot_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out slot_)) return false;
				}
			}
			return true;
			case (uint)FID.skillID_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out skillID_)) return false;
				}
			}
			return true;
			case (uint)FID.durability_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out durability_)) return false;
				}
			}
			return true;
			case (uint)FID.durabilityMax_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out durabilityMax_)) return false;
				}
			}
			return true;
			case (uint)FID.usedTimeout_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out usedTimeout_)) return false;
				}
			}
			return true;
			case (uint)FID.lastSellTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out lastSellTime_)) return false;
				}
			}
			return true;
			case (uint)FID.propArr:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					propArr = new COM_PropValue[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						propArr[i] = new COM_PropValue();
						if(!propArr[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_DropItem
{
	public uint itemId_;
	public uint itemNum_;
	// member ids.
	public enum FID
	{
		itemId_ = 0,
		itemNum_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(itemNum_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(itemNum_ != 0)
				bin.ProtocolWriter.writeType(w, itemNum_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemNum_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.itemNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemNum_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.itemNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemNum_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_CrystalProp
{
	public uint level_;
	public PropertyType type_;
	public uint val_;
	// member ids.
	public enum FID
	{
		level_ = 0,
		type_ = 1,
		val_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(val_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(val_ != 0)
				bin.ProtocolWriter.writeType(w, val_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 63) return false;
				type_ = (PropertyType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out val_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.val_:
			{
				{
					bin.ProtocolWriter.writeType(w, val_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 63) return false;
					type_ = (PropertyType)__e__;
				}
			}
			return true;
			case (uint)FID.val_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out val_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_CrystalData
{
	public uint level_;
	public COM_CrystalProp[] props_ = new COM_CrystalProp[0];
	// member ids.
	public enum FID
	{
		level_ = 0,
		props_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit((props_==null)?false:(props_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(props_ != null && props_.Length > 0)
			{
				uint __len__ = (props_ == null)?0:(uint)props_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					props_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				props_ = new COM_CrystalProp[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					props_[i] = new COM_CrystalProp();
					if(!props_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.props_:
			{
				{
					uint __len__ = (props_ == null)?0:(uint)props_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						props_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.props_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					props_ = new COM_CrystalProp[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						props_[i] = new COM_CrystalProp();
						if(!props_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_QuestTarget
{
	public uint targetId_;
	public int targetNum_;
	// member ids.
	public enum FID
	{
		targetId_ = 0,
		targetNum_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(targetId_==0?false:true);
		__fm__.writeBit(targetNum_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(targetId_ != 0)
				bin.ProtocolWriter.writeType(w, targetId_);
		}
		{
			if(targetNum_ != 0)
				bin.ProtocolWriter.writeType(w, targetNum_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out targetId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out targetNum_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.targetId_:
			{
				{
					bin.ProtocolWriter.writeType(w, targetId_);
				}
			}
			return true;
			case (uint)FID.targetNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, targetNum_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.targetId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out targetId_)) return false;
				}
			}
			return true;
			case (uint)FID.targetNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out targetNum_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Skill
{
	public uint skillID_;
	public uint skillExp_;
	public uint skillLevel_;
	// member ids.
	public enum FID
	{
		skillID_ = 0,
		skillExp_ = 1,
		skillLevel_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(skillID_==0?false:true);
		__fm__.writeBit(skillExp_==0?false:true);
		__fm__.writeBit(skillLevel_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(skillID_ != 0)
				bin.ProtocolWriter.writeType(w, skillID_);
		}
		{
			if(skillExp_ != 0)
				bin.ProtocolWriter.writeType(w, skillExp_);
		}
		{
			if(skillLevel_ != 0)
				bin.ProtocolWriter.writeType(w, skillLevel_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out skillID_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out skillExp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out skillLevel_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.skillID_:
			{
				{
					bin.ProtocolWriter.writeType(w, skillID_);
				}
			}
			return true;
			case (uint)FID.skillExp_:
			{
				{
					bin.ProtocolWriter.writeType(w, skillExp_);
				}
			}
			return true;
			case (uint)FID.skillLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, skillLevel_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.skillID_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out skillID_)) return false;
				}
			}
			return true;
			case (uint)FID.skillExp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out skillExp_)) return false;
				}
			}
			return true;
			case (uint)FID.skillLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out skillLevel_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_QuestInst
{
	public int questId_;
	public COM_QuestTarget[] targets_ = new COM_QuestTarget[0];
	// member ids.
	public enum FID
	{
		questId_ = 0,
		targets_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(questId_==0?false:true);
		__fm__.writeBit((targets_==null)?false:(targets_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(questId_ != 0)
				bin.ProtocolWriter.writeType(w, questId_);
		}
		{
			if(targets_ != null && targets_.Length > 0)
			{
				uint __len__ = (targets_ == null)?0:(uint)targets_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					targets_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out questId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				targets_ = new COM_QuestTarget[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					targets_[i] = new COM_QuestTarget();
					if(!targets_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.questId_:
			{
				{
					bin.ProtocolWriter.writeType(w, questId_);
				}
			}
			return true;
			case (uint)FID.targets_:
			{
				{
					uint __len__ = (targets_ == null)?0:(uint)targets_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						targets_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.questId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out questId_)) return false;
				}
			}
			return true;
			case (uint)FID.targets_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					targets_ = new COM_QuestTarget[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						targets_[i] = new COM_QuestTarget();
						if(!targets_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_State
{
	public uint stateId_;
	public sbyte turn_;
	public sbyte tick_;
	public sbyte type_;
	public int value0_;
	public int value1_;
	// member ids.
	public enum FID
	{
		stateId_ = 0,
		turn_ = 1,
		tick_ = 2,
		type_ = 3,
		value0_ = 4,
		value1_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(stateId_==0?false:true);
		__fm__.writeBit(turn_==0?false:true);
		__fm__.writeBit(tick_==0?false:true);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(value0_==0?false:true);
		__fm__.writeBit(value1_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(stateId_ != 0)
				bin.ProtocolWriter.writeType(w, stateId_);
		}
		{
			if(turn_ != 0)
				bin.ProtocolWriter.writeType(w, turn_);
		}
		{
			if(tick_ != 0)
				bin.ProtocolWriter.writeType(w, tick_);
		}
		{
			if(type_ != 0)
				bin.ProtocolWriter.writeType(w, type_);
		}
		{
			if(value0_ != 0)
				bin.ProtocolWriter.writeType(w, value0_);
		}
		{
			if(value1_ != 0)
				bin.ProtocolWriter.writeType(w, value1_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out stateId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out turn_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out tick_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out type_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out value0_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out value1_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.stateId_:
			{
				{
					bin.ProtocolWriter.writeType(w, stateId_);
				}
			}
			return true;
			case (uint)FID.turn_:
			{
				{
					bin.ProtocolWriter.writeType(w, turn_);
				}
			}
			return true;
			case (uint)FID.tick_:
			{
				{
					bin.ProtocolWriter.writeType(w, tick_);
				}
			}
			return true;
			case (uint)FID.type_:
			{
				{
					bin.ProtocolWriter.writeType(w, type_);
				}
			}
			return true;
			case (uint)FID.value0_:
			{
				{
					bin.ProtocolWriter.writeType(w, value0_);
				}
			}
			return true;
			case (uint)FID.value1_:
			{
				{
					bin.ProtocolWriter.writeType(w, value1_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.stateId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out stateId_)) return false;
				}
			}
			return true;
			case (uint)FID.turn_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out turn_)) return false;
				}
			}
			return true;
			case (uint)FID.tick_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out tick_)) return false;
				}
			}
			return true;
			case (uint)FID.type_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out type_)) return false;
				}
			}
			return true;
			case (uint)FID.value0_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out value0_)) return false;
				}
			}
			return true;
			case (uint)FID.value1_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out value1_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Entity
{
	public EntityType type_;
	public string instName_ = "";
	public uint instId_;
	public BattlePosition battlePosition_;
	public float[] properties_ = new float[0];
	public COM_Skill[] skill_ = new COM_Skill[0];
	public COM_Item[] equips_ = new COM_Item[0];
	public COM_State[] states_ = new COM_State[0];
	// member ids.
	public enum FID
	{
		type_ = 0,
		instName_ = 1,
		instId_ = 2,
		battlePosition_ = 3,
		properties_ = 4,
		skill_ = 5,
		equips_ = 6,
		states_ = 7,
		MAX = 8,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(instName_.Length>0?true:false);
		__fm__.writeBit(instId_==0?false:true);
		__fm__.writeBit(battlePosition_==0?false:true);
		__fm__.writeBit((properties_==null)?false:(properties_.Length>0?true:false));
		__fm__.writeBit((skill_==null)?false:(skill_.Length>0?true:false));
		__fm__.writeBit((equips_==null)?false:(equips_.Length>0?true:false));
		__fm__.writeBit((states_==null)?false:(states_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(instName_.Length > 0)
				bin.ProtocolWriter.writeType(w, instName_);
		}
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
		{
			byte __e__ = (byte)battlePosition_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(properties_ != null && properties_.Length > 0)
			{
				uint __len__ = (properties_ == null)?0:(uint)properties_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, properties_[i]);
				}
			}
		}
		{
			if(skill_ != null && skill_.Length > 0)
			{
				uint __len__ = (skill_ == null)?0:(uint)skill_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					skill_[i].serialize(w);
				}
			}
		}
		{
			if(equips_ != null && equips_.Length > 0)
			{
				uint __len__ = (equips_ == null)?0:(uint)equips_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					equips_[i].serialize(w);
				}
			}
		}
		{
			if(states_ != null && states_.Length > 0)
			{
				uint __len__ = (states_ == null)?0:(uint)states_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					states_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
				type_ = (EntityType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
				battlePosition_ = (BattlePosition)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				properties_ = new float[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out properties_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				skill_ = new COM_Skill[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					skill_[i] = new COM_Skill();
					if(!skill_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				equips_ = new COM_Item[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					equips_[i] = new COM_Item();
					if(!equips_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				states_ = new COM_State[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					states_[i] = new COM_State();
					if(!states_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.instName_:
			{
				{
					bin.ProtocolWriter.writeType(w, instName_);
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
			case (uint)FID.battlePosition_:
			{
				{
					byte __e__ = (byte)battlePosition_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.properties_:
			{
				{
					uint __len__ = (properties_ == null)?0:(uint)properties_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, properties_[i]);
					}
				}
			}
			return true;
			case (uint)FID.skill_:
			{
				{
					uint __len__ = (skill_ == null)?0:(uint)skill_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						skill_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.equips_:
			{
				{
					uint __len__ = (equips_ == null)?0:(uint)equips_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						equips_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.states_:
			{
				{
					uint __len__ = (states_ == null)?0:(uint)states_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						states_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
					type_ = (EntityType)__e__;
				}
			}
			return true;
			case (uint)FID.instName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
			case (uint)FID.battlePosition_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
					battlePosition_ = (BattlePosition)__e__;
				}
			}
			return true;
			case (uint)FID.properties_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					properties_ = new float[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out properties_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.skill_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					skill_ = new COM_Skill[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						skill_[i] = new COM_Skill();
						if(!skill_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.equips_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					equips_ = new COM_Item[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						equips_[i] = new COM_Item();
						if(!equips_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.states_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					states_ = new COM_State[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						states_[i] = new COM_State();
						if(!states_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_BabyInst : COM_Entity
{
	public string ownerName_ = "";
	public bool isShow_;
	public bool isBattle_;
	public bool isBind_;
	public bool isLock_;
	public int tableId_;
	public int slot_;
	public uint intensifyLevel_;
	public uint intensifynum_;
	public int lastSellTime_;
	public int[] gear_ = new int[0];
	public float[] addprop_ = new float[0];
	// member ids.
	public enum FID
	{
		ownerName_ = 8,
		isShow_ = 9,
		isBattle_ = 10,
		isBind_ = 11,
		isLock_ = 12,
		tableId_ = 13,
		slot_ = 14,
		intensifyLevel_ = 15,
		intensifynum_ = 16,
		lastSellTime_ = 17,
		gear_ = 18,
		addprop_ = 19,
		MAX = 20,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(ownerName_.Length>0?true:false);
		__fm__.writeBit(isShow_);
		__fm__.writeBit(isBattle_);
		__fm__.writeBit(isBind_);
		__fm__.writeBit(isLock_);
		__fm__.writeBit(tableId_==0?false:true);
		__fm__.writeBit(slot_==0?false:true);
		__fm__.writeBit(intensifyLevel_==0?false:true);
		__fm__.writeBit(intensifynum_==0?false:true);
		__fm__.writeBit(lastSellTime_==0?false:true);
		__fm__.writeBit((gear_==null)?false:(gear_.Length>0?true:false));
		__fm__.writeBit((addprop_==null)?false:(addprop_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(ownerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, ownerName_);
		}
		{
		}
		{
		}
		{
		}
		{
		}
		{
			if(tableId_ != 0)
				bin.ProtocolWriter.writeType(w, tableId_);
		}
		{
			if(slot_ != 0)
				bin.ProtocolWriter.writeType(w, slot_);
		}
		{
			if(intensifyLevel_ != 0)
				bin.ProtocolWriter.writeType(w, intensifyLevel_);
		}
		{
			if(intensifynum_ != 0)
				bin.ProtocolWriter.writeType(w, intensifynum_);
		}
		{
			if(lastSellTime_ != 0)
				bin.ProtocolWriter.writeType(w, lastSellTime_);
		}
		{
			if(gear_ != null && gear_.Length > 0)
			{
				uint __len__ = (gear_ == null)?0:(uint)gear_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, gear_[i]);
				}
			}
		}
		{
			if(addprop_ != null && addprop_.Length > 0)
			{
				uint __len__ = (addprop_ == null)?0:(uint)addprop_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, addprop_[i]);
				}
			}
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ownerName_, 65535)) return false;
			}
		}
		{
			isShow_ = __fm__.readBit();
		}
		{
			isBattle_ = __fm__.readBit();
		}
		{
			isBind_ = __fm__.readBit();
		}
		{
			isLock_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out tableId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out slot_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out intensifyLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out intensifynum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out lastSellTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				gear_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out gear_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				addprop_ = new float[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out addprop_[i])) return false;
				}
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.ownerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, ownerName_);
				}
			}
			return true;
			case (uint)FID.isShow_:
			{
				{
					bin.ProtocolWriter.writeType(w, isShow_);
				}
			}
			return true;
			case (uint)FID.isBattle_:
			{
				{
					bin.ProtocolWriter.writeType(w, isBattle_);
				}
			}
			return true;
			case (uint)FID.isBind_:
			{
				{
					bin.ProtocolWriter.writeType(w, isBind_);
				}
			}
			return true;
			case (uint)FID.isLock_:
			{
				{
					bin.ProtocolWriter.writeType(w, isLock_);
				}
			}
			return true;
			case (uint)FID.tableId_:
			{
				{
					bin.ProtocolWriter.writeType(w, tableId_);
				}
			}
			return true;
			case (uint)FID.slot_:
			{
				{
					bin.ProtocolWriter.writeType(w, slot_);
				}
			}
			return true;
			case (uint)FID.intensifyLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, intensifyLevel_);
				}
			}
			return true;
			case (uint)FID.intensifynum_:
			{
				{
					bin.ProtocolWriter.writeType(w, intensifynum_);
				}
			}
			return true;
			case (uint)FID.lastSellTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, lastSellTime_);
				}
			}
			return true;
			case (uint)FID.gear_:
			{
				{
					uint __len__ = (gear_ == null)?0:(uint)gear_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, gear_[i]);
					}
				}
			}
			return true;
			case (uint)FID.addprop_:
			{
				{
					uint __len__ = (addprop_ == null)?0:(uint)addprop_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, addprop_[i]);
					}
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.ownerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ownerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.isShow_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isShow_)) return false;
				}
			}
			return true;
			case (uint)FID.isBattle_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isBattle_)) return false;
				}
			}
			return true;
			case (uint)FID.isBind_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isBind_)) return false;
				}
			}
			return true;
			case (uint)FID.isLock_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isLock_)) return false;
				}
			}
			return true;
			case (uint)FID.tableId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out tableId_)) return false;
				}
			}
			return true;
			case (uint)FID.slot_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out slot_)) return false;
				}
			}
			return true;
			case (uint)FID.intensifyLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out intensifyLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.intensifynum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out intensifynum_)) return false;
				}
			}
			return true;
			case (uint)FID.lastSellTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out lastSellTime_)) return false;
				}
			}
			return true;
			case (uint)FID.gear_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					gear_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out gear_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.addprop_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					addprop_ = new float[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out addprop_[i])) return false;
					}
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_EmployeeInst : COM_Entity
{
	public string ownerName_ = "";
	public bool isBattle_;
	public uint weaponId_;
	public QualityColor quality_;
	public uint star_;
	public uint soul_;
	// member ids.
	public enum FID
	{
		ownerName_ = 8,
		isBattle_ = 9,
		weaponId_ = 10,
		quality_ = 11,
		star_ = 12,
		soul_ = 13,
		MAX = 14,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(ownerName_.Length>0?true:false);
		__fm__.writeBit(isBattle_);
		__fm__.writeBit(weaponId_==0?false:true);
		__fm__.writeBit(quality_==0?false:true);
		__fm__.writeBit(star_==0?false:true);
		__fm__.writeBit(soul_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(ownerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, ownerName_);
		}
		{
		}
		{
			if(weaponId_ != 0)
				bin.ProtocolWriter.writeType(w, weaponId_);
		}
		{
			byte __e__ = (byte)quality_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(star_ != 0)
				bin.ProtocolWriter.writeType(w, star_);
		}
		{
			if(soul_ != 0)
				bin.ProtocolWriter.writeType(w, soul_);
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ownerName_, 65535)) return false;
			}
		}
		{
			isBattle_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out weaponId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 16) return false;
				quality_ = (QualityColor)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out star_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out soul_)) return false;
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.ownerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, ownerName_);
				}
			}
			return true;
			case (uint)FID.isBattle_:
			{
				{
					bin.ProtocolWriter.writeType(w, isBattle_);
				}
			}
			return true;
			case (uint)FID.weaponId_:
			{
				{
					bin.ProtocolWriter.writeType(w, weaponId_);
				}
			}
			return true;
			case (uint)FID.quality_:
			{
				{
					byte __e__ = (byte)quality_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.star_:
			{
				{
					bin.ProtocolWriter.writeType(w, star_);
				}
			}
			return true;
			case (uint)FID.soul_:
			{
				{
					bin.ProtocolWriter.writeType(w, soul_);
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.ownerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ownerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.isBattle_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isBattle_)) return false;
				}
			}
			return true;
			case (uint)FID.weaponId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out weaponId_)) return false;
				}
			}
			return true;
			case (uint)FID.quality_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 16) return false;
					quality_ = (QualityColor)__e__;
				}
			}
			return true;
			case (uint)FID.star_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out star_)) return false;
				}
			}
			return true;
			case (uint)FID.soul_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out soul_)) return false;
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_ContactInfo
{
	public uint instId_;
	public string name_ = "";
	public uint level_;
	public float exp_;
	public JobType job_;
	public uint assetId_;
	public uint jobLevel_;
	public VipLevel vip_;
	public uint ff_;
	public uint rank_;
	public int section_;
	public uint value_;
	public bool isLine_;
	// member ids.
	public enum FID
	{
		instId_ = 0,
		name_ = 1,
		level_ = 2,
		exp_ = 3,
		job_ = 4,
		assetId_ = 5,
		jobLevel_ = 6,
		vip_ = 7,
		ff_ = 8,
		rank_ = 9,
		section_ = 10,
		value_ = 11,
		isLine_ = 12,
		MAX = 13,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(instId_==0?false:true);
		__fm__.writeBit(name_.Length>0?true:false);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(exp_==0?false:true);
		__fm__.writeBit(job_==0?false:true);
		__fm__.writeBit(assetId_==0?false:true);
		__fm__.writeBit(jobLevel_==0?false:true);
		__fm__.writeBit(vip_==0?false:true);
		__fm__.writeBit(ff_==0?false:true);
		__fm__.writeBit(rank_==0?false:true);
		__fm__.writeBit(section_==0?false:true);
		__fm__.writeBit(value_==0?false:true);
		__fm__.writeBit(isLine_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
		{
			if(name_.Length > 0)
				bin.ProtocolWriter.writeType(w, name_);
		}
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(exp_ != 0)
				bin.ProtocolWriter.writeType(w, exp_);
		}
		{
			byte __e__ = (byte)job_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(assetId_ != 0)
				bin.ProtocolWriter.writeType(w, assetId_);
		}
		{
			if(jobLevel_ != 0)
				bin.ProtocolWriter.writeType(w, jobLevel_);
		}
		{
			byte __e__ = (byte)vip_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(ff_ != 0)
				bin.ProtocolWriter.writeType(w, ff_);
		}
		{
			if(rank_ != 0)
				bin.ProtocolWriter.writeType(w, rank_);
		}
		{
			if(section_ != 0)
				bin.ProtocolWriter.writeType(w, section_);
		}
		{
			if(value_ != 0)
				bin.ProtocolWriter.writeType(w, value_);
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out exp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				job_ = (JobType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out jobLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 4) return false;
				vip_ = (VipLevel)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ff_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rank_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out section_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out value_)) return false;
			}
		}
		{
			isLine_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					bin.ProtocolWriter.writeType(w, name_);
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					bin.ProtocolWriter.writeType(w, exp_);
				}
			}
			return true;
			case (uint)FID.job_:
			{
				{
					byte __e__ = (byte)job_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					bin.ProtocolWriter.writeType(w, assetId_);
				}
			}
			return true;
			case (uint)FID.jobLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, jobLevel_);
				}
			}
			return true;
			case (uint)FID.vip_:
			{
				{
					byte __e__ = (byte)vip_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.ff_:
			{
				{
					bin.ProtocolWriter.writeType(w, ff_);
				}
			}
			return true;
			case (uint)FID.rank_:
			{
				{
					bin.ProtocolWriter.writeType(w, rank_);
				}
			}
			return true;
			case (uint)FID.section_:
			{
				{
					bin.ProtocolWriter.writeType(w, section_);
				}
			}
			return true;
			case (uint)FID.value_:
			{
				{
					bin.ProtocolWriter.writeType(w, value_);
				}
			}
			return true;
			case (uint)FID.isLine_:
			{
				{
					bin.ProtocolWriter.writeType(w, isLine_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out exp_)) return false;
				}
			}
			return true;
			case (uint)FID.job_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					job_ = (JobType)__e__;
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
				}
			}
			return true;
			case (uint)FID.jobLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out jobLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.vip_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 4) return false;
					vip_ = (VipLevel)__e__;
				}
			}
			return true;
			case (uint)FID.ff_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ff_)) return false;
				}
			}
			return true;
			case (uint)FID.rank_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rank_)) return false;
				}
			}
			return true;
			case (uint)FID.section_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out section_)) return false;
				}
			}
			return true;
			case (uint)FID.value_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out value_)) return false;
				}
			}
			return true;
			case (uint)FID.isLine_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isLine_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_ContactInfoExt : COM_ContactInfo
{
	public ulong rolefirst_;
	public ulong rolelast_;
	public ulong logoutTime_;
	public uint gold_;
	public uint diamond_;
	public uint magicgold_;
	public int guildContribute_;
	public string accName_ = "";
	public string userid_ = "";
	public string pfid_ = "";
	public string pfname_ = "";
	public uint serverid_;
	// member ids.
	public enum FID
	{
		rolefirst_ = 13,
		rolelast_ = 14,
		logoutTime_ = 15,
		gold_ = 16,
		diamond_ = 17,
		magicgold_ = 18,
		guildContribute_ = 19,
		accName_ = 20,
		userid_ = 21,
		pfid_ = 22,
		pfname_ = 23,
		serverid_ = 24,
		MAX = 25,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(rolefirst_==0?false:true);
		__fm__.writeBit(rolelast_==0?false:true);
		__fm__.writeBit(logoutTime_==0?false:true);
		__fm__.writeBit(gold_==0?false:true);
		__fm__.writeBit(diamond_==0?false:true);
		__fm__.writeBit(magicgold_==0?false:true);
		__fm__.writeBit(guildContribute_==0?false:true);
		__fm__.writeBit(accName_.Length>0?true:false);
		__fm__.writeBit(userid_.Length>0?true:false);
		__fm__.writeBit(pfid_.Length>0?true:false);
		__fm__.writeBit(pfname_.Length>0?true:false);
		__fm__.writeBit(serverid_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(rolefirst_ != 0)
				bin.ProtocolWriter.writeType(w, rolefirst_);
		}
		{
			if(rolelast_ != 0)
				bin.ProtocolWriter.writeType(w, rolelast_);
		}
		{
			if(logoutTime_ != 0)
				bin.ProtocolWriter.writeType(w, logoutTime_);
		}
		{
			if(gold_ != 0)
				bin.ProtocolWriter.writeType(w, gold_);
		}
		{
			if(diamond_ != 0)
				bin.ProtocolWriter.writeType(w, diamond_);
		}
		{
			if(magicgold_ != 0)
				bin.ProtocolWriter.writeType(w, magicgold_);
		}
		{
			if(guildContribute_ != 0)
				bin.ProtocolWriter.writeType(w, guildContribute_);
		}
		{
			if(accName_.Length > 0)
				bin.ProtocolWriter.writeType(w, accName_);
		}
		{
			if(userid_.Length > 0)
				bin.ProtocolWriter.writeType(w, userid_);
		}
		{
			if(pfid_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfid_);
		}
		{
			if(pfname_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfname_);
		}
		{
			if(serverid_ != 0)
				bin.ProtocolWriter.writeType(w, serverid_);
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rolefirst_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rolelast_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out logoutTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out gold_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out magicgold_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildContribute_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out accName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out userid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out serverid_)) return false;
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.rolefirst_:
			{
				{
					bin.ProtocolWriter.writeType(w, rolefirst_);
				}
			}
			return true;
			case (uint)FID.rolelast_:
			{
				{
					bin.ProtocolWriter.writeType(w, rolelast_);
				}
			}
			return true;
			case (uint)FID.logoutTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, logoutTime_);
				}
			}
			return true;
			case (uint)FID.gold_:
			{
				{
					bin.ProtocolWriter.writeType(w, gold_);
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					bin.ProtocolWriter.writeType(w, diamond_);
				}
			}
			return true;
			case (uint)FID.magicgold_:
			{
				{
					bin.ProtocolWriter.writeType(w, magicgold_);
				}
			}
			return true;
			case (uint)FID.guildContribute_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildContribute_);
				}
			}
			return true;
			case (uint)FID.accName_:
			{
				{
					bin.ProtocolWriter.writeType(w, accName_);
				}
			}
			return true;
			case (uint)FID.userid_:
			{
				{
					bin.ProtocolWriter.writeType(w, userid_);
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfid_);
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfname_);
				}
			}
			return true;
			case (uint)FID.serverid_:
			{
				{
					bin.ProtocolWriter.writeType(w, serverid_);
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.rolefirst_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rolefirst_)) return false;
				}
			}
			return true;
			case (uint)FID.rolelast_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rolelast_)) return false;
				}
			}
			return true;
			case (uint)FID.logoutTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out logoutTime_)) return false;
				}
			}
			return true;
			case (uint)FID.gold_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out gold_)) return false;
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
				}
			}
			return true;
			case (uint)FID.magicgold_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out magicgold_)) return false;
				}
			}
			return true;
			case (uint)FID.guildContribute_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildContribute_)) return false;
				}
			}
			return true;
			case (uint)FID.accName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out accName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.userid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out userid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.serverid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out serverid_)) return false;
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_Achievement
{
	public uint achId_;
	public AchievementType achType_;
	public uint achValue_;
	public bool isAch_;
	public bool isAward_;
	// member ids.
	public enum FID
	{
		achId_ = 0,
		achType_ = 1,
		achValue_ = 2,
		isAch_ = 3,
		isAward_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(achId_==0?false:true);
		__fm__.writeBit(achType_==0?false:true);
		__fm__.writeBit(achValue_==0?false:true);
		__fm__.writeBit(isAch_);
		__fm__.writeBit(isAward_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(achId_ != 0)
				bin.ProtocolWriter.writeType(w, achId_);
		}
		{
			byte __e__ = (byte)achType_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(achValue_ != 0)
				bin.ProtocolWriter.writeType(w, achValue_);
		}
		{
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out achId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 60) return false;
				achType_ = (AchievementType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out achValue_)) return false;
			}
		}
		{
			isAch_ = __fm__.readBit();
		}
		{
			isAward_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.achId_:
			{
				{
					bin.ProtocolWriter.writeType(w, achId_);
				}
			}
			return true;
			case (uint)FID.achType_:
			{
				{
					byte __e__ = (byte)achType_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.achValue_:
			{
				{
					bin.ProtocolWriter.writeType(w, achValue_);
				}
			}
			return true;
			case (uint)FID.isAch_:
			{
				{
					bin.ProtocolWriter.writeType(w, isAch_);
				}
			}
			return true;
			case (uint)FID.isAward_:
			{
				{
					bin.ProtocolWriter.writeType(w, isAward_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.achId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out achId_)) return false;
				}
			}
			return true;
			case (uint)FID.achType_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 60) return false;
					achType_ = (AchievementType)__e__;
				}
			}
			return true;
			case (uint)FID.achValue_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out achValue_)) return false;
				}
			}
			return true;
			case (uint)FID.isAch_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isAch_)) return false;
				}
			}
			return true;
			case (uint)FID.isAward_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isAward_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_HundredBattle
{
	public uint playerId_;
	public uint tier_;
	public uint curTier_;
	public uint surplus_;
	public uint resetNum_;
	// member ids.
	public enum FID
	{
		playerId_ = 0,
		tier_ = 1,
		curTier_ = 2,
		surplus_ = 3,
		resetNum_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(playerId_==0?false:true);
		__fm__.writeBit(tier_==0?false:true);
		__fm__.writeBit(curTier_==0?false:true);
		__fm__.writeBit(surplus_==0?false:true);
		__fm__.writeBit(resetNum_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(playerId_ != 0)
				bin.ProtocolWriter.writeType(w, playerId_);
		}
		{
			if(tier_ != 0)
				bin.ProtocolWriter.writeType(w, tier_);
		}
		{
			if(curTier_ != 0)
				bin.ProtocolWriter.writeType(w, curTier_);
		}
		{
			if(surplus_ != 0)
				bin.ProtocolWriter.writeType(w, surplus_);
		}
		{
			if(resetNum_ != 0)
				bin.ProtocolWriter.writeType(w, resetNum_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out tier_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out curTier_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out surplus_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out resetNum_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.playerId_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerId_);
				}
			}
			return true;
			case (uint)FID.tier_:
			{
				{
					bin.ProtocolWriter.writeType(w, tier_);
				}
			}
			return true;
			case (uint)FID.curTier_:
			{
				{
					bin.ProtocolWriter.writeType(w, curTier_);
				}
			}
			return true;
			case (uint)FID.surplus_:
			{
				{
					bin.ProtocolWriter.writeType(w, surplus_);
				}
			}
			return true;
			case (uint)FID.resetNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, resetNum_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.playerId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
				}
			}
			return true;
			case (uint)FID.tier_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out tier_)) return false;
				}
			}
			return true;
			case (uint)FID.curTier_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out curTier_)) return false;
				}
			}
			return true;
			case (uint)FID.surplus_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out surplus_)) return false;
				}
			}
			return true;
			case (uint)FID.resetNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out resetNum_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_PlayerVsPlayer
{
	public int playerInst_;
	public int section_;
	public int value_;
	public int winNum_;
	public int battleNum_;
	public float winValue_;
	public int contWin_;
	public bool isCont_;
	// member ids.
	public enum FID
	{
		playerInst_ = 0,
		section_ = 1,
		value_ = 2,
		winNum_ = 3,
		battleNum_ = 4,
		winValue_ = 5,
		contWin_ = 6,
		isCont_ = 7,
		MAX = 8,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(playerInst_==0?false:true);
		__fm__.writeBit(section_==0?false:true);
		__fm__.writeBit(value_==0?false:true);
		__fm__.writeBit(winNum_==0?false:true);
		__fm__.writeBit(battleNum_==0?false:true);
		__fm__.writeBit(winValue_==0?false:true);
		__fm__.writeBit(contWin_==0?false:true);
		__fm__.writeBit(isCont_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(playerInst_ != 0)
				bin.ProtocolWriter.writeType(w, playerInst_);
		}
		{
			if(section_ != 0)
				bin.ProtocolWriter.writeType(w, section_);
		}
		{
			if(value_ != 0)
				bin.ProtocolWriter.writeType(w, value_);
		}
		{
			if(winNum_ != 0)
				bin.ProtocolWriter.writeType(w, winNum_);
		}
		{
			if(battleNum_ != 0)
				bin.ProtocolWriter.writeType(w, battleNum_);
		}
		{
			if(winValue_ != 0)
				bin.ProtocolWriter.writeType(w, winValue_);
		}
		{
			if(contWin_ != 0)
				bin.ProtocolWriter.writeType(w, contWin_);
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerInst_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out section_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out value_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out winNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out battleNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out winValue_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out contWin_)) return false;
			}
		}
		{
			isCont_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.playerInst_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerInst_);
				}
			}
			return true;
			case (uint)FID.section_:
			{
				{
					bin.ProtocolWriter.writeType(w, section_);
				}
			}
			return true;
			case (uint)FID.value_:
			{
				{
					bin.ProtocolWriter.writeType(w, value_);
				}
			}
			return true;
			case (uint)FID.winNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, winNum_);
				}
			}
			return true;
			case (uint)FID.battleNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, battleNum_);
				}
			}
			return true;
			case (uint)FID.winValue_:
			{
				{
					bin.ProtocolWriter.writeType(w, winValue_);
				}
			}
			return true;
			case (uint)FID.contWin_:
			{
				{
					bin.ProtocolWriter.writeType(w, contWin_);
				}
			}
			return true;
			case (uint)FID.isCont_:
			{
				{
					bin.ProtocolWriter.writeType(w, isCont_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.playerInst_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerInst_)) return false;
				}
			}
			return true;
			case (uint)FID.section_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out section_)) return false;
				}
			}
			return true;
			case (uint)FID.value_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out value_)) return false;
				}
			}
			return true;
			case (uint)FID.winNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out winNum_)) return false;
				}
			}
			return true;
			case (uint)FID.battleNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out battleNum_)) return false;
				}
			}
			return true;
			case (uint)FID.winValue_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out winValue_)) return false;
				}
			}
			return true;
			case (uint)FID.contWin_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out contWin_)) return false;
				}
			}
			return true;
			case (uint)FID.isCont_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isCont_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Activity
{
	public int actId_;
	public int counter_;
	// member ids.
	public enum FID
	{
		actId_ = 0,
		counter_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(actId_==0?false:true);
		__fm__.writeBit(counter_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(actId_ != 0)
				bin.ProtocolWriter.writeType(w, actId_);
		}
		{
			if(counter_ != 0)
				bin.ProtocolWriter.writeType(w, counter_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out actId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out counter_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.actId_:
			{
				{
					bin.ProtocolWriter.writeType(w, actId_);
				}
			}
			return true;
			case (uint)FID.counter_:
			{
				{
					bin.ProtocolWriter.writeType(w, counter_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.actId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out actId_)) return false;
				}
			}
			return true;
			case (uint)FID.counter_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out counter_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ActivityTable
{
	public COM_Activity[] activities_ = new COM_Activity[0];
	public uint[] flag_ = new uint[0];
	public int reward_;
	// member ids.
	public enum FID
	{
		activities_ = 0,
		flag_ = 1,
		reward_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit((activities_==null)?false:(activities_.Length>0?true:false));
		__fm__.writeBit((flag_==null)?false:(flag_.Length>0?true:false));
		__fm__.writeBit(reward_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(activities_ != null && activities_.Length > 0)
			{
				uint __len__ = (activities_ == null)?0:(uint)activities_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					activities_[i].serialize(w);
				}
			}
		}
		{
			if(flag_ != null && flag_.Length > 0)
			{
				uint __len__ = (flag_ == null)?0:(uint)flag_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, flag_[i]);
				}
			}
		}
		{
			if(reward_ != 0)
				bin.ProtocolWriter.writeType(w, reward_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				activities_ = new COM_Activity[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					activities_[i] = new COM_Activity();
					if(!activities_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				flag_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out flag_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out reward_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.activities_:
			{
				{
					uint __len__ = (activities_ == null)?0:(uint)activities_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						activities_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.flag_:
			{
				{
					uint __len__ = (flag_ == null)?0:(uint)flag_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, flag_[i]);
					}
				}
			}
			return true;
			case (uint)FID.reward_:
			{
				{
					bin.ProtocolWriter.writeType(w, reward_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.activities_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					activities_ = new COM_Activity[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						activities_[i] = new COM_Activity();
						if(!activities_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.flag_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					flag_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out flag_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.reward_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out reward_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_CourseGift
{
	public uint id_;
	public float timeout_;
	// member ids.
	public enum FID
	{
		id_ = 0,
		timeout_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(id_==0?false:true);
		__fm__.writeBit(timeout_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(id_ != 0)
				bin.ProtocolWriter.writeType(w, id_);
		}
		{
			if(timeout_ != 0)
				bin.ProtocolWriter.writeType(w, timeout_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out id_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out timeout_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.id_:
			{
				{
					bin.ProtocolWriter.writeType(w, id_);
				}
			}
			return true;
			case (uint)FID.timeout_:
			{
				{
					bin.ProtocolWriter.writeType(w, timeout_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.id_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out id_)) return false;
				}
			}
			return true;
			case (uint)FID.timeout_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out timeout_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_SimplePlayerInst : COM_Entity
{
	public bool isLeavingTeam_;
	public bool isBattle_;
	public bool autoBattle_;
	public bool isTeamLeader_;
	public int sceneId_;
	public ulong openSubSystemFlag_;
	public long createTime_;
	public string guildName_ = "";
	public COM_FPosition scenePos_ = new COM_FPosition();
	public COM_PlayerVsPlayer pvpInfo_ = new COM_PlayerVsPlayer();
	public COM_BabyInst[] babies1_ = new COM_BabyInst[0];
	public COM_EmployeeInst[] battleEmps_ = new COM_EmployeeInst[0];
	// member ids.
	public enum FID
	{
		isLeavingTeam_ = 8,
		isBattle_ = 9,
		autoBattle_ = 10,
		isTeamLeader_ = 11,
		sceneId_ = 12,
		openSubSystemFlag_ = 13,
		createTime_ = 14,
		guildName_ = 15,
		scenePos_ = 16,
		pvpInfo_ = 17,
		babies1_ = 18,
		battleEmps_ = 19,
		MAX = 20,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(isLeavingTeam_);
		__fm__.writeBit(isBattle_);
		__fm__.writeBit(autoBattle_);
		__fm__.writeBit(isTeamLeader_);
		__fm__.writeBit(sceneId_==0?false:true);
		__fm__.writeBit(openSubSystemFlag_==0?false:true);
		__fm__.writeBit(createTime_==0?false:true);
		__fm__.writeBit(guildName_.Length>0?true:false);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit((babies1_==null)?false:(babies1_.Length>0?true:false));
		__fm__.writeBit((battleEmps_==null)?false:(battleEmps_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
		}
		{
		}
		{
		}
		{
		}
		{
			if(sceneId_ != 0)
				bin.ProtocolWriter.writeType(w, sceneId_);
		}
		{
			if(openSubSystemFlag_ != 0)
				bin.ProtocolWriter.writeType(w, openSubSystemFlag_);
		}
		{
			if(createTime_ != 0)
				bin.ProtocolWriter.writeType(w, createTime_);
		}
		{
			if(guildName_.Length > 0)
				bin.ProtocolWriter.writeType(w, guildName_);
		}
		{
			scenePos_.serialize(w);
		}
		{
			pvpInfo_.serialize(w);
		}
		{
			if(babies1_ != null && babies1_.Length > 0)
			{
				uint __len__ = (babies1_ == null)?0:(uint)babies1_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					babies1_[i].serialize(w);
				}
			}
		}
		{
			if(battleEmps_ != null && battleEmps_.Length > 0)
			{
				uint __len__ = (battleEmps_ == null)?0:(uint)battleEmps_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					battleEmps_[i].serialize(w);
				}
			}
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			isLeavingTeam_ = __fm__.readBit();
		}
		{
			isBattle_ = __fm__.readBit();
		}
		{
			autoBattle_ = __fm__.readBit();
		}
		{
			isTeamLeader_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sceneId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out openSubSystemFlag_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out createTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
			}
		}
		{
			__fm__.readBit();
			if(!scenePos_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!pvpInfo_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				babies1_ = new COM_BabyInst[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					babies1_[i] = new COM_BabyInst();
					if(!babies1_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				battleEmps_ = new COM_EmployeeInst[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					battleEmps_[i] = new COM_EmployeeInst();
					if(!battleEmps_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.isLeavingTeam_:
			{
				{
					bin.ProtocolWriter.writeType(w, isLeavingTeam_);
				}
			}
			return true;
			case (uint)FID.isBattle_:
			{
				{
					bin.ProtocolWriter.writeType(w, isBattle_);
				}
			}
			return true;
			case (uint)FID.autoBattle_:
			{
				{
					bin.ProtocolWriter.writeType(w, autoBattle_);
				}
			}
			return true;
			case (uint)FID.isTeamLeader_:
			{
				{
					bin.ProtocolWriter.writeType(w, isTeamLeader_);
				}
			}
			return true;
			case (uint)FID.sceneId_:
			{
				{
					bin.ProtocolWriter.writeType(w, sceneId_);
				}
			}
			return true;
			case (uint)FID.openSubSystemFlag_:
			{
				{
					bin.ProtocolWriter.writeType(w, openSubSystemFlag_);
				}
			}
			return true;
			case (uint)FID.createTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, createTime_);
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildName_);
				}
			}
			return true;
			case (uint)FID.scenePos_:
			{
				{
					scenePos_.serialize(w);
				}
			}
			return true;
			case (uint)FID.pvpInfo_:
			{
				{
					pvpInfo_.serialize(w);
				}
			}
			return true;
			case (uint)FID.babies1_:
			{
				{
					uint __len__ = (babies1_ == null)?0:(uint)babies1_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						babies1_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.battleEmps_:
			{
				{
					uint __len__ = (battleEmps_ == null)?0:(uint)battleEmps_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						battleEmps_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.isLeavingTeam_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isLeavingTeam_)) return false;
				}
			}
			return true;
			case (uint)FID.isBattle_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isBattle_)) return false;
				}
			}
			return true;
			case (uint)FID.autoBattle_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out autoBattle_)) return false;
				}
			}
			return true;
			case (uint)FID.isTeamLeader_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isTeamLeader_)) return false;
				}
			}
			return true;
			case (uint)FID.sceneId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sceneId_)) return false;
				}
			}
			return true;
			case (uint)FID.openSubSystemFlag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out openSubSystemFlag_)) return false;
				}
			}
			return true;
			case (uint)FID.createTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out createTime_)) return false;
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.scenePos_:
			{
				{
					if(!scenePos_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.pvpInfo_:
			{
				{
					if(!pvpInfo_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.babies1_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					babies1_ = new COM_BabyInst[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						babies1_[i] = new COM_BabyInst();
						if(!babies1_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.battleEmps_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					battleEmps_ = new COM_EmployeeInst[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						battleEmps_[i] = new COM_EmployeeInst();
						if(!battleEmps_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_PlayerInst : COM_Entity
{
	public bool isLeavingTeam_;
	public bool isBattle_;
	public bool autoBattle_;
	public bool isTeamLeader_;
	public int sceneId_;
	public ulong openSubSystemFlag_;
	public long createTime_;
	public string guildName_ = "";
	public COM_FPosition scenePos_ = new COM_FPosition();
	public COM_PlayerVsPlayer pvpInfo_ = new COM_PlayerVsPlayer();
	public bool onlineTimeFlag_;
	public float onlineTime_;
	public uint[] onlineTimeReward_ = new uint[0];
	public bool isFund_;
	public uint[] fundtags_ = new uint[0];
	public bool openDoubleTimeFlag_;
	public bool isFirstLogin_;
	public bool firstRechargeDiamond_;
	public bool isFirstRechargeGift_;
	public float offlineExp_;
	public float rivalTime_;
	public sbyte rivalNum_;
	public sbyte promoteAward_;
	public ulong guideIdx_;
	public float noTalkTime_;
	public uint wishShareNum_;
	public uint warriortrophyNum_;
	public uint employeelasttime_;
	public uint employeeonecount_;
	public uint employeetencount_;
	public float greenBoxTimes_;
	public float blueBoxTimes_;
	public uint greenBoxFreeNum_;
	public COM_HundredBattle hbInfo_ = new COM_HundredBattle();
	public int[] openScenes_ = new int[0];
	public uint[] copyNum_ = new uint[0];
	public int magicItemLevel_;
	public int magicItemeExp_;
	public JobType magicItemeJob_;
	public int magicTupoLevel_;
	public int[] cachedNpcs_ = new int[0];
	public string[] gft_ = new string[0];
	public uint[] babycache_ = new uint[0];
	public int[] titles_ = new int[0];
	public int guildContribution_;
	public uint exitGuildTime_;
	public COM_Skill[] guildSkills_ = new COM_Skill[0];
	public ADType[] gmActivities_ = new ADType[0];
	public COM_ADLoginTotal festival_ = new COM_ADLoginTotal();
	public COM_ADChargeTotal selfRecharge_ = new COM_ADChargeTotal();
	public COM_ADChargeTotal sysRecharge_ = new COM_ADChargeTotal();
	public COM_ADDiscountStore selfDiscountStore_ = new COM_ADDiscountStore();
	public COM_ADDiscountStore sysDiscountStore_ = new COM_ADDiscountStore();
	public COM_ADChargeEvery selfOnceRecharge_ = new COM_ADChargeEvery();
	public COM_ADChargeEvery sysOnceRecharge_ = new COM_ADChargeEvery();
	public COM_ADEmployeeTotal empact_ = new COM_ADEmployeeTotal();
	public COM_ADCards selfCards_ = new COM_ADCards();
	public COM_ADChargeTotal myselfRecharge_ = new COM_ADChargeTotal();
	public COM_ADHotRole hotdata_ = new COM_ADHotRole();
	public COM_ADGiftBag gbdata_ = new COM_ADGiftBag();
	public bool sevenflag_;
	public bool signFlag_;
	public COM_Sevenday[] sevendata_ = new COM_Sevenday[0];
	public bool viprewardflag_;
	public string phoneNumber_ = "";
	public uint[] levelgift_ = new uint[0];
	public COM_ActivityTable activity_ = new COM_ActivityTable();
	public COM_Item[] fuwen_ = new COM_Item[0];
	public COM_CrystalData crystalData_ = new COM_CrystalData();
	public COM_IntegralData integralData_ = new COM_IntegralData();
	public COM_CourseGift[] coursegift_ = new COM_CourseGift[0];
	// member ids.
	public enum FID
	{
		isLeavingTeam_ = 8,
		isBattle_ = 9,
		autoBattle_ = 10,
		isTeamLeader_ = 11,
		sceneId_ = 12,
		openSubSystemFlag_ = 13,
		createTime_ = 14,
		guildName_ = 15,
		scenePos_ = 16,
		pvpInfo_ = 17,
		onlineTimeFlag_ = 18,
		onlineTime_ = 19,
		onlineTimeReward_ = 20,
		isFund_ = 21,
		fundtags_ = 22,
		openDoubleTimeFlag_ = 23,
		isFirstLogin_ = 24,
		firstRechargeDiamond_ = 25,
		isFirstRechargeGift_ = 26,
		offlineExp_ = 27,
		rivalTime_ = 28,
		rivalNum_ = 29,
		promoteAward_ = 30,
		guideIdx_ = 31,
		noTalkTime_ = 32,
		wishShareNum_ = 33,
		warriortrophyNum_ = 34,
		employeelasttime_ = 35,
		employeeonecount_ = 36,
		employeetencount_ = 37,
		greenBoxTimes_ = 38,
		blueBoxTimes_ = 39,
		greenBoxFreeNum_ = 40,
		hbInfo_ = 41,
		openScenes_ = 42,
		copyNum_ = 43,
		magicItemLevel_ = 44,
		magicItemeExp_ = 45,
		magicItemeJob_ = 46,
		magicTupoLevel_ = 47,
		cachedNpcs_ = 48,
		gft_ = 49,
		babycache_ = 50,
		titles_ = 51,
		guildContribution_ = 52,
		exitGuildTime_ = 53,
		guildSkills_ = 54,
		gmActivities_ = 55,
		festival_ = 56,
		selfRecharge_ = 57,
		sysRecharge_ = 58,
		selfDiscountStore_ = 59,
		sysDiscountStore_ = 60,
		selfOnceRecharge_ = 61,
		sysOnceRecharge_ = 62,
		empact_ = 63,
		selfCards_ = 64,
		myselfRecharge_ = 65,
		hotdata_ = 66,
		gbdata_ = 67,
		sevenflag_ = 68,
		signFlag_ = 69,
		sevendata_ = 70,
		viprewardflag_ = 71,
		phoneNumber_ = 72,
		levelgift_ = 73,
		activity_ = 74,
		fuwen_ = 75,
		crystalData_ = 76,
		integralData_ = 77,
		coursegift_ = 78,
		MAX = 79,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[9]);
		__fm__.writeBit(isLeavingTeam_);
		__fm__.writeBit(isBattle_);
		__fm__.writeBit(autoBattle_);
		__fm__.writeBit(isTeamLeader_);
		__fm__.writeBit(sceneId_==0?false:true);
		__fm__.writeBit(openSubSystemFlag_==0?false:true);
		__fm__.writeBit(createTime_==0?false:true);
		__fm__.writeBit(guildName_.Length>0?true:false);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(onlineTimeFlag_);
		__fm__.writeBit(onlineTime_==0?false:true);
		__fm__.writeBit((onlineTimeReward_==null)?false:(onlineTimeReward_.Length>0?true:false));
		__fm__.writeBit(isFund_);
		__fm__.writeBit((fundtags_==null)?false:(fundtags_.Length>0?true:false));
		__fm__.writeBit(openDoubleTimeFlag_);
		__fm__.writeBit(isFirstLogin_);
		__fm__.writeBit(firstRechargeDiamond_);
		__fm__.writeBit(isFirstRechargeGift_);
		__fm__.writeBit(offlineExp_==0?false:true);
		__fm__.writeBit(rivalTime_==0?false:true);
		__fm__.writeBit(rivalNum_==0?false:true);
		__fm__.writeBit(promoteAward_==0?false:true);
		__fm__.writeBit(guideIdx_==0?false:true);
		__fm__.writeBit(noTalkTime_==0?false:true);
		__fm__.writeBit(wishShareNum_==0?false:true);
		__fm__.writeBit(warriortrophyNum_==0?false:true);
		__fm__.writeBit(employeelasttime_==0?false:true);
		__fm__.writeBit(employeeonecount_==0?false:true);
		__fm__.writeBit(employeetencount_==0?false:true);
		__fm__.writeBit(greenBoxTimes_==0?false:true);
		__fm__.writeBit(blueBoxTimes_==0?false:true);
		__fm__.writeBit(greenBoxFreeNum_==0?false:true);
		__fm__.writeBit(true);
		__fm__.writeBit((openScenes_==null)?false:(openScenes_.Length>0?true:false));
		__fm__.writeBit((copyNum_==null)?false:(copyNum_.Length>0?true:false));
		__fm__.writeBit(magicItemLevel_==0?false:true);
		__fm__.writeBit(magicItemeExp_==0?false:true);
		__fm__.writeBit(magicItemeJob_==0?false:true);
		__fm__.writeBit(magicTupoLevel_==0?false:true);
		__fm__.writeBit((cachedNpcs_==null)?false:(cachedNpcs_.Length>0?true:false));
		__fm__.writeBit((gft_==null)?false:(gft_.Length>0?true:false));
		__fm__.writeBit((babycache_==null)?false:(babycache_.Length>0?true:false));
		__fm__.writeBit((titles_==null)?false:(titles_.Length>0?true:false));
		__fm__.writeBit(guildContribution_==0?false:true);
		__fm__.writeBit(exitGuildTime_==0?false:true);
		__fm__.writeBit((guildSkills_==null)?false:(guildSkills_.Length>0?true:false));
		__fm__.writeBit((gmActivities_==null)?false:(gmActivities_.Length>0?true:false));
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(sevenflag_);
		__fm__.writeBit(signFlag_);
		__fm__.writeBit((sevendata_==null)?false:(sevendata_.Length>0?true:false));
		__fm__.writeBit(viprewardflag_);
		__fm__.writeBit(phoneNumber_.Length>0?true:false);
		__fm__.writeBit((levelgift_==null)?false:(levelgift_.Length>0?true:false));
		__fm__.writeBit(true);
		__fm__.writeBit((fuwen_==null)?false:(fuwen_.Length>0?true:false));
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit((coursegift_==null)?false:(coursegift_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
		}
		{
		}
		{
		}
		{
		}
		{
			if(sceneId_ != 0)
				bin.ProtocolWriter.writeType(w, sceneId_);
		}
		{
			if(openSubSystemFlag_ != 0)
				bin.ProtocolWriter.writeType(w, openSubSystemFlag_);
		}
		{
			if(createTime_ != 0)
				bin.ProtocolWriter.writeType(w, createTime_);
		}
		{
			if(guildName_.Length > 0)
				bin.ProtocolWriter.writeType(w, guildName_);
		}
		{
			scenePos_.serialize(w);
		}
		{
			pvpInfo_.serialize(w);
		}
		{
		}
		{
			if(onlineTime_ != 0)
				bin.ProtocolWriter.writeType(w, onlineTime_);
		}
		{
			if(onlineTimeReward_ != null && onlineTimeReward_.Length > 0)
			{
				uint __len__ = (onlineTimeReward_ == null)?0:(uint)onlineTimeReward_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, onlineTimeReward_[i]);
				}
			}
		}
		{
		}
		{
			if(fundtags_ != null && fundtags_.Length > 0)
			{
				uint __len__ = (fundtags_ == null)?0:(uint)fundtags_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, fundtags_[i]);
				}
			}
		}
		{
		}
		{
		}
		{
		}
		{
		}
		{
			if(offlineExp_ != 0)
				bin.ProtocolWriter.writeType(w, offlineExp_);
		}
		{
			if(rivalTime_ != 0)
				bin.ProtocolWriter.writeType(w, rivalTime_);
		}
		{
			if(rivalNum_ != 0)
				bin.ProtocolWriter.writeType(w, rivalNum_);
		}
		{
			if(promoteAward_ != 0)
				bin.ProtocolWriter.writeType(w, promoteAward_);
		}
		{
			if(guideIdx_ != 0)
				bin.ProtocolWriter.writeType(w, guideIdx_);
		}
		{
			if(noTalkTime_ != 0)
				bin.ProtocolWriter.writeType(w, noTalkTime_);
		}
		{
			if(wishShareNum_ != 0)
				bin.ProtocolWriter.writeType(w, wishShareNum_);
		}
		{
			if(warriortrophyNum_ != 0)
				bin.ProtocolWriter.writeType(w, warriortrophyNum_);
		}
		{
			if(employeelasttime_ != 0)
				bin.ProtocolWriter.writeType(w, employeelasttime_);
		}
		{
			if(employeeonecount_ != 0)
				bin.ProtocolWriter.writeType(w, employeeonecount_);
		}
		{
			if(employeetencount_ != 0)
				bin.ProtocolWriter.writeType(w, employeetencount_);
		}
		{
			if(greenBoxTimes_ != 0)
				bin.ProtocolWriter.writeType(w, greenBoxTimes_);
		}
		{
			if(blueBoxTimes_ != 0)
				bin.ProtocolWriter.writeType(w, blueBoxTimes_);
		}
		{
			if(greenBoxFreeNum_ != 0)
				bin.ProtocolWriter.writeType(w, greenBoxFreeNum_);
		}
		{
			hbInfo_.serialize(w);
		}
		{
			if(openScenes_ != null && openScenes_.Length > 0)
			{
				uint __len__ = (openScenes_ == null)?0:(uint)openScenes_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, openScenes_[i]);
				}
			}
		}
		{
			if(copyNum_ != null && copyNum_.Length > 0)
			{
				uint __len__ = (copyNum_ == null)?0:(uint)copyNum_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, copyNum_[i]);
				}
			}
		}
		{
			if(magicItemLevel_ != 0)
				bin.ProtocolWriter.writeType(w, magicItemLevel_);
		}
		{
			if(magicItemeExp_ != 0)
				bin.ProtocolWriter.writeType(w, magicItemeExp_);
		}
		{
			byte __e__ = (byte)magicItemeJob_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(magicTupoLevel_ != 0)
				bin.ProtocolWriter.writeType(w, magicTupoLevel_);
		}
		{
			if(cachedNpcs_ != null && cachedNpcs_.Length > 0)
			{
				uint __len__ = (cachedNpcs_ == null)?0:(uint)cachedNpcs_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, cachedNpcs_[i]);
				}
			}
		}
		{
			if(gft_ != null && gft_.Length > 0)
			{
				uint __len__ = (gft_ == null)?0:(uint)gft_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, gft_[i]);
				}
			}
		}
		{
			if(babycache_ != null && babycache_.Length > 0)
			{
				uint __len__ = (babycache_ == null)?0:(uint)babycache_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, babycache_[i]);
				}
			}
		}
		{
			if(titles_ != null && titles_.Length > 0)
			{
				uint __len__ = (titles_ == null)?0:(uint)titles_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, titles_[i]);
				}
			}
		}
		{
			if(guildContribution_ != 0)
				bin.ProtocolWriter.writeType(w, guildContribution_);
		}
		{
			if(exitGuildTime_ != 0)
				bin.ProtocolWriter.writeType(w, exitGuildTime_);
		}
		{
			if(guildSkills_ != null && guildSkills_.Length > 0)
			{
				uint __len__ = (guildSkills_ == null)?0:(uint)guildSkills_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					guildSkills_[i].serialize(w);
				}
			}
		}
		{
			if(gmActivities_ != null && gmActivities_.Length > 0)
			{
				uint __len__ = (gmActivities_ == null)?0:(uint)gmActivities_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, (byte)gmActivities_[i]);
				}
			}
		}
		{
			festival_.serialize(w);
		}
		{
			selfRecharge_.serialize(w);
		}
		{
			sysRecharge_.serialize(w);
		}
		{
			selfDiscountStore_.serialize(w);
		}
		{
			sysDiscountStore_.serialize(w);
		}
		{
			selfOnceRecharge_.serialize(w);
		}
		{
			sysOnceRecharge_.serialize(w);
		}
		{
			empact_.serialize(w);
		}
		{
			selfCards_.serialize(w);
		}
		{
			myselfRecharge_.serialize(w);
		}
		{
			hotdata_.serialize(w);
		}
		{
			gbdata_.serialize(w);
		}
		{
		}
		{
		}
		{
			if(sevendata_ != null && sevendata_.Length > 0)
			{
				uint __len__ = (sevendata_ == null)?0:(uint)sevendata_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					sevendata_[i].serialize(w);
				}
			}
		}
		{
		}
		{
			if(phoneNumber_.Length > 0)
				bin.ProtocolWriter.writeType(w, phoneNumber_);
		}
		{
			if(levelgift_ != null && levelgift_.Length > 0)
			{
				uint __len__ = (levelgift_ == null)?0:(uint)levelgift_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, levelgift_[i]);
				}
			}
		}
		{
			activity_.serialize(w);
		}
		{
			if(fuwen_ != null && fuwen_.Length > 0)
			{
				uint __len__ = (fuwen_ == null)?0:(uint)fuwen_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					fuwen_[i].serialize(w);
				}
			}
		}
		{
			crystalData_.serialize(w);
		}
		{
			integralData_.serialize(w);
		}
		{
			if(coursegift_ != null && coursegift_.Length > 0)
			{
				uint __len__ = (coursegift_ == null)?0:(uint)coursegift_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					coursegift_[i].serialize(w);
				}
			}
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 9)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			isLeavingTeam_ = __fm__.readBit();
		}
		{
			isBattle_ = __fm__.readBit();
		}
		{
			autoBattle_ = __fm__.readBit();
		}
		{
			isTeamLeader_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sceneId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out openSubSystemFlag_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out createTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
			}
		}
		{
			__fm__.readBit();
			if(!scenePos_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!pvpInfo_.deserialize(r)) return false;
		}
		{
			onlineTimeFlag_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out onlineTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				onlineTimeReward_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out onlineTimeReward_[i])) return false;
				}
			}
		}
		{
			isFund_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				fundtags_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out fundtags_[i])) return false;
				}
			}
		}
		{
			openDoubleTimeFlag_ = __fm__.readBit();
		}
		{
			isFirstLogin_ = __fm__.readBit();
		}
		{
			firstRechargeDiamond_ = __fm__.readBit();
		}
		{
			isFirstRechargeGift_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out offlineExp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rivalTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rivalNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out promoteAward_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guideIdx_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out noTalkTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out wishShareNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out warriortrophyNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out employeelasttime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out employeeonecount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out employeetencount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out greenBoxTimes_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out blueBoxTimes_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out greenBoxFreeNum_)) return false;
			}
		}
		{
			__fm__.readBit();
			if(!hbInfo_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				openScenes_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out openScenes_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				copyNum_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out copyNum_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out magicItemLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out magicItemeExp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				magicItemeJob_ = (JobType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out magicTupoLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				cachedNpcs_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out cachedNpcs_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				gft_ = new string[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out gft_[i], 65535)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				babycache_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out babycache_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				titles_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out titles_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildContribution_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out exitGuildTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				guildSkills_ = new COM_Skill[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					guildSkills_[i] = new COM_Skill();
					if(!guildSkills_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				gmActivities_ = new ADType[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					byte __e__;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 21) return false;
					gmActivities_[i] = (ADType)__e__;
				}
			}
		}
		{
			__fm__.readBit();
			if(!festival_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!selfRecharge_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!sysRecharge_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!selfDiscountStore_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!sysDiscountStore_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!selfOnceRecharge_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!sysOnceRecharge_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!empact_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!selfCards_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!myselfRecharge_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!hotdata_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!gbdata_.deserialize(r)) return false;
		}
		{
			sevenflag_ = __fm__.readBit();
		}
		{
			signFlag_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				sevendata_ = new COM_Sevenday[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					sevendata_[i] = new COM_Sevenday();
					if(!sevendata_[i].deserialize(r)) return false;
				}
			}
		}
		{
			viprewardflag_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out phoneNumber_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				levelgift_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out levelgift_[i])) return false;
				}
			}
		}
		{
			__fm__.readBit();
			if(!activity_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				fuwen_ = new COM_Item[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					fuwen_[i] = new COM_Item();
					if(!fuwen_[i].deserialize(r)) return false;
				}
			}
		}
		{
			__fm__.readBit();
			if(!crystalData_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!integralData_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				coursegift_ = new COM_CourseGift[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					coursegift_[i] = new COM_CourseGift();
					if(!coursegift_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.isLeavingTeam_:
			{
				{
					bin.ProtocolWriter.writeType(w, isLeavingTeam_);
				}
			}
			return true;
			case (uint)FID.isBattle_:
			{
				{
					bin.ProtocolWriter.writeType(w, isBattle_);
				}
			}
			return true;
			case (uint)FID.autoBattle_:
			{
				{
					bin.ProtocolWriter.writeType(w, autoBattle_);
				}
			}
			return true;
			case (uint)FID.isTeamLeader_:
			{
				{
					bin.ProtocolWriter.writeType(w, isTeamLeader_);
				}
			}
			return true;
			case (uint)FID.sceneId_:
			{
				{
					bin.ProtocolWriter.writeType(w, sceneId_);
				}
			}
			return true;
			case (uint)FID.openSubSystemFlag_:
			{
				{
					bin.ProtocolWriter.writeType(w, openSubSystemFlag_);
				}
			}
			return true;
			case (uint)FID.createTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, createTime_);
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildName_);
				}
			}
			return true;
			case (uint)FID.scenePos_:
			{
				{
					scenePos_.serialize(w);
				}
			}
			return true;
			case (uint)FID.pvpInfo_:
			{
				{
					pvpInfo_.serialize(w);
				}
			}
			return true;
			case (uint)FID.onlineTimeFlag_:
			{
				{
					bin.ProtocolWriter.writeType(w, onlineTimeFlag_);
				}
			}
			return true;
			case (uint)FID.onlineTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, onlineTime_);
				}
			}
			return true;
			case (uint)FID.onlineTimeReward_:
			{
				{
					uint __len__ = (onlineTimeReward_ == null)?0:(uint)onlineTimeReward_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, onlineTimeReward_[i]);
					}
				}
			}
			return true;
			case (uint)FID.isFund_:
			{
				{
					bin.ProtocolWriter.writeType(w, isFund_);
				}
			}
			return true;
			case (uint)FID.fundtags_:
			{
				{
					uint __len__ = (fundtags_ == null)?0:(uint)fundtags_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, fundtags_[i]);
					}
				}
			}
			return true;
			case (uint)FID.openDoubleTimeFlag_:
			{
				{
					bin.ProtocolWriter.writeType(w, openDoubleTimeFlag_);
				}
			}
			return true;
			case (uint)FID.isFirstLogin_:
			{
				{
					bin.ProtocolWriter.writeType(w, isFirstLogin_);
				}
			}
			return true;
			case (uint)FID.firstRechargeDiamond_:
			{
				{
					bin.ProtocolWriter.writeType(w, firstRechargeDiamond_);
				}
			}
			return true;
			case (uint)FID.isFirstRechargeGift_:
			{
				{
					bin.ProtocolWriter.writeType(w, isFirstRechargeGift_);
				}
			}
			return true;
			case (uint)FID.offlineExp_:
			{
				{
					bin.ProtocolWriter.writeType(w, offlineExp_);
				}
			}
			return true;
			case (uint)FID.rivalTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, rivalTime_);
				}
			}
			return true;
			case (uint)FID.rivalNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, rivalNum_);
				}
			}
			return true;
			case (uint)FID.promoteAward_:
			{
				{
					bin.ProtocolWriter.writeType(w, promoteAward_);
				}
			}
			return true;
			case (uint)FID.guideIdx_:
			{
				{
					bin.ProtocolWriter.writeType(w, guideIdx_);
				}
			}
			return true;
			case (uint)FID.noTalkTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, noTalkTime_);
				}
			}
			return true;
			case (uint)FID.wishShareNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, wishShareNum_);
				}
			}
			return true;
			case (uint)FID.warriortrophyNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, warriortrophyNum_);
				}
			}
			return true;
			case (uint)FID.employeelasttime_:
			{
				{
					bin.ProtocolWriter.writeType(w, employeelasttime_);
				}
			}
			return true;
			case (uint)FID.employeeonecount_:
			{
				{
					bin.ProtocolWriter.writeType(w, employeeonecount_);
				}
			}
			return true;
			case (uint)FID.employeetencount_:
			{
				{
					bin.ProtocolWriter.writeType(w, employeetencount_);
				}
			}
			return true;
			case (uint)FID.greenBoxTimes_:
			{
				{
					bin.ProtocolWriter.writeType(w, greenBoxTimes_);
				}
			}
			return true;
			case (uint)FID.blueBoxTimes_:
			{
				{
					bin.ProtocolWriter.writeType(w, blueBoxTimes_);
				}
			}
			return true;
			case (uint)FID.greenBoxFreeNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, greenBoxFreeNum_);
				}
			}
			return true;
			case (uint)FID.hbInfo_:
			{
				{
					hbInfo_.serialize(w);
				}
			}
			return true;
			case (uint)FID.openScenes_:
			{
				{
					uint __len__ = (openScenes_ == null)?0:(uint)openScenes_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, openScenes_[i]);
					}
				}
			}
			return true;
			case (uint)FID.copyNum_:
			{
				{
					uint __len__ = (copyNum_ == null)?0:(uint)copyNum_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, copyNum_[i]);
					}
				}
			}
			return true;
			case (uint)FID.magicItemLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, magicItemLevel_);
				}
			}
			return true;
			case (uint)FID.magicItemeExp_:
			{
				{
					bin.ProtocolWriter.writeType(w, magicItemeExp_);
				}
			}
			return true;
			case (uint)FID.magicItemeJob_:
			{
				{
					byte __e__ = (byte)magicItemeJob_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.magicTupoLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, magicTupoLevel_);
				}
			}
			return true;
			case (uint)FID.cachedNpcs_:
			{
				{
					uint __len__ = (cachedNpcs_ == null)?0:(uint)cachedNpcs_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, cachedNpcs_[i]);
					}
				}
			}
			return true;
			case (uint)FID.gft_:
			{
				{
					uint __len__ = (gft_ == null)?0:(uint)gft_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, gft_[i]);
					}
				}
			}
			return true;
			case (uint)FID.babycache_:
			{
				{
					uint __len__ = (babycache_ == null)?0:(uint)babycache_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, babycache_[i]);
					}
				}
			}
			return true;
			case (uint)FID.titles_:
			{
				{
					uint __len__ = (titles_ == null)?0:(uint)titles_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, titles_[i]);
					}
				}
			}
			return true;
			case (uint)FID.guildContribution_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildContribution_);
				}
			}
			return true;
			case (uint)FID.exitGuildTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, exitGuildTime_);
				}
			}
			return true;
			case (uint)FID.guildSkills_:
			{
				{
					uint __len__ = (guildSkills_ == null)?0:(uint)guildSkills_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						guildSkills_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.gmActivities_:
			{
				{
					uint __len__ = (gmActivities_ == null)?0:(uint)gmActivities_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, (byte)gmActivities_[i]);
					}
				}
			}
			return true;
			case (uint)FID.festival_:
			{
				{
					festival_.serialize(w);
				}
			}
			return true;
			case (uint)FID.selfRecharge_:
			{
				{
					selfRecharge_.serialize(w);
				}
			}
			return true;
			case (uint)FID.sysRecharge_:
			{
				{
					sysRecharge_.serialize(w);
				}
			}
			return true;
			case (uint)FID.selfDiscountStore_:
			{
				{
					selfDiscountStore_.serialize(w);
				}
			}
			return true;
			case (uint)FID.sysDiscountStore_:
			{
				{
					sysDiscountStore_.serialize(w);
				}
			}
			return true;
			case (uint)FID.selfOnceRecharge_:
			{
				{
					selfOnceRecharge_.serialize(w);
				}
			}
			return true;
			case (uint)FID.sysOnceRecharge_:
			{
				{
					sysOnceRecharge_.serialize(w);
				}
			}
			return true;
			case (uint)FID.empact_:
			{
				{
					empact_.serialize(w);
				}
			}
			return true;
			case (uint)FID.selfCards_:
			{
				{
					selfCards_.serialize(w);
				}
			}
			return true;
			case (uint)FID.myselfRecharge_:
			{
				{
					myselfRecharge_.serialize(w);
				}
			}
			return true;
			case (uint)FID.hotdata_:
			{
				{
					hotdata_.serialize(w);
				}
			}
			return true;
			case (uint)FID.gbdata_:
			{
				{
					gbdata_.serialize(w);
				}
			}
			return true;
			case (uint)FID.sevenflag_:
			{
				{
					bin.ProtocolWriter.writeType(w, sevenflag_);
				}
			}
			return true;
			case (uint)FID.signFlag_:
			{
				{
					bin.ProtocolWriter.writeType(w, signFlag_);
				}
			}
			return true;
			case (uint)FID.sevendata_:
			{
				{
					uint __len__ = (sevendata_ == null)?0:(uint)sevendata_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						sevendata_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.viprewardflag_:
			{
				{
					bin.ProtocolWriter.writeType(w, viprewardflag_);
				}
			}
			return true;
			case (uint)FID.phoneNumber_:
			{
				{
					bin.ProtocolWriter.writeType(w, phoneNumber_);
				}
			}
			return true;
			case (uint)FID.levelgift_:
			{
				{
					uint __len__ = (levelgift_ == null)?0:(uint)levelgift_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, levelgift_[i]);
					}
				}
			}
			return true;
			case (uint)FID.activity_:
			{
				{
					activity_.serialize(w);
				}
			}
			return true;
			case (uint)FID.fuwen_:
			{
				{
					uint __len__ = (fuwen_ == null)?0:(uint)fuwen_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						fuwen_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.crystalData_:
			{
				{
					crystalData_.serialize(w);
				}
			}
			return true;
			case (uint)FID.integralData_:
			{
				{
					integralData_.serialize(w);
				}
			}
			return true;
			case (uint)FID.coursegift_:
			{
				{
					uint __len__ = (coursegift_ == null)?0:(uint)coursegift_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						coursegift_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.isLeavingTeam_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isLeavingTeam_)) return false;
				}
			}
			return true;
			case (uint)FID.isBattle_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isBattle_)) return false;
				}
			}
			return true;
			case (uint)FID.autoBattle_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out autoBattle_)) return false;
				}
			}
			return true;
			case (uint)FID.isTeamLeader_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isTeamLeader_)) return false;
				}
			}
			return true;
			case (uint)FID.sceneId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sceneId_)) return false;
				}
			}
			return true;
			case (uint)FID.openSubSystemFlag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out openSubSystemFlag_)) return false;
				}
			}
			return true;
			case (uint)FID.createTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out createTime_)) return false;
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.scenePos_:
			{
				{
					if(!scenePos_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.pvpInfo_:
			{
				{
					if(!pvpInfo_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.onlineTimeFlag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out onlineTimeFlag_)) return false;
				}
			}
			return true;
			case (uint)FID.onlineTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out onlineTime_)) return false;
				}
			}
			return true;
			case (uint)FID.onlineTimeReward_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					onlineTimeReward_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out onlineTimeReward_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.isFund_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isFund_)) return false;
				}
			}
			return true;
			case (uint)FID.fundtags_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					fundtags_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out fundtags_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.openDoubleTimeFlag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out openDoubleTimeFlag_)) return false;
				}
			}
			return true;
			case (uint)FID.isFirstLogin_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isFirstLogin_)) return false;
				}
			}
			return true;
			case (uint)FID.firstRechargeDiamond_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out firstRechargeDiamond_)) return false;
				}
			}
			return true;
			case (uint)FID.isFirstRechargeGift_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isFirstRechargeGift_)) return false;
				}
			}
			return true;
			case (uint)FID.offlineExp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out offlineExp_)) return false;
				}
			}
			return true;
			case (uint)FID.rivalTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rivalTime_)) return false;
				}
			}
			return true;
			case (uint)FID.rivalNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rivalNum_)) return false;
				}
			}
			return true;
			case (uint)FID.promoteAward_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out promoteAward_)) return false;
				}
			}
			return true;
			case (uint)FID.guideIdx_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guideIdx_)) return false;
				}
			}
			return true;
			case (uint)FID.noTalkTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out noTalkTime_)) return false;
				}
			}
			return true;
			case (uint)FID.wishShareNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out wishShareNum_)) return false;
				}
			}
			return true;
			case (uint)FID.warriortrophyNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out warriortrophyNum_)) return false;
				}
			}
			return true;
			case (uint)FID.employeelasttime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out employeelasttime_)) return false;
				}
			}
			return true;
			case (uint)FID.employeeonecount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out employeeonecount_)) return false;
				}
			}
			return true;
			case (uint)FID.employeetencount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out employeetencount_)) return false;
				}
			}
			return true;
			case (uint)FID.greenBoxTimes_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out greenBoxTimes_)) return false;
				}
			}
			return true;
			case (uint)FID.blueBoxTimes_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out blueBoxTimes_)) return false;
				}
			}
			return true;
			case (uint)FID.greenBoxFreeNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out greenBoxFreeNum_)) return false;
				}
			}
			return true;
			case (uint)FID.hbInfo_:
			{
				{
					if(!hbInfo_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.openScenes_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					openScenes_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out openScenes_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.copyNum_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					copyNum_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out copyNum_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.magicItemLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out magicItemLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.magicItemeExp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out magicItemeExp_)) return false;
				}
			}
			return true;
			case (uint)FID.magicItemeJob_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					magicItemeJob_ = (JobType)__e__;
				}
			}
			return true;
			case (uint)FID.magicTupoLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out magicTupoLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.cachedNpcs_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					cachedNpcs_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out cachedNpcs_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.gft_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					gft_ = new string[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out gft_[i], 65535)) return false;
					}
				}
			}
			return true;
			case (uint)FID.babycache_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					babycache_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out babycache_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.titles_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					titles_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out titles_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.guildContribution_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildContribution_)) return false;
				}
			}
			return true;
			case (uint)FID.exitGuildTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out exitGuildTime_)) return false;
				}
			}
			return true;
			case (uint)FID.guildSkills_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					guildSkills_ = new COM_Skill[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						guildSkills_[i] = new COM_Skill();
						if(!guildSkills_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.gmActivities_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					gmActivities_ = new ADType[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						byte __e__;
						if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 21) return false;
						gmActivities_[i] = (ADType)__e__;
					}
				}
			}
			return true;
			case (uint)FID.festival_:
			{
				{
					if(!festival_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.selfRecharge_:
			{
				{
					if(!selfRecharge_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.sysRecharge_:
			{
				{
					if(!sysRecharge_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.selfDiscountStore_:
			{
				{
					if(!selfDiscountStore_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.sysDiscountStore_:
			{
				{
					if(!sysDiscountStore_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.selfOnceRecharge_:
			{
				{
					if(!selfOnceRecharge_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.sysOnceRecharge_:
			{
				{
					if(!sysOnceRecharge_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.empact_:
			{
				{
					if(!empact_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.selfCards_:
			{
				{
					if(!selfCards_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.myselfRecharge_:
			{
				{
					if(!myselfRecharge_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.hotdata_:
			{
				{
					if(!hotdata_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.gbdata_:
			{
				{
					if(!gbdata_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.sevenflag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sevenflag_)) return false;
				}
			}
			return true;
			case (uint)FID.signFlag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out signFlag_)) return false;
				}
			}
			return true;
			case (uint)FID.sevendata_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					sevendata_ = new COM_Sevenday[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						sevendata_[i] = new COM_Sevenday();
						if(!sevendata_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.viprewardflag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out viprewardflag_)) return false;
				}
			}
			return true;
			case (uint)FID.phoneNumber_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out phoneNumber_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.levelgift_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					levelgift_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out levelgift_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.activity_:
			{
				{
					if(!activity_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.fuwen_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					fuwen_ = new COM_Item[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						fuwen_[i] = new COM_Item();
						if(!fuwen_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.crystalData_:
			{
				{
					if(!crystalData_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.integralData_:
			{
				{
					if(!integralData_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.coursegift_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					coursegift_ = new COM_CourseGift[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						coursegift_[i] = new COM_CourseGift();
						if(!coursegift_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_MonsterInst : COM_Entity
{
	public int[] gear_ = new int[0];
	// member ids.
	public enum FID
	{
		gear_ = 8,
		MAX = 9,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit((gear_==null)?false:(gear_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(gear_ != null && gear_.Length > 0)
			{
				uint __len__ = (gear_ == null)?0:(uint)gear_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, gear_[i]);
				}
			}
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				gear_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out gear_[i])) return false;
				}
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.gear_:
			{
				{
					uint __len__ = (gear_ == null)?0:(uint)gear_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, gear_[i]);
					}
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.gear_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					gear_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out gear_[i])) return false;
					}
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_ReportState : COM_State
{
	public bool add_;
	public int ownerId_;
	public sbyte addQueue_;
	// member ids.
	public enum FID
	{
		add_ = 6,
		ownerId_ = 7,
		addQueue_ = 8,
		MAX = 9,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(add_);
		__fm__.writeBit(ownerId_==0?false:true);
		__fm__.writeBit(addQueue_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
		}
		{
			if(ownerId_ != 0)
				bin.ProtocolWriter.writeType(w, ownerId_);
		}
		{
			if(addQueue_ != 0)
				bin.ProtocolWriter.writeType(w, addQueue_);
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			add_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ownerId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out addQueue_)) return false;
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.add_:
			{
				{
					bin.ProtocolWriter.writeType(w, add_);
				}
			}
			return true;
			case (uint)FID.ownerId_:
			{
				{
					bin.ProtocolWriter.writeType(w, ownerId_);
				}
			}
			return true;
			case (uint)FID.addQueue_:
			{
				{
					bin.ProtocolWriter.writeType(w, addQueue_);
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.add_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out add_)) return false;
				}
			}
			return true;
			case (uint)FID.ownerId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ownerId_)) return false;
				}
			}
			return true;
			case (uint)FID.addQueue_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out addQueue_)) return false;
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_ReportTargetBase
{
	public BattlePosition position_;
	public COM_PropValue prop_ = new COM_PropValue();
	public bool bao_;
	public bool fly_;
	// member ids.
	public enum FID
	{
		position_ = 0,
		prop_ = 1,
		bao_ = 2,
		fly_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(position_==0?false:true);
		__fm__.writeBit(true);
		__fm__.writeBit(bao_);
		__fm__.writeBit(fly_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)position_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			prop_.serialize(w);
		}
		{
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
				position_ = (BattlePosition)__e__;
			}
		}
		{
			__fm__.readBit();
			if(!prop_.deserialize(r)) return false;
		}
		{
			bao_ = __fm__.readBit();
		}
		{
			fly_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.position_:
			{
				{
					byte __e__ = (byte)position_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.prop_:
			{
				{
					prop_.serialize(w);
				}
			}
			return true;
			case (uint)FID.bao_:
			{
				{
					bin.ProtocolWriter.writeType(w, bao_);
				}
			}
			return true;
			case (uint)FID.fly_:
			{
				{
					bin.ProtocolWriter.writeType(w, fly_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.position_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
					position_ = (BattlePosition)__e__;
				}
			}
			return true;
			case (uint)FID.prop_:
			{
				{
					if(!prop_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.bao_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out bao_)) return false;
				}
			}
			return true;
			case (uint)FID.fly_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out fly_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ReportTarget : COM_ReportTargetBase
{
	public COM_ReportTargetBase[] prop2_ = new COM_ReportTargetBase[0];
	// member ids.
	public enum FID
	{
		prop2_ = 4,
		MAX = 5,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit((prop2_==null)?false:(prop2_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(prop2_ != null && prop2_.Length > 0)
			{
				uint __len__ = (prop2_ == null)?0:(uint)prop2_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					prop2_[i].serialize(w);
				}
			}
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				prop2_ = new COM_ReportTargetBase[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					prop2_[i] = new COM_ReportTargetBase();
					if(!prop2_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.prop2_:
			{
				{
					uint __len__ = (prop2_ == null)?0:(uint)prop2_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						prop2_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.prop2_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					prop2_ = new COM_ReportTargetBase[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						prop2_[i] = new COM_ReportTargetBase();
						if(!prop2_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_Order
{
	public OrderStatus status_;
	public int casterId_;
	public int target_;
	public int skill_;
	public int itemId_;
	public int weaponInstId_;
	public int babyId_;
	public sbyte isSec_;
	public sbyte uinteGroup_;
	public int uniteNum_;
	public bool isNo_;
	// member ids.
	public enum FID
	{
		status_ = 0,
		casterId_ = 1,
		target_ = 2,
		skill_ = 3,
		itemId_ = 4,
		weaponInstId_ = 5,
		babyId_ = 6,
		isSec_ = 7,
		uinteGroup_ = 8,
		uniteNum_ = 9,
		isNo_ = 10,
		MAX = 11,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(status_==0?false:true);
		__fm__.writeBit(casterId_==0?false:true);
		__fm__.writeBit(target_==0?false:true);
		__fm__.writeBit(skill_==0?false:true);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(weaponInstId_==0?false:true);
		__fm__.writeBit(babyId_==0?false:true);
		__fm__.writeBit(isSec_==0?false:true);
		__fm__.writeBit(uinteGroup_==0?false:true);
		__fm__.writeBit(uniteNum_==0?false:true);
		__fm__.writeBit(isNo_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)status_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(casterId_ != 0)
				bin.ProtocolWriter.writeType(w, casterId_);
		}
		{
			if(target_ != 0)
				bin.ProtocolWriter.writeType(w, target_);
		}
		{
			if(skill_ != 0)
				bin.ProtocolWriter.writeType(w, skill_);
		}
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(weaponInstId_ != 0)
				bin.ProtocolWriter.writeType(w, weaponInstId_);
		}
		{
			if(babyId_ != 0)
				bin.ProtocolWriter.writeType(w, babyId_);
		}
		{
			if(isSec_ != 0)
				bin.ProtocolWriter.writeType(w, isSec_);
		}
		{
			if(uinteGroup_ != 0)
				bin.ProtocolWriter.writeType(w, uinteGroup_);
		}
		{
			if(uniteNum_ != 0)
				bin.ProtocolWriter.writeType(w, uniteNum_);
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 9) return false;
				status_ = (OrderStatus)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out casterId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out target_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out skill_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out weaponInstId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out babyId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out isSec_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out uinteGroup_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out uniteNum_)) return false;
			}
		}
		{
			isNo_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.status_:
			{
				{
					byte __e__ = (byte)status_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.casterId_:
			{
				{
					bin.ProtocolWriter.writeType(w, casterId_);
				}
			}
			return true;
			case (uint)FID.target_:
			{
				{
					bin.ProtocolWriter.writeType(w, target_);
				}
			}
			return true;
			case (uint)FID.skill_:
			{
				{
					bin.ProtocolWriter.writeType(w, skill_);
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.weaponInstId_:
			{
				{
					bin.ProtocolWriter.writeType(w, weaponInstId_);
				}
			}
			return true;
			case (uint)FID.babyId_:
			{
				{
					bin.ProtocolWriter.writeType(w, babyId_);
				}
			}
			return true;
			case (uint)FID.isSec_:
			{
				{
					bin.ProtocolWriter.writeType(w, isSec_);
				}
			}
			return true;
			case (uint)FID.uinteGroup_:
			{
				{
					bin.ProtocolWriter.writeType(w, uinteGroup_);
				}
			}
			return true;
			case (uint)FID.uniteNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, uniteNum_);
				}
			}
			return true;
			case (uint)FID.isNo_:
			{
				{
					bin.ProtocolWriter.writeType(w, isNo_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.status_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 9) return false;
					status_ = (OrderStatus)__e__;
				}
			}
			return true;
			case (uint)FID.casterId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out casterId_)) return false;
				}
			}
			return true;
			case (uint)FID.target_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out target_)) return false;
				}
			}
			return true;
			case (uint)FID.skill_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out skill_)) return false;
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.weaponInstId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out weaponInstId_)) return false;
				}
			}
			return true;
			case (uint)FID.babyId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out babyId_)) return false;
				}
			}
			return true;
			case (uint)FID.isSec_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isSec_)) return false;
				}
			}
			return true;
			case (uint)FID.uinteGroup_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out uinteGroup_)) return false;
				}
			}
			return true;
			case (uint)FID.uniteNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out uniteNum_)) return false;
				}
			}
			return true;
			case (uint)FID.isNo_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isNo_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ReportActionCounter
{
	public int casterId_;
	public byte targetPosition_;
	public COM_ReportTarget props_ = new COM_ReportTarget();
	public COM_ReportState[] states_ = new COM_ReportState[0];
	// member ids.
	public enum FID
	{
		casterId_ = 0,
		targetPosition_ = 1,
		props_ = 2,
		states_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(casterId_==0?false:true);
		__fm__.writeBit(targetPosition_==0?false:true);
		__fm__.writeBit(true);
		__fm__.writeBit((states_==null)?false:(states_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(casterId_ != 0)
				bin.ProtocolWriter.writeType(w, casterId_);
		}
		{
			if(targetPosition_ != 0)
				bin.ProtocolWriter.writeType(w, targetPosition_);
		}
		{
			props_.serialize(w);
		}
		{
			if(states_ != null && states_.Length > 0)
			{
				uint __len__ = (states_ == null)?0:(uint)states_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					states_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out casterId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out targetPosition_)) return false;
			}
		}
		{
			__fm__.readBit();
			if(!props_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				states_ = new COM_ReportState[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					states_[i] = new COM_ReportState();
					if(!states_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.casterId_:
			{
				{
					bin.ProtocolWriter.writeType(w, casterId_);
				}
			}
			return true;
			case (uint)FID.targetPosition_:
			{
				{
					bin.ProtocolWriter.writeType(w, targetPosition_);
				}
			}
			return true;
			case (uint)FID.props_:
			{
				{
					props_.serialize(w);
				}
			}
			return true;
			case (uint)FID.states_:
			{
				{
					uint __len__ = (states_ == null)?0:(uint)states_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						states_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.casterId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out casterId_)) return false;
				}
			}
			return true;
			case (uint)FID.targetPosition_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out targetPosition_)) return false;
				}
			}
			return true;
			case (uint)FID.props_:
			{
				{
					if(!props_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.states_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					states_ = new COM_ReportState[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						states_[i] = new COM_ReportState();
						if(!states_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ReportAction : COM_Order
{
	public bool zhuachongOk_;
	public byte skillLevel_;
	public byte huweiPosition_;
	public BattlePosition bp0_;
	public BattlePosition bp1_;
	public COM_BattleEntityInformation baby_ = new COM_BattleEntityInformation();
	public int[] eraseEntities_ = new int[0];
	public COM_ReportTarget[] targets_ = new COM_ReportTarget[0];
	public COM_ReportState[] stateIds_ = new COM_ReportState[0];
	public COM_ReportActionCounter[] counters_ = new COM_ReportActionCounter[0];
	public COM_BattleEntityInformation[] dynamicEntities_ = new COM_BattleEntityInformation[0];
	// member ids.
	public enum FID
	{
		zhuachongOk_ = 11,
		skillLevel_ = 12,
		huweiPosition_ = 13,
		bp0_ = 14,
		bp1_ = 15,
		baby_ = 16,
		eraseEntities_ = 17,
		targets_ = 18,
		stateIds_ = 19,
		counters_ = 20,
		dynamicEntities_ = 21,
		MAX = 22,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(zhuachongOk_);
		__fm__.writeBit(skillLevel_==0?false:true);
		__fm__.writeBit(huweiPosition_==0?false:true);
		__fm__.writeBit(bp0_==0?false:true);
		__fm__.writeBit(bp1_==0?false:true);
		__fm__.writeBit(true);
		__fm__.writeBit((eraseEntities_==null)?false:(eraseEntities_.Length>0?true:false));
		__fm__.writeBit((targets_==null)?false:(targets_.Length>0?true:false));
		__fm__.writeBit((stateIds_==null)?false:(stateIds_.Length>0?true:false));
		__fm__.writeBit((counters_==null)?false:(counters_.Length>0?true:false));
		__fm__.writeBit((dynamicEntities_==null)?false:(dynamicEntities_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
		}
		{
			if(skillLevel_ != 0)
				bin.ProtocolWriter.writeType(w, skillLevel_);
		}
		{
			if(huweiPosition_ != 0)
				bin.ProtocolWriter.writeType(w, huweiPosition_);
		}
		{
			byte __e__ = (byte)bp0_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			byte __e__ = (byte)bp1_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			baby_.serialize(w);
		}
		{
			if(eraseEntities_ != null && eraseEntities_.Length > 0)
			{
				uint __len__ = (eraseEntities_ == null)?0:(uint)eraseEntities_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, eraseEntities_[i]);
				}
			}
		}
		{
			if(targets_ != null && targets_.Length > 0)
			{
				uint __len__ = (targets_ == null)?0:(uint)targets_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					targets_[i].serialize(w);
				}
			}
		}
		{
			if(stateIds_ != null && stateIds_.Length > 0)
			{
				uint __len__ = (stateIds_ == null)?0:(uint)stateIds_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					stateIds_[i].serialize(w);
				}
			}
		}
		{
			if(counters_ != null && counters_.Length > 0)
			{
				uint __len__ = (counters_ == null)?0:(uint)counters_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					counters_[i].serialize(w);
				}
			}
		}
		{
			if(dynamicEntities_ != null && dynamicEntities_.Length > 0)
			{
				uint __len__ = (dynamicEntities_ == null)?0:(uint)dynamicEntities_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					dynamicEntities_[i].serialize(w);
				}
			}
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			zhuachongOk_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out skillLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out huweiPosition_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
				bp0_ = (BattlePosition)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
				bp1_ = (BattlePosition)__e__;
			}
		}
		{
			__fm__.readBit();
			if(!baby_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				eraseEntities_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out eraseEntities_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				targets_ = new COM_ReportTarget[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					targets_[i] = new COM_ReportTarget();
					if(!targets_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				stateIds_ = new COM_ReportState[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					stateIds_[i] = new COM_ReportState();
					if(!stateIds_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				counters_ = new COM_ReportActionCounter[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					counters_[i] = new COM_ReportActionCounter();
					if(!counters_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				dynamicEntities_ = new COM_BattleEntityInformation[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					dynamicEntities_[i] = new COM_BattleEntityInformation();
					if(!dynamicEntities_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.zhuachongOk_:
			{
				{
					bin.ProtocolWriter.writeType(w, zhuachongOk_);
				}
			}
			return true;
			case (uint)FID.skillLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, skillLevel_);
				}
			}
			return true;
			case (uint)FID.huweiPosition_:
			{
				{
					bin.ProtocolWriter.writeType(w, huweiPosition_);
				}
			}
			return true;
			case (uint)FID.bp0_:
			{
				{
					byte __e__ = (byte)bp0_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.bp1_:
			{
				{
					byte __e__ = (byte)bp1_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.baby_:
			{
				{
					baby_.serialize(w);
				}
			}
			return true;
			case (uint)FID.eraseEntities_:
			{
				{
					uint __len__ = (eraseEntities_ == null)?0:(uint)eraseEntities_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, eraseEntities_[i]);
					}
				}
			}
			return true;
			case (uint)FID.targets_:
			{
				{
					uint __len__ = (targets_ == null)?0:(uint)targets_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						targets_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.stateIds_:
			{
				{
					uint __len__ = (stateIds_ == null)?0:(uint)stateIds_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						stateIds_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.counters_:
			{
				{
					uint __len__ = (counters_ == null)?0:(uint)counters_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						counters_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.dynamicEntities_:
			{
				{
					uint __len__ = (dynamicEntities_ == null)?0:(uint)dynamicEntities_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						dynamicEntities_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.zhuachongOk_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out zhuachongOk_)) return false;
				}
			}
			return true;
			case (uint)FID.skillLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out skillLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.huweiPosition_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out huweiPosition_)) return false;
				}
			}
			return true;
			case (uint)FID.bp0_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
					bp0_ = (BattlePosition)__e__;
				}
			}
			return true;
			case (uint)FID.bp1_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
					bp1_ = (BattlePosition)__e__;
				}
			}
			return true;
			case (uint)FID.baby_:
			{
				{
					if(!baby_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.eraseEntities_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					eraseEntities_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out eraseEntities_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.targets_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					targets_ = new COM_ReportTarget[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						targets_[i] = new COM_ReportTarget();
						if(!targets_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.stateIds_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					stateIds_ = new COM_ReportState[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						stateIds_[i] = new COM_ReportState();
						if(!stateIds_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.counters_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					counters_ = new COM_ReportActionCounter[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						counters_[i] = new COM_ReportActionCounter();
						if(!counters_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.dynamicEntities_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					dynamicEntities_ = new COM_BattleEntityInformation[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						dynamicEntities_[i] = new COM_BattleEntityInformation();
						if(!dynamicEntities_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_BattleReport
{
	public COM_ReportState[] stateIds_ = new COM_ReportState[0];
	public COM_ReportAction[] actionResults_ = new COM_ReportAction[0];
	public COM_ReportTarget[] targets_ = new COM_ReportTarget[0];
	public COM_BattleEntityInformation[] waveEntities_ = new COM_BattleEntityInformation[0];
	// member ids.
	public enum FID
	{
		stateIds_ = 0,
		actionResults_ = 1,
		targets_ = 2,
		waveEntities_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit((stateIds_==null)?false:(stateIds_.Length>0?true:false));
		__fm__.writeBit((actionResults_==null)?false:(actionResults_.Length>0?true:false));
		__fm__.writeBit((targets_==null)?false:(targets_.Length>0?true:false));
		__fm__.writeBit((waveEntities_==null)?false:(waveEntities_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(stateIds_ != null && stateIds_.Length > 0)
			{
				uint __len__ = (stateIds_ == null)?0:(uint)stateIds_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					stateIds_[i].serialize(w);
				}
			}
		}
		{
			if(actionResults_ != null && actionResults_.Length > 0)
			{
				uint __len__ = (actionResults_ == null)?0:(uint)actionResults_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					actionResults_[i].serialize(w);
				}
			}
		}
		{
			if(targets_ != null && targets_.Length > 0)
			{
				uint __len__ = (targets_ == null)?0:(uint)targets_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					targets_[i].serialize(w);
				}
			}
		}
		{
			if(waveEntities_ != null && waveEntities_.Length > 0)
			{
				uint __len__ = (waveEntities_ == null)?0:(uint)waveEntities_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					waveEntities_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				stateIds_ = new COM_ReportState[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					stateIds_[i] = new COM_ReportState();
					if(!stateIds_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				actionResults_ = new COM_ReportAction[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					actionResults_[i] = new COM_ReportAction();
					if(!actionResults_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				targets_ = new COM_ReportTarget[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					targets_[i] = new COM_ReportTarget();
					if(!targets_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				waveEntities_ = new COM_BattleEntityInformation[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					waveEntities_[i] = new COM_BattleEntityInformation();
					if(!waveEntities_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.stateIds_:
			{
				{
					uint __len__ = (stateIds_ == null)?0:(uint)stateIds_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						stateIds_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.actionResults_:
			{
				{
					uint __len__ = (actionResults_ == null)?0:(uint)actionResults_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						actionResults_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.targets_:
			{
				{
					uint __len__ = (targets_ == null)?0:(uint)targets_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						targets_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.waveEntities_:
			{
				{
					uint __len__ = (waveEntities_ == null)?0:(uint)waveEntities_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						waveEntities_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.stateIds_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					stateIds_ = new COM_ReportState[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						stateIds_[i] = new COM_ReportState();
						if(!stateIds_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.actionResults_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					actionResults_ = new COM_ReportAction[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						actionResults_[i] = new COM_ReportAction();
						if(!actionResults_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.targets_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					targets_ = new COM_ReportTarget[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						targets_[i] = new COM_ReportTarget();
						if(!targets_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.waveEntities_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					waveEntities_ = new COM_BattleEntityInformation[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						waveEntities_[i] = new COM_BattleEntityInformation();
						if(!waveEntities_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_InitBattle
{
	public uint battleId_;
	public BattleType bt_;
	public uint roundCount_;
	public OperateType opType_;
	public SneakAttackType sneakAttack_;
	public COM_BattleEntityInformation[] actors_ = new COM_BattleEntityInformation[0];
	// member ids.
	public enum FID
	{
		battleId_ = 0,
		bt_ = 1,
		roundCount_ = 2,
		opType_ = 3,
		sneakAttack_ = 4,
		actors_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(battleId_==0?false:true);
		__fm__.writeBit(bt_==0?false:true);
		__fm__.writeBit(roundCount_==0?false:true);
		__fm__.writeBit(opType_==0?false:true);
		__fm__.writeBit(sneakAttack_==0?false:true);
		__fm__.writeBit((actors_==null)?false:(actors_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(battleId_ != 0)
				bin.ProtocolWriter.writeType(w, battleId_);
		}
		{
			byte __e__ = (byte)bt_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(roundCount_ != 0)
				bin.ProtocolWriter.writeType(w, roundCount_);
		}
		{
			byte __e__ = (byte)opType_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			byte __e__ = (byte)sneakAttack_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(actors_ != null && actors_.Length > 0)
			{
				uint __len__ = (actors_ == null)?0:(uint)actors_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					actors_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out battleId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 10) return false;
				bt_ = (BattleType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roundCount_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 4) return false;
				opType_ = (OperateType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 4) return false;
				sneakAttack_ = (SneakAttackType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				actors_ = new COM_BattleEntityInformation[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					actors_[i] = new COM_BattleEntityInformation();
					if(!actors_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.battleId_:
			{
				{
					bin.ProtocolWriter.writeType(w, battleId_);
				}
			}
			return true;
			case (uint)FID.bt_:
			{
				{
					byte __e__ = (byte)bt_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.roundCount_:
			{
				{
					bin.ProtocolWriter.writeType(w, roundCount_);
				}
			}
			return true;
			case (uint)FID.opType_:
			{
				{
					byte __e__ = (byte)opType_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.sneakAttack_:
			{
				{
					byte __e__ = (byte)sneakAttack_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.actors_:
			{
				{
					uint __len__ = (actors_ == null)?0:(uint)actors_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						actors_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.battleId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out battleId_)) return false;
				}
			}
			return true;
			case (uint)FID.bt_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 10) return false;
					bt_ = (BattleType)__e__;
				}
			}
			return true;
			case (uint)FID.roundCount_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roundCount_)) return false;
				}
			}
			return true;
			case (uint)FID.opType_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 4) return false;
					opType_ = (OperateType)__e__;
				}
			}
			return true;
			case (uint)FID.sneakAttack_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 4) return false;
					sneakAttack_ = (SneakAttackType)__e__;
				}
			}
			return true;
			case (uint)FID.actors_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					actors_ = new COM_BattleEntityInformation[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						actors_[i] = new COM_BattleEntityInformation();
						if(!actors_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_CreateTeamInfo
{
	public TeamType type_;
	public byte maxMemberSize_;
	public string name_ = "";
	public string pwd_ = "";
	public ushort minLevel_;
	public ushort maxLevel_;
	// member ids.
	public enum FID
	{
		type_ = 0,
		maxMemberSize_ = 1,
		name_ = 2,
		pwd_ = 3,
		minLevel_ = 4,
		maxLevel_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(maxMemberSize_==0?false:true);
		__fm__.writeBit(name_.Length>0?true:false);
		__fm__.writeBit(pwd_.Length>0?true:false);
		__fm__.writeBit(minLevel_==0?false:true);
		__fm__.writeBit(maxLevel_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(maxMemberSize_ != 0)
				bin.ProtocolWriter.writeType(w, maxMemberSize_);
		}
		{
			if(name_.Length > 0)
				bin.ProtocolWriter.writeType(w, name_);
		}
		{
			if(pwd_.Length > 0)
				bin.ProtocolWriter.writeType(w, pwd_);
		}
		{
			if(minLevel_ != 0)
				bin.ProtocolWriter.writeType(w, minLevel_);
		}
		{
			if(maxLevel_ != 0)
				bin.ProtocolWriter.writeType(w, maxLevel_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				type_ = (TeamType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out maxMemberSize_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pwd_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out minLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out maxLevel_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.maxMemberSize_:
			{
				{
					bin.ProtocolWriter.writeType(w, maxMemberSize_);
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					bin.ProtocolWriter.writeType(w, name_);
				}
			}
			return true;
			case (uint)FID.pwd_:
			{
				{
					bin.ProtocolWriter.writeType(w, pwd_);
				}
			}
			return true;
			case (uint)FID.minLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, minLevel_);
				}
			}
			return true;
			case (uint)FID.maxLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, maxLevel_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					type_ = (TeamType)__e__;
				}
			}
			return true;
			case (uint)FID.maxMemberSize_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out maxMemberSize_)) return false;
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pwd_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pwd_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.minLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out minLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.maxLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out maxLevel_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_SimpleTeamInfo : COM_CreateTeamInfo
{
	public uint teamId_;
	public byte curMemberSize_;
	public string leaderName_ = "";
	public JobType job_;
	public uint joblevel_;
	public bool needPassword_;
	public bool isRunning_;
	public bool isWelcome_;
	// member ids.
	public enum FID
	{
		teamId_ = 6,
		curMemberSize_ = 7,
		leaderName_ = 8,
		job_ = 9,
		joblevel_ = 10,
		needPassword_ = 11,
		isRunning_ = 12,
		isWelcome_ = 13,
		MAX = 14,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(teamId_==0?false:true);
		__fm__.writeBit(curMemberSize_==0?false:true);
		__fm__.writeBit(leaderName_.Length>0?true:false);
		__fm__.writeBit(job_==0?false:true);
		__fm__.writeBit(joblevel_==0?false:true);
		__fm__.writeBit(needPassword_);
		__fm__.writeBit(isRunning_);
		__fm__.writeBit(isWelcome_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(teamId_ != 0)
				bin.ProtocolWriter.writeType(w, teamId_);
		}
		{
			if(curMemberSize_ != 0)
				bin.ProtocolWriter.writeType(w, curMemberSize_);
		}
		{
			if(leaderName_.Length > 0)
				bin.ProtocolWriter.writeType(w, leaderName_);
		}
		{
			byte __e__ = (byte)job_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(joblevel_ != 0)
				bin.ProtocolWriter.writeType(w, joblevel_);
		}
		{
		}
		{
		}
		{
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out teamId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out curMemberSize_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out leaderName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				job_ = (JobType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out joblevel_)) return false;
			}
		}
		{
			needPassword_ = __fm__.readBit();
		}
		{
			isRunning_ = __fm__.readBit();
		}
		{
			isWelcome_ = __fm__.readBit();
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.teamId_:
			{
				{
					bin.ProtocolWriter.writeType(w, teamId_);
				}
			}
			return true;
			case (uint)FID.curMemberSize_:
			{
				{
					bin.ProtocolWriter.writeType(w, curMemberSize_);
				}
			}
			return true;
			case (uint)FID.leaderName_:
			{
				{
					bin.ProtocolWriter.writeType(w, leaderName_);
				}
			}
			return true;
			case (uint)FID.job_:
			{
				{
					byte __e__ = (byte)job_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.joblevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, joblevel_);
				}
			}
			return true;
			case (uint)FID.needPassword_:
			{
				{
					bin.ProtocolWriter.writeType(w, needPassword_);
				}
			}
			return true;
			case (uint)FID.isRunning_:
			{
				{
					bin.ProtocolWriter.writeType(w, isRunning_);
				}
			}
			return true;
			case (uint)FID.isWelcome_:
			{
				{
					bin.ProtocolWriter.writeType(w, isWelcome_);
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.teamId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out teamId_)) return false;
				}
			}
			return true;
			case (uint)FID.curMemberSize_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out curMemberSize_)) return false;
				}
			}
			return true;
			case (uint)FID.leaderName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out leaderName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.job_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					job_ = (JobType)__e__;
				}
			}
			return true;
			case (uint)FID.joblevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out joblevel_)) return false;
				}
			}
			return true;
			case (uint)FID.needPassword_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out needPassword_)) return false;
				}
			}
			return true;
			case (uint)FID.isRunning_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isRunning_)) return false;
				}
			}
			return true;
			case (uint)FID.isWelcome_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isWelcome_)) return false;
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_TeamInfo : COM_SimpleTeamInfo
{
	public COM_SimplePlayerInst[] members_ = new COM_SimplePlayerInst[0];
	// member ids.
	public enum FID
	{
		members_ = 14,
		MAX = 15,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit((members_==null)?false:(members_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(members_ != null && members_.Length > 0)
			{
				uint __len__ = (members_ == null)?0:(uint)members_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					members_[i].serialize(w);
				}
			}
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				members_ = new COM_SimplePlayerInst[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					members_[i] = new COM_SimplePlayerInst();
					if(!members_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.members_:
			{
				{
					uint __len__ = (members_ == null)?0:(uint)members_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						members_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.members_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					members_ = new COM_SimplePlayerInst[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						members_[i] = new COM_SimplePlayerInst();
						if(!members_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_JJCBattleMsg
{
	public string defier_ = "";
	public string bydefier_ = "";
	public uint rank_;
	public bool isWin_;
	public long curTime_;
	// member ids.
	public enum FID
	{
		defier_ = 0,
		bydefier_ = 1,
		rank_ = 2,
		isWin_ = 3,
		curTime_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(defier_.Length>0?true:false);
		__fm__.writeBit(bydefier_.Length>0?true:false);
		__fm__.writeBit(rank_==0?false:true);
		__fm__.writeBit(isWin_);
		__fm__.writeBit(curTime_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(defier_.Length > 0)
				bin.ProtocolWriter.writeType(w, defier_);
		}
		{
			if(bydefier_.Length > 0)
				bin.ProtocolWriter.writeType(w, bydefier_);
		}
		{
			if(rank_ != 0)
				bin.ProtocolWriter.writeType(w, rank_);
		}
		{
		}
		{
			if(curTime_ != 0)
				bin.ProtocolWriter.writeType(w, curTime_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out defier_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out bydefier_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rank_)) return false;
			}
		}
		{
			isWin_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out curTime_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.defier_:
			{
				{
					bin.ProtocolWriter.writeType(w, defier_);
				}
			}
			return true;
			case (uint)FID.bydefier_:
			{
				{
					bin.ProtocolWriter.writeType(w, bydefier_);
				}
			}
			return true;
			case (uint)FID.rank_:
			{
				{
					bin.ProtocolWriter.writeType(w, rank_);
				}
			}
			return true;
			case (uint)FID.isWin_:
			{
				{
					bin.ProtocolWriter.writeType(w, isWin_);
				}
			}
			return true;
			case (uint)FID.curTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, curTime_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.defier_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out defier_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.bydefier_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out bydefier_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.rank_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rank_)) return false;
				}
			}
			return true;
			case (uint)FID.isWin_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isWin_)) return false;
				}
			}
			return true;
			case (uint)FID.curTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out curTime_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_BattleEmp
{
	public EmployeesBattleGroup empBattleGroup_;
	public uint[] employeeGroup1_ = new uint[0];
	public uint[] employeeGroup2_ = new uint[0];
	// member ids.
	public enum FID
	{
		empBattleGroup_ = 0,
		employeeGroup1_ = 1,
		employeeGroup2_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(empBattleGroup_==0?false:true);
		__fm__.writeBit((employeeGroup1_==null)?false:(employeeGroup1_.Length>0?true:false));
		__fm__.writeBit((employeeGroup2_==null)?false:(employeeGroup2_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)empBattleGroup_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(employeeGroup1_ != null && employeeGroup1_.Length > 0)
			{
				uint __len__ = (employeeGroup1_ == null)?0:(uint)employeeGroup1_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, employeeGroup1_[i]);
				}
			}
		}
		{
			if(employeeGroup2_ != null && employeeGroup2_.Length > 0)
			{
				uint __len__ = (employeeGroup2_ == null)?0:(uint)employeeGroup2_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, employeeGroup2_[i]);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 5) return false;
				empBattleGroup_ = (EmployeesBattleGroup)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				employeeGroup1_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out employeeGroup1_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				employeeGroup2_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out employeeGroup2_[i])) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.empBattleGroup_:
			{
				{
					byte __e__ = (byte)empBattleGroup_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.employeeGroup1_:
			{
				{
					uint __len__ = (employeeGroup1_ == null)?0:(uint)employeeGroup1_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, employeeGroup1_[i]);
					}
				}
			}
			return true;
			case (uint)FID.employeeGroup2_:
			{
				{
					uint __len__ = (employeeGroup2_ == null)?0:(uint)employeeGroup2_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, employeeGroup2_[i]);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.empBattleGroup_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 5) return false;
					empBattleGroup_ = (EmployeesBattleGroup)__e__;
				}
			}
			return true;
			case (uint)FID.employeeGroup1_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					employeeGroup1_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out employeeGroup1_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.employeeGroup2_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					employeeGroup2_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out employeeGroup2_[i])) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Gather
{
	public uint gatherId_;
	public GatherStateType flag_;
	public uint num_;
	// member ids.
	public enum FID
	{
		gatherId_ = 0,
		flag_ = 1,
		num_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(gatherId_==0?false:true);
		__fm__.writeBit(flag_==0?false:true);
		__fm__.writeBit(num_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(gatherId_ != 0)
				bin.ProtocolWriter.writeType(w, gatherId_);
		}
		{
			byte __e__ = (byte)flag_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(num_ != 0)
				bin.ProtocolWriter.writeType(w, num_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out gatherId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 4) return false;
				flag_ = (GatherStateType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out num_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.gatherId_:
			{
				{
					bin.ProtocolWriter.writeType(w, gatherId_);
				}
			}
			return true;
			case (uint)FID.flag_:
			{
				{
					byte __e__ = (byte)flag_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.num_:
			{
				{
					bin.ProtocolWriter.writeType(w, num_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.gatherId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out gatherId_)) return false;
				}
			}
			return true;
			case (uint)FID.flag_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 4) return false;
					flag_ = (GatherStateType)__e__;
				}
			}
			return true;
			case (uint)FID.num_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out num_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_DBPlayerData : COM_PlayerInst
{
	public int versionNumber_;
	public bool freeze_;
	public bool seal_;
	public uint signs_;
	public int sellIdMax_;
	public int push_;
	public int acceptRandQuestCounter_;
	public int submitRandQuestCounter_;
	public string pfid_ = "";
	public int itemStoreSize_;
	public int babyStoreSize_;
	public SGE_OrderInfo[] orders_ = new SGE_OrderInfo[0];
	public ulong loginTime_;
	public ulong logoutTime_;
	public uint genItemMaxGuid_;
	public uint gaterMaxNum_;
	public bool firstRollEmployeeCon_;
	public bool firstRollEmployeeDia_;
	public COM_EmployeeInst[] employees_ = new COM_EmployeeInst[0];
	public COM_Item[] itemStorage_ = new COM_Item[0];
	public COM_BabyInst[] babyStorage_ = new COM_BabyInst[0];
	public COM_BabyInst[] babies_ = new COM_BabyInst[0];
	public COM_Item[] bagItems_ = new COM_Item[0];
	public COM_QuestInst[] quests_ = new COM_QuestInst[0];
	public int[] completeQuests_ = new int[0];
	public COM_Item[] mineReward_ = new COM_Item[0];
	public COM_JJCBattleMsg[] jjcBattleMsg_ = new COM_JJCBattleMsg[0];
	public COM_ContactInfo[] friend_ = new COM_ContactInfo[0];
	public COM_ContactInfo[] blacklist_ = new COM_ContactInfo[0];
	public int[] achValues_ = new int[0];
	public COM_Achievement[] achievement_ = new COM_Achievement[0];
	public EmployeesBattleGroup empBattleGroup_;
	public uint[] employeeGroup1_ = new uint[0];
	public uint[] employeeGroup2_ = new uint[0];
	public COM_Gather[] gatherData_ = new COM_Gather[0];
	public uint[] compoundList_ = new uint[0];
	// member ids.
	public enum FID
	{
		versionNumber_ = 79,
		freeze_ = 80,
		seal_ = 81,
		signs_ = 82,
		sellIdMax_ = 83,
		push_ = 84,
		acceptRandQuestCounter_ = 85,
		submitRandQuestCounter_ = 86,
		pfid_ = 87,
		itemStoreSize_ = 88,
		babyStoreSize_ = 89,
		orders_ = 90,
		loginTime_ = 91,
		logoutTime_ = 92,
		genItemMaxGuid_ = 93,
		gaterMaxNum_ = 94,
		firstRollEmployeeCon_ = 95,
		firstRollEmployeeDia_ = 96,
		employees_ = 97,
		itemStorage_ = 98,
		babyStorage_ = 99,
		babies_ = 100,
		bagItems_ = 101,
		quests_ = 102,
		completeQuests_ = 103,
		mineReward_ = 104,
		jjcBattleMsg_ = 105,
		friend_ = 106,
		blacklist_ = 107,
		achValues_ = 108,
		achievement_ = 109,
		empBattleGroup_ = 110,
		employeeGroup1_ = 111,
		employeeGroup2_ = 112,
		gatherData_ = 113,
		compoundList_ = 114,
		MAX = 115,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[5]);
		__fm__.writeBit(versionNumber_==0?false:true);
		__fm__.writeBit(freeze_);
		__fm__.writeBit(seal_);
		__fm__.writeBit(signs_==0?false:true);
		__fm__.writeBit(sellIdMax_==0?false:true);
		__fm__.writeBit(push_==0?false:true);
		__fm__.writeBit(acceptRandQuestCounter_==0?false:true);
		__fm__.writeBit(submitRandQuestCounter_==0?false:true);
		__fm__.writeBit(pfid_.Length>0?true:false);
		__fm__.writeBit(itemStoreSize_==0?false:true);
		__fm__.writeBit(babyStoreSize_==0?false:true);
		__fm__.writeBit((orders_==null)?false:(orders_.Length>0?true:false));
		__fm__.writeBit(loginTime_==0?false:true);
		__fm__.writeBit(logoutTime_==0?false:true);
		__fm__.writeBit(genItemMaxGuid_==0?false:true);
		__fm__.writeBit(gaterMaxNum_==0?false:true);
		__fm__.writeBit(firstRollEmployeeCon_);
		__fm__.writeBit(firstRollEmployeeDia_);
		__fm__.writeBit((employees_==null)?false:(employees_.Length>0?true:false));
		__fm__.writeBit((itemStorage_==null)?false:(itemStorage_.Length>0?true:false));
		__fm__.writeBit((babyStorage_==null)?false:(babyStorage_.Length>0?true:false));
		__fm__.writeBit((babies_==null)?false:(babies_.Length>0?true:false));
		__fm__.writeBit((bagItems_==null)?false:(bagItems_.Length>0?true:false));
		__fm__.writeBit((quests_==null)?false:(quests_.Length>0?true:false));
		__fm__.writeBit((completeQuests_==null)?false:(completeQuests_.Length>0?true:false));
		__fm__.writeBit((mineReward_==null)?false:(mineReward_.Length>0?true:false));
		__fm__.writeBit((jjcBattleMsg_==null)?false:(jjcBattleMsg_.Length>0?true:false));
		__fm__.writeBit((friend_==null)?false:(friend_.Length>0?true:false));
		__fm__.writeBit((blacklist_==null)?false:(blacklist_.Length>0?true:false));
		__fm__.writeBit((achValues_==null)?false:(achValues_.Length>0?true:false));
		__fm__.writeBit((achievement_==null)?false:(achievement_.Length>0?true:false));
		__fm__.writeBit(empBattleGroup_==0?false:true);
		__fm__.writeBit((employeeGroup1_==null)?false:(employeeGroup1_.Length>0?true:false));
		__fm__.writeBit((employeeGroup2_==null)?false:(employeeGroup2_.Length>0?true:false));
		__fm__.writeBit((gatherData_==null)?false:(gatherData_.Length>0?true:false));
		__fm__.writeBit((compoundList_==null)?false:(compoundList_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(versionNumber_ != 0)
				bin.ProtocolWriter.writeType(w, versionNumber_);
		}
		{
		}
		{
		}
		{
			if(signs_ != 0)
				bin.ProtocolWriter.writeType(w, signs_);
		}
		{
			if(sellIdMax_ != 0)
				bin.ProtocolWriter.writeType(w, sellIdMax_);
		}
		{
			if(push_ != 0)
				bin.ProtocolWriter.writeType(w, push_);
		}
		{
			if(acceptRandQuestCounter_ != 0)
				bin.ProtocolWriter.writeType(w, acceptRandQuestCounter_);
		}
		{
			if(submitRandQuestCounter_ != 0)
				bin.ProtocolWriter.writeType(w, submitRandQuestCounter_);
		}
		{
			if(pfid_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfid_);
		}
		{
			if(itemStoreSize_ != 0)
				bin.ProtocolWriter.writeType(w, itemStoreSize_);
		}
		{
			if(babyStoreSize_ != 0)
				bin.ProtocolWriter.writeType(w, babyStoreSize_);
		}
		{
			if(orders_ != null && orders_.Length > 0)
			{
				uint __len__ = (orders_ == null)?0:(uint)orders_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					orders_[i].serialize(w);
				}
			}
		}
		{
			if(loginTime_ != 0)
				bin.ProtocolWriter.writeType(w, loginTime_);
		}
		{
			if(logoutTime_ != 0)
				bin.ProtocolWriter.writeType(w, logoutTime_);
		}
		{
			if(genItemMaxGuid_ != 0)
				bin.ProtocolWriter.writeType(w, genItemMaxGuid_);
		}
		{
			if(gaterMaxNum_ != 0)
				bin.ProtocolWriter.writeType(w, gaterMaxNum_);
		}
		{
		}
		{
		}
		{
			if(employees_ != null && employees_.Length > 0)
			{
				uint __len__ = (employees_ == null)?0:(uint)employees_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					employees_[i].serialize(w);
				}
			}
		}
		{
			if(itemStorage_ != null && itemStorage_.Length > 0)
			{
				uint __len__ = (itemStorage_ == null)?0:(uint)itemStorage_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					itemStorage_[i].serialize(w);
				}
			}
		}
		{
			if(babyStorage_ != null && babyStorage_.Length > 0)
			{
				uint __len__ = (babyStorage_ == null)?0:(uint)babyStorage_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					babyStorage_[i].serialize(w);
				}
			}
		}
		{
			if(babies_ != null && babies_.Length > 0)
			{
				uint __len__ = (babies_ == null)?0:(uint)babies_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					babies_[i].serialize(w);
				}
			}
		}
		{
			if(bagItems_ != null && bagItems_.Length > 0)
			{
				uint __len__ = (bagItems_ == null)?0:(uint)bagItems_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bagItems_[i].serialize(w);
				}
			}
		}
		{
			if(quests_ != null && quests_.Length > 0)
			{
				uint __len__ = (quests_ == null)?0:(uint)quests_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					quests_[i].serialize(w);
				}
			}
		}
		{
			if(completeQuests_ != null && completeQuests_.Length > 0)
			{
				uint __len__ = (completeQuests_ == null)?0:(uint)completeQuests_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, completeQuests_[i]);
				}
			}
		}
		{
			if(mineReward_ != null && mineReward_.Length > 0)
			{
				uint __len__ = (mineReward_ == null)?0:(uint)mineReward_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					mineReward_[i].serialize(w);
				}
			}
		}
		{
			if(jjcBattleMsg_ != null && jjcBattleMsg_.Length > 0)
			{
				uint __len__ = (jjcBattleMsg_ == null)?0:(uint)jjcBattleMsg_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					jjcBattleMsg_[i].serialize(w);
				}
			}
		}
		{
			if(friend_ != null && friend_.Length > 0)
			{
				uint __len__ = (friend_ == null)?0:(uint)friend_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					friend_[i].serialize(w);
				}
			}
		}
		{
			if(blacklist_ != null && blacklist_.Length > 0)
			{
				uint __len__ = (blacklist_ == null)?0:(uint)blacklist_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					blacklist_[i].serialize(w);
				}
			}
		}
		{
			if(achValues_ != null && achValues_.Length > 0)
			{
				uint __len__ = (achValues_ == null)?0:(uint)achValues_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, achValues_[i]);
				}
			}
		}
		{
			if(achievement_ != null && achievement_.Length > 0)
			{
				uint __len__ = (achievement_ == null)?0:(uint)achievement_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					achievement_[i].serialize(w);
				}
			}
		}
		{
			byte __e__ = (byte)empBattleGroup_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(employeeGroup1_ != null && employeeGroup1_.Length > 0)
			{
				uint __len__ = (employeeGroup1_ == null)?0:(uint)employeeGroup1_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, employeeGroup1_[i]);
				}
			}
		}
		{
			if(employeeGroup2_ != null && employeeGroup2_.Length > 0)
			{
				uint __len__ = (employeeGroup2_ == null)?0:(uint)employeeGroup2_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, employeeGroup2_[i]);
				}
			}
		}
		{
			if(gatherData_ != null && gatherData_.Length > 0)
			{
				uint __len__ = (gatherData_ == null)?0:(uint)gatherData_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					gatherData_[i].serialize(w);
				}
			}
		}
		{
			if(compoundList_ != null && compoundList_.Length > 0)
			{
				uint __len__ = (compoundList_ == null)?0:(uint)compoundList_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, compoundList_[i]);
				}
			}
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 5)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out versionNumber_)) return false;
			}
		}
		{
			freeze_ = __fm__.readBit();
		}
		{
			seal_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out signs_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sellIdMax_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out push_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out acceptRandQuestCounter_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out submitRandQuestCounter_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemStoreSize_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out babyStoreSize_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				orders_ = new SGE_OrderInfo[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					orders_[i] = new SGE_OrderInfo();
					if(!orders_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out loginTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out logoutTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out genItemMaxGuid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out gaterMaxNum_)) return false;
			}
		}
		{
			firstRollEmployeeCon_ = __fm__.readBit();
		}
		{
			firstRollEmployeeDia_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				employees_ = new COM_EmployeeInst[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					employees_[i] = new COM_EmployeeInst();
					if(!employees_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				itemStorage_ = new COM_Item[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					itemStorage_[i] = new COM_Item();
					if(!itemStorage_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				babyStorage_ = new COM_BabyInst[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					babyStorage_[i] = new COM_BabyInst();
					if(!babyStorage_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				babies_ = new COM_BabyInst[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					babies_[i] = new COM_BabyInst();
					if(!babies_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				bagItems_ = new COM_Item[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					bagItems_[i] = new COM_Item();
					if(!bagItems_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				quests_ = new COM_QuestInst[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					quests_[i] = new COM_QuestInst();
					if(!quests_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				completeQuests_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out completeQuests_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				mineReward_ = new COM_Item[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					mineReward_[i] = new COM_Item();
					if(!mineReward_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				jjcBattleMsg_ = new COM_JJCBattleMsg[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					jjcBattleMsg_[i] = new COM_JJCBattleMsg();
					if(!jjcBattleMsg_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				friend_ = new COM_ContactInfo[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					friend_[i] = new COM_ContactInfo();
					if(!friend_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				blacklist_ = new COM_ContactInfo[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					blacklist_[i] = new COM_ContactInfo();
					if(!blacklist_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				achValues_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out achValues_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				achievement_ = new COM_Achievement[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					achievement_[i] = new COM_Achievement();
					if(!achievement_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 5) return false;
				empBattleGroup_ = (EmployeesBattleGroup)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				employeeGroup1_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out employeeGroup1_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				employeeGroup2_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out employeeGroup2_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				gatherData_ = new COM_Gather[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					gatherData_[i] = new COM_Gather();
					if(!gatherData_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				compoundList_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out compoundList_[i])) return false;
				}
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.versionNumber_:
			{
				{
					bin.ProtocolWriter.writeType(w, versionNumber_);
				}
			}
			return true;
			case (uint)FID.freeze_:
			{
				{
					bin.ProtocolWriter.writeType(w, freeze_);
				}
			}
			return true;
			case (uint)FID.seal_:
			{
				{
					bin.ProtocolWriter.writeType(w, seal_);
				}
			}
			return true;
			case (uint)FID.signs_:
			{
				{
					bin.ProtocolWriter.writeType(w, signs_);
				}
			}
			return true;
			case (uint)FID.sellIdMax_:
			{
				{
					bin.ProtocolWriter.writeType(w, sellIdMax_);
				}
			}
			return true;
			case (uint)FID.push_:
			{
				{
					bin.ProtocolWriter.writeType(w, push_);
				}
			}
			return true;
			case (uint)FID.acceptRandQuestCounter_:
			{
				{
					bin.ProtocolWriter.writeType(w, acceptRandQuestCounter_);
				}
			}
			return true;
			case (uint)FID.submitRandQuestCounter_:
			{
				{
					bin.ProtocolWriter.writeType(w, submitRandQuestCounter_);
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfid_);
				}
			}
			return true;
			case (uint)FID.itemStoreSize_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemStoreSize_);
				}
			}
			return true;
			case (uint)FID.babyStoreSize_:
			{
				{
					bin.ProtocolWriter.writeType(w, babyStoreSize_);
				}
			}
			return true;
			case (uint)FID.orders_:
			{
				{
					uint __len__ = (orders_ == null)?0:(uint)orders_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						orders_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.loginTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, loginTime_);
				}
			}
			return true;
			case (uint)FID.logoutTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, logoutTime_);
				}
			}
			return true;
			case (uint)FID.genItemMaxGuid_:
			{
				{
					bin.ProtocolWriter.writeType(w, genItemMaxGuid_);
				}
			}
			return true;
			case (uint)FID.gaterMaxNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, gaterMaxNum_);
				}
			}
			return true;
			case (uint)FID.firstRollEmployeeCon_:
			{
				{
					bin.ProtocolWriter.writeType(w, firstRollEmployeeCon_);
				}
			}
			return true;
			case (uint)FID.firstRollEmployeeDia_:
			{
				{
					bin.ProtocolWriter.writeType(w, firstRollEmployeeDia_);
				}
			}
			return true;
			case (uint)FID.employees_:
			{
				{
					uint __len__ = (employees_ == null)?0:(uint)employees_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						employees_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.itemStorage_:
			{
				{
					uint __len__ = (itemStorage_ == null)?0:(uint)itemStorage_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						itemStorage_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.babyStorage_:
			{
				{
					uint __len__ = (babyStorage_ == null)?0:(uint)babyStorage_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						babyStorage_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.babies_:
			{
				{
					uint __len__ = (babies_ == null)?0:(uint)babies_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						babies_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.bagItems_:
			{
				{
					uint __len__ = (bagItems_ == null)?0:(uint)bagItems_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bagItems_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.quests_:
			{
				{
					uint __len__ = (quests_ == null)?0:(uint)quests_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						quests_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.completeQuests_:
			{
				{
					uint __len__ = (completeQuests_ == null)?0:(uint)completeQuests_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, completeQuests_[i]);
					}
				}
			}
			return true;
			case (uint)FID.mineReward_:
			{
				{
					uint __len__ = (mineReward_ == null)?0:(uint)mineReward_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						mineReward_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.jjcBattleMsg_:
			{
				{
					uint __len__ = (jjcBattleMsg_ == null)?0:(uint)jjcBattleMsg_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						jjcBattleMsg_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.friend_:
			{
				{
					uint __len__ = (friend_ == null)?0:(uint)friend_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						friend_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.blacklist_:
			{
				{
					uint __len__ = (blacklist_ == null)?0:(uint)blacklist_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						blacklist_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.achValues_:
			{
				{
					uint __len__ = (achValues_ == null)?0:(uint)achValues_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, achValues_[i]);
					}
				}
			}
			return true;
			case (uint)FID.achievement_:
			{
				{
					uint __len__ = (achievement_ == null)?0:(uint)achievement_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						achievement_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.empBattleGroup_:
			{
				{
					byte __e__ = (byte)empBattleGroup_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.employeeGroup1_:
			{
				{
					uint __len__ = (employeeGroup1_ == null)?0:(uint)employeeGroup1_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, employeeGroup1_[i]);
					}
				}
			}
			return true;
			case (uint)FID.employeeGroup2_:
			{
				{
					uint __len__ = (employeeGroup2_ == null)?0:(uint)employeeGroup2_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, employeeGroup2_[i]);
					}
				}
			}
			return true;
			case (uint)FID.gatherData_:
			{
				{
					uint __len__ = (gatherData_ == null)?0:(uint)gatherData_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						gatherData_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.compoundList_:
			{
				{
					uint __len__ = (compoundList_ == null)?0:(uint)compoundList_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, compoundList_[i]);
					}
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.versionNumber_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out versionNumber_)) return false;
				}
			}
			return true;
			case (uint)FID.freeze_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out freeze_)) return false;
				}
			}
			return true;
			case (uint)FID.seal_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out seal_)) return false;
				}
			}
			return true;
			case (uint)FID.signs_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out signs_)) return false;
				}
			}
			return true;
			case (uint)FID.sellIdMax_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sellIdMax_)) return false;
				}
			}
			return true;
			case (uint)FID.push_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out push_)) return false;
				}
			}
			return true;
			case (uint)FID.acceptRandQuestCounter_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out acceptRandQuestCounter_)) return false;
				}
			}
			return true;
			case (uint)FID.submitRandQuestCounter_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out submitRandQuestCounter_)) return false;
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.itemStoreSize_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemStoreSize_)) return false;
				}
			}
			return true;
			case (uint)FID.babyStoreSize_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out babyStoreSize_)) return false;
				}
			}
			return true;
			case (uint)FID.orders_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					orders_ = new SGE_OrderInfo[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						orders_[i] = new SGE_OrderInfo();
						if(!orders_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.loginTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out loginTime_)) return false;
				}
			}
			return true;
			case (uint)FID.logoutTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out logoutTime_)) return false;
				}
			}
			return true;
			case (uint)FID.genItemMaxGuid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out genItemMaxGuid_)) return false;
				}
			}
			return true;
			case (uint)FID.gaterMaxNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out gaterMaxNum_)) return false;
				}
			}
			return true;
			case (uint)FID.firstRollEmployeeCon_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out firstRollEmployeeCon_)) return false;
				}
			}
			return true;
			case (uint)FID.firstRollEmployeeDia_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out firstRollEmployeeDia_)) return false;
				}
			}
			return true;
			case (uint)FID.employees_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					employees_ = new COM_EmployeeInst[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						employees_[i] = new COM_EmployeeInst();
						if(!employees_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.itemStorage_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					itemStorage_ = new COM_Item[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						itemStorage_[i] = new COM_Item();
						if(!itemStorage_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.babyStorage_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					babyStorage_ = new COM_BabyInst[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						babyStorage_[i] = new COM_BabyInst();
						if(!babyStorage_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.babies_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					babies_ = new COM_BabyInst[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						babies_[i] = new COM_BabyInst();
						if(!babies_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.bagItems_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					bagItems_ = new COM_Item[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						bagItems_[i] = new COM_Item();
						if(!bagItems_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.quests_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					quests_ = new COM_QuestInst[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						quests_[i] = new COM_QuestInst();
						if(!quests_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.completeQuests_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					completeQuests_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out completeQuests_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.mineReward_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					mineReward_ = new COM_Item[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						mineReward_[i] = new COM_Item();
						if(!mineReward_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.jjcBattleMsg_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					jjcBattleMsg_ = new COM_JJCBattleMsg[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						jjcBattleMsg_[i] = new COM_JJCBattleMsg();
						if(!jjcBattleMsg_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.friend_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					friend_ = new COM_ContactInfo[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						friend_[i] = new COM_ContactInfo();
						if(!friend_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.blacklist_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					blacklist_ = new COM_ContactInfo[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						blacklist_[i] = new COM_ContactInfo();
						if(!blacklist_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.achValues_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					achValues_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out achValues_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.achievement_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					achievement_ = new COM_Achievement[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						achievement_[i] = new COM_Achievement();
						if(!achievement_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.empBattleGroup_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 5) return false;
					empBattleGroup_ = (EmployeesBattleGroup)__e__;
				}
			}
			return true;
			case (uint)FID.employeeGroup1_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					employeeGroup1_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out employeeGroup1_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.employeeGroup2_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					employeeGroup2_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out employeeGroup2_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.gatherData_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					gatherData_ = new COM_Gather[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						gatherData_[i] = new COM_Gather();
						if(!gatherData_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.compoundList_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					compoundList_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out compoundList_[i])) return false;
					}
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_BattleOverClearing
{
	public bool isFly_;
	public int playExp_;
	public uint playLevel_;
	public uint playFree_;
	public int pvpJJCGrade_;
	public int money_;
	public uint babyExp_;
	public uint babyLevel_;
	public COM_DropItem[] items_ = new COM_DropItem[0];
	public COM_Skill[] skills_ = new COM_Skill[0];
	// member ids.
	public enum FID
	{
		isFly_ = 0,
		playExp_ = 1,
		playLevel_ = 2,
		playFree_ = 3,
		pvpJJCGrade_ = 4,
		money_ = 5,
		babyExp_ = 6,
		babyLevel_ = 7,
		items_ = 8,
		skills_ = 9,
		MAX = 10,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(isFly_);
		__fm__.writeBit(playExp_==0?false:true);
		__fm__.writeBit(playLevel_==0?false:true);
		__fm__.writeBit(playFree_==0?false:true);
		__fm__.writeBit(pvpJJCGrade_==0?false:true);
		__fm__.writeBit(money_==0?false:true);
		__fm__.writeBit(babyExp_==0?false:true);
		__fm__.writeBit(babyLevel_==0?false:true);
		__fm__.writeBit((items_==null)?false:(items_.Length>0?true:false));
		__fm__.writeBit((skills_==null)?false:(skills_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
		}
		{
			if(playExp_ != 0)
				bin.ProtocolWriter.writeType(w, playExp_);
		}
		{
			if(playLevel_ != 0)
				bin.ProtocolWriter.writeType(w, playLevel_);
		}
		{
			if(playFree_ != 0)
				bin.ProtocolWriter.writeType(w, playFree_);
		}
		{
			if(pvpJJCGrade_ != 0)
				bin.ProtocolWriter.writeType(w, pvpJJCGrade_);
		}
		{
			if(money_ != 0)
				bin.ProtocolWriter.writeType(w, money_);
		}
		{
			if(babyExp_ != 0)
				bin.ProtocolWriter.writeType(w, babyExp_);
		}
		{
			if(babyLevel_ != 0)
				bin.ProtocolWriter.writeType(w, babyLevel_);
		}
		{
			if(items_ != null && items_.Length > 0)
			{
				uint __len__ = (items_ == null)?0:(uint)items_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					items_[i].serialize(w);
				}
			}
		}
		{
			if(skills_ != null && skills_.Length > 0)
			{
				uint __len__ = (skills_ == null)?0:(uint)skills_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					skills_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			isFly_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playExp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playFree_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pvpJJCGrade_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out money_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out babyExp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out babyLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				items_ = new COM_DropItem[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					items_[i] = new COM_DropItem();
					if(!items_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				skills_ = new COM_Skill[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					skills_[i] = new COM_Skill();
					if(!skills_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.isFly_:
			{
				{
					bin.ProtocolWriter.writeType(w, isFly_);
				}
			}
			return true;
			case (uint)FID.playExp_:
			{
				{
					bin.ProtocolWriter.writeType(w, playExp_);
				}
			}
			return true;
			case (uint)FID.playLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, playLevel_);
				}
			}
			return true;
			case (uint)FID.playFree_:
			{
				{
					bin.ProtocolWriter.writeType(w, playFree_);
				}
			}
			return true;
			case (uint)FID.pvpJJCGrade_:
			{
				{
					bin.ProtocolWriter.writeType(w, pvpJJCGrade_);
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					bin.ProtocolWriter.writeType(w, money_);
				}
			}
			return true;
			case (uint)FID.babyExp_:
			{
				{
					bin.ProtocolWriter.writeType(w, babyExp_);
				}
			}
			return true;
			case (uint)FID.babyLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, babyLevel_);
				}
			}
			return true;
			case (uint)FID.items_:
			{
				{
					uint __len__ = (items_ == null)?0:(uint)items_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						items_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.skills_:
			{
				{
					uint __len__ = (skills_ == null)?0:(uint)skills_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						skills_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.isFly_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isFly_)) return false;
				}
			}
			return true;
			case (uint)FID.playExp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playExp_)) return false;
				}
			}
			return true;
			case (uint)FID.playLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.playFree_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playFree_)) return false;
				}
			}
			return true;
			case (uint)FID.pvpJJCGrade_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pvpJJCGrade_)) return false;
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out money_)) return false;
				}
			}
			return true;
			case (uint)FID.babyExp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out babyExp_)) return false;
				}
			}
			return true;
			case (uint)FID.babyLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out babyLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.items_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					items_ = new COM_DropItem[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						items_[i] = new COM_DropItem();
						if(!items_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.skills_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					skills_ = new COM_Skill[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						skills_[i] = new COM_Skill();
						if(!skills_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Addprop
{
	public PropertyType type_;
	public uint uVal_;
	// member ids.
	public enum FID
	{
		type_ = 0,
		uVal_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(type_==0?false:true);
		__fm__.writeBit(uVal_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(uVal_ != 0)
				bin.ProtocolWriter.writeType(w, uVal_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 63) return false;
				type_ = (PropertyType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out uVal_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.uVal_:
			{
				{
					bin.ProtocolWriter.writeType(w, uVal_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 63) return false;
					type_ = (PropertyType)__e__;
				}
			}
			return true;
			case (uint)FID.uVal_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out uVal_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ExpendItem
{
	public uint itemInstId_;
	public uint num_;
	// member ids.
	public enum FID
	{
		itemInstId_ = 0,
		num_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(itemInstId_==0?false:true);
		__fm__.writeBit(num_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(itemInstId_ != 0)
				bin.ProtocolWriter.writeType(w, itemInstId_);
		}
		{
			if(num_ != 0)
				bin.ProtocolWriter.writeType(w, num_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemInstId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out num_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.itemInstId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemInstId_);
				}
			}
			return true;
			case (uint)FID.num_:
			{
				{
					bin.ProtocolWriter.writeType(w, num_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.itemInstId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemInstId_)) return false;
				}
			}
			return true;
			case (uint)FID.num_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out num_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Chat
{
	public ChatKind ck_;
	public bool isAudio_;
	public string content_ = "";
	public int audioTime_;
	public byte[] audio_ = new byte[0];
	public bool isMe;
	public int teamId_;
	public TeamType teamType_;
	public short teamMinLevel_;
	public short teamMaxLevel_;
	public string teamName_ = "";
	// member ids.
	public enum FID
	{
		ck_ = 0,
		isAudio_ = 1,
		content_ = 2,
		audioTime_ = 3,
		audio_ = 4,
		isMe = 5,
		teamId_ = 6,
		teamType_ = 7,
		teamMinLevel_ = 8,
		teamMaxLevel_ = 9,
		teamName_ = 10,
		MAX = 11,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(ck_==0?false:true);
		__fm__.writeBit(isAudio_);
		__fm__.writeBit(content_.Length>0?true:false);
		__fm__.writeBit(audioTime_==0?false:true);
		__fm__.writeBit((audio_==null)?false:(audio_.Length>0?true:false));
		__fm__.writeBit(isMe);
		__fm__.writeBit(teamId_==0?false:true);
		__fm__.writeBit(teamType_==0?false:true);
		__fm__.writeBit(teamMinLevel_==0?false:true);
		__fm__.writeBit(teamMaxLevel_==0?false:true);
		__fm__.writeBit(teamName_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)ck_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
		}
		{
			if(content_.Length > 0)
				bin.ProtocolWriter.writeType(w, content_);
		}
		{
			if(audioTime_ != 0)
				bin.ProtocolWriter.writeType(w, audioTime_);
		}
		{
			if(audio_ != null && audio_.Length > 0)
			{
				uint __len__ = (audio_ == null)?0:(uint)audio_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, audio_[i]);
				}
			}
		}
		{
		}
		{
			if(teamId_ != 0)
				bin.ProtocolWriter.writeType(w, teamId_);
		}
		{
			byte __e__ = (byte)teamType_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(teamMinLevel_ != 0)
				bin.ProtocolWriter.writeType(w, teamMinLevel_);
		}
		{
			if(teamMaxLevel_ != 0)
				bin.ProtocolWriter.writeType(w, teamMaxLevel_);
		}
		{
			if(teamName_.Length > 0)
				bin.ProtocolWriter.writeType(w, teamName_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 8) return false;
				ck_ = (ChatKind)__e__;
			}
		}
		{
			isAudio_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out content_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out audioTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				audio_ = new byte[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out audio_[i])) return false;
				}
			}
		}
		{
			isMe = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out teamId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				teamType_ = (TeamType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out teamMinLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out teamMaxLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out teamName_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.ck_:
			{
				{
					byte __e__ = (byte)ck_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.isAudio_:
			{
				{
					bin.ProtocolWriter.writeType(w, isAudio_);
				}
			}
			return true;
			case (uint)FID.content_:
			{
				{
					bin.ProtocolWriter.writeType(w, content_);
				}
			}
			return true;
			case (uint)FID.audioTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, audioTime_);
				}
			}
			return true;
			case (uint)FID.audio_:
			{
				{
					uint __len__ = (audio_ == null)?0:(uint)audio_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, audio_[i]);
					}
				}
			}
			return true;
			case (uint)FID.isMe:
			{
				{
					bin.ProtocolWriter.writeType(w, isMe);
				}
			}
			return true;
			case (uint)FID.teamId_:
			{
				{
					bin.ProtocolWriter.writeType(w, teamId_);
				}
			}
			return true;
			case (uint)FID.teamType_:
			{
				{
					byte __e__ = (byte)teamType_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.teamMinLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, teamMinLevel_);
				}
			}
			return true;
			case (uint)FID.teamMaxLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, teamMaxLevel_);
				}
			}
			return true;
			case (uint)FID.teamName_:
			{
				{
					bin.ProtocolWriter.writeType(w, teamName_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.ck_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 8) return false;
					ck_ = (ChatKind)__e__;
				}
			}
			return true;
			case (uint)FID.isAudio_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isAudio_)) return false;
				}
			}
			return true;
			case (uint)FID.content_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out content_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.audioTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out audioTime_)) return false;
				}
			}
			return true;
			case (uint)FID.audio_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					audio_ = new byte[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out audio_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.isMe:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isMe)) return false;
				}
			}
			return true;
			case (uint)FID.teamId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out teamId_)) return false;
				}
			}
			return true;
			case (uint)FID.teamType_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					teamType_ = (TeamType)__e__;
				}
			}
			return true;
			case (uint)FID.teamMinLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out teamMinLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.teamMaxLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out teamMaxLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.teamName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out teamName_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ChatInfo : COM_Chat
{
	public int audioId_;
	public ushort assetId_;
	public string playerName_ = "";
	public string guildName_ = "";
	public uint instId_;
	// member ids.
	public enum FID
	{
		audioId_ = 11,
		assetId_ = 12,
		playerName_ = 13,
		guildName_ = 14,
		instId_ = 15,
		MAX = 16,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(audioId_==0?false:true);
		__fm__.writeBit(assetId_==0?false:true);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(guildName_.Length>0?true:false);
		__fm__.writeBit(instId_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(audioId_ != 0)
				bin.ProtocolWriter.writeType(w, audioId_);
		}
		{
			if(assetId_ != 0)
				bin.ProtocolWriter.writeType(w, assetId_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(guildName_.Length > 0)
				bin.ProtocolWriter.writeType(w, guildName_);
		}
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out audioId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.audioId_:
			{
				{
					bin.ProtocolWriter.writeType(w, audioId_);
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					bin.ProtocolWriter.writeType(w, assetId_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildName_);
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.audioId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out audioId_)) return false;
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class COM_EndlessStair
{
	public uint rank_;
	public string name_ = "";
	public JobType job_;
	public uint joblevel_;
	public int assetId_;
	public uint level_;
	public float rivalTime_;
	public int rivalNum_;
	// member ids.
	public enum FID
	{
		rank_ = 0,
		name_ = 1,
		job_ = 2,
		joblevel_ = 3,
		assetId_ = 4,
		level_ = 5,
		rivalTime_ = 6,
		rivalNum_ = 7,
		MAX = 8,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(rank_==0?false:true);
		__fm__.writeBit(name_.Length>0?true:false);
		__fm__.writeBit(job_==0?false:true);
		__fm__.writeBit(joblevel_==0?false:true);
		__fm__.writeBit(assetId_==0?false:true);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(rivalTime_==0?false:true);
		__fm__.writeBit(rivalNum_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(rank_ != 0)
				bin.ProtocolWriter.writeType(w, rank_);
		}
		{
			if(name_.Length > 0)
				bin.ProtocolWriter.writeType(w, name_);
		}
		{
			byte __e__ = (byte)job_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(joblevel_ != 0)
				bin.ProtocolWriter.writeType(w, joblevel_);
		}
		{
			if(assetId_ != 0)
				bin.ProtocolWriter.writeType(w, assetId_);
		}
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(rivalTime_ != 0)
				bin.ProtocolWriter.writeType(w, rivalTime_);
		}
		{
			if(rivalNum_ != 0)
				bin.ProtocolWriter.writeType(w, rivalNum_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rank_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
				job_ = (JobType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out joblevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rivalTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rivalNum_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.rank_:
			{
				{
					bin.ProtocolWriter.writeType(w, rank_);
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					bin.ProtocolWriter.writeType(w, name_);
				}
			}
			return true;
			case (uint)FID.job_:
			{
				{
					byte __e__ = (byte)job_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.joblevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, joblevel_);
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					bin.ProtocolWriter.writeType(w, assetId_);
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.rivalTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, rivalTime_);
				}
			}
			return true;
			case (uint)FID.rivalNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, rivalNum_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.rank_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rank_)) return false;
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.job_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 12) return false;
					job_ = (JobType)__e__;
				}
			}
			return true;
			case (uint)FID.joblevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out joblevel_)) return false;
				}
			}
			return true;
			case (uint)FID.assetId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out assetId_)) return false;
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.rivalTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rivalTime_)) return false;
				}
			}
			return true;
			case (uint)FID.rivalNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rivalNum_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_BabyRankData
{
	public uint instId_;
	public int rank_;
	public string name_ = "";
	public string ownerName_ = "";
	public int ff_;
	// member ids.
	public enum FID
	{
		instId_ = 0,
		rank_ = 1,
		name_ = 2,
		ownerName_ = 3,
		ff_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(instId_==0?false:true);
		__fm__.writeBit(rank_==0?false:true);
		__fm__.writeBit(name_.Length>0?true:false);
		__fm__.writeBit(ownerName_.Length>0?true:false);
		__fm__.writeBit(ff_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
		{
			if(rank_ != 0)
				bin.ProtocolWriter.writeType(w, rank_);
		}
		{
			if(name_.Length > 0)
				bin.ProtocolWriter.writeType(w, name_);
		}
		{
			if(ownerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, ownerName_);
		}
		{
			if(ff_ != 0)
				bin.ProtocolWriter.writeType(w, ff_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rank_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ownerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ff_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
			case (uint)FID.rank_:
			{
				{
					bin.ProtocolWriter.writeType(w, rank_);
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					bin.ProtocolWriter.writeType(w, name_);
				}
			}
			return true;
			case (uint)FID.ownerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, ownerName_);
				}
			}
			return true;
			case (uint)FID.ff_:
			{
				{
					bin.ProtocolWriter.writeType(w, ff_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
			case (uint)FID.rank_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rank_)) return false;
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.ownerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ownerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.ff_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ff_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_EmployeeRankData
{
	public uint instId_;
	public int rank_;
	public string name_ = "";
	public string ownerName_ = "";
	public int ff_;
	// member ids.
	public enum FID
	{
		instId_ = 0,
		rank_ = 1,
		name_ = 2,
		ownerName_ = 3,
		ff_ = 4,
		MAX = 5,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(instId_==0?false:true);
		__fm__.writeBit(rank_==0?false:true);
		__fm__.writeBit(name_.Length>0?true:false);
		__fm__.writeBit(ownerName_.Length>0?true:false);
		__fm__.writeBit(ff_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(instId_ != 0)
				bin.ProtocolWriter.writeType(w, instId_);
		}
		{
			if(rank_ != 0)
				bin.ProtocolWriter.writeType(w, rank_);
		}
		{
			if(name_.Length > 0)
				bin.ProtocolWriter.writeType(w, name_);
		}
		{
			if(ownerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, ownerName_);
		}
		{
			if(ff_ != 0)
				bin.ProtocolWriter.writeType(w, ff_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out instId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rank_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ownerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ff_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.instId_:
			{
				{
					bin.ProtocolWriter.writeType(w, instId_);
				}
			}
			return true;
			case (uint)FID.rank_:
			{
				{
					bin.ProtocolWriter.writeType(w, rank_);
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					bin.ProtocolWriter.writeType(w, name_);
				}
			}
			return true;
			case (uint)FID.ownerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, ownerName_);
				}
			}
			return true;
			case (uint)FID.ff_:
			{
				{
					bin.ProtocolWriter.writeType(w, ff_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.instId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out instId_)) return false;
				}
			}
			return true;
			case (uint)FID.rank_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rank_)) return false;
				}
			}
			return true;
			case (uint)FID.name_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out name_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.ownerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ownerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.ff_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ff_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_MailItem
{
	public int itemId_;
	public int itemStack_;
	// member ids.
	public enum FID
	{
		itemId_ = 0,
		itemStack_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(itemStack_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(itemStack_ != 0)
				bin.ProtocolWriter.writeType(w, itemStack_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemStack_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.itemStack_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemStack_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.itemStack_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemStack_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Mail
{
	public int mailId_;
	public MailType mailType_;
	public long timestamp_;
	public string sendPlayerName_ = "";
	public string recvPlayerName_ = "";
	public string title_ = "";
	public string content_ = "";
	public int money_;
	public int diamond_;
	public COM_MailItem[] items_ = new COM_MailItem[0];
	public bool isRead_;
	// member ids.
	public enum FID
	{
		mailId_ = 0,
		mailType_ = 1,
		timestamp_ = 2,
		sendPlayerName_ = 3,
		recvPlayerName_ = 4,
		title_ = 5,
		content_ = 6,
		money_ = 7,
		diamond_ = 8,
		items_ = 9,
		isRead_ = 10,
		MAX = 11,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(mailId_==0?false:true);
		__fm__.writeBit(mailType_==0?false:true);
		__fm__.writeBit(timestamp_==0?false:true);
		__fm__.writeBit(sendPlayerName_.Length>0?true:false);
		__fm__.writeBit(recvPlayerName_.Length>0?true:false);
		__fm__.writeBit(title_.Length>0?true:false);
		__fm__.writeBit(content_.Length>0?true:false);
		__fm__.writeBit(money_==0?false:true);
		__fm__.writeBit(diamond_==0?false:true);
		__fm__.writeBit((items_==null)?false:(items_.Length>0?true:false));
		__fm__.writeBit(isRead_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(mailId_ != 0)
				bin.ProtocolWriter.writeType(w, mailId_);
		}
		{
			byte __e__ = (byte)mailType_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(timestamp_ != 0)
				bin.ProtocolWriter.writeType(w, timestamp_);
		}
		{
			if(sendPlayerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, sendPlayerName_);
		}
		{
			if(recvPlayerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, recvPlayerName_);
		}
		{
			if(title_.Length > 0)
				bin.ProtocolWriter.writeType(w, title_);
		}
		{
			if(content_.Length > 0)
				bin.ProtocolWriter.writeType(w, content_);
		}
		{
			if(money_ != 0)
				bin.ProtocolWriter.writeType(w, money_);
		}
		{
			if(diamond_ != 0)
				bin.ProtocolWriter.writeType(w, diamond_);
		}
		{
			if(items_ != null && items_.Length > 0)
			{
				uint __len__ = (items_ == null)?0:(uint)items_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					items_[i].serialize(w);
				}
			}
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mailId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 2) return false;
				mailType_ = (MailType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out timestamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sendPlayerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out recvPlayerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out title_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out content_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out money_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				items_ = new COM_MailItem[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					items_[i] = new COM_MailItem();
					if(!items_[i].deserialize(r)) return false;
				}
			}
		}
		{
			isRead_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.mailId_:
			{
				{
					bin.ProtocolWriter.writeType(w, mailId_);
				}
			}
			return true;
			case (uint)FID.mailType_:
			{
				{
					byte __e__ = (byte)mailType_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.timestamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, timestamp_);
				}
			}
			return true;
			case (uint)FID.sendPlayerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, sendPlayerName_);
				}
			}
			return true;
			case (uint)FID.recvPlayerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, recvPlayerName_);
				}
			}
			return true;
			case (uint)FID.title_:
			{
				{
					bin.ProtocolWriter.writeType(w, title_);
				}
			}
			return true;
			case (uint)FID.content_:
			{
				{
					bin.ProtocolWriter.writeType(w, content_);
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					bin.ProtocolWriter.writeType(w, money_);
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					bin.ProtocolWriter.writeType(w, diamond_);
				}
			}
			return true;
			case (uint)FID.items_:
			{
				{
					uint __len__ = (items_ == null)?0:(uint)items_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						items_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.isRead_:
			{
				{
					bin.ProtocolWriter.writeType(w, isRead_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.mailId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mailId_)) return false;
				}
			}
			return true;
			case (uint)FID.mailType_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 2) return false;
					mailType_ = (MailType)__e__;
				}
			}
			return true;
			case (uint)FID.timestamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out timestamp_)) return false;
				}
			}
			return true;
			case (uint)FID.sendPlayerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sendPlayerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.recvPlayerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out recvPlayerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.title_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out title_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.content_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out content_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out money_)) return false;
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
				}
			}
			return true;
			case (uint)FID.items_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					items_ = new COM_MailItem[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						items_[i] = new COM_MailItem();
						if(!items_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.isRead_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isRead_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_GuildBuilding
{
	public int level_;
	public int struction_;
	// member ids.
	public enum FID
	{
		level_ = 0,
		struction_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(struction_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(struction_ != 0)
				bin.ProtocolWriter.writeType(w, struction_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out struction_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.struction_:
			{
				{
					bin.ProtocolWriter.writeType(w, struction_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.struction_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out struction_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_GuildRequestData
{
	public long roleId_;
	public sbyte level_;
	public string roleName_ = "";
	public int time_;
	public sbyte prof_;
	public sbyte profLevel_;
	// member ids.
	public enum FID
	{
		roleId_ = 0,
		level_ = 1,
		roleName_ = 2,
		time_ = 3,
		prof_ = 4,
		profLevel_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(roleId_==0?false:true);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(roleName_.Length>0?true:false);
		__fm__.writeBit(time_==0?false:true);
		__fm__.writeBit(prof_==0?false:true);
		__fm__.writeBit(profLevel_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(roleId_ != 0)
				bin.ProtocolWriter.writeType(w, roleId_);
		}
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(roleName_.Length > 0)
				bin.ProtocolWriter.writeType(w, roleName_);
		}
		{
			if(time_ != 0)
				bin.ProtocolWriter.writeType(w, time_);
		}
		{
			if(prof_ != 0)
				bin.ProtocolWriter.writeType(w, prof_);
		}
		{
			if(profLevel_ != 0)
				bin.ProtocolWriter.writeType(w, profLevel_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roleName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out time_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out prof_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out profLevel_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.roleId_:
			{
				{
					bin.ProtocolWriter.writeType(w, roleId_);
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.roleName_:
			{
				{
					bin.ProtocolWriter.writeType(w, roleName_);
				}
			}
			return true;
			case (uint)FID.time_:
			{
				{
					bin.ProtocolWriter.writeType(w, time_);
				}
			}
			return true;
			case (uint)FID.prof_:
			{
				{
					bin.ProtocolWriter.writeType(w, prof_);
				}
			}
			return true;
			case (uint)FID.profLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, profLevel_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.roleId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.roleName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roleName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.time_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out time_)) return false;
				}
			}
			return true;
			case (uint)FID.prof_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out prof_)) return false;
				}
			}
			return true;
			case (uint)FID.profLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out profLevel_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_GuildProgen
{
	public int mId_;
	public int lev_;
	public int exp_;
	// member ids.
	public enum FID
	{
		mId_ = 0,
		lev_ = 1,
		exp_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(mId_==0?false:true);
		__fm__.writeBit(lev_==0?false:true);
		__fm__.writeBit(exp_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(mId_ != 0)
				bin.ProtocolWriter.writeType(w, mId_);
		}
		{
			if(lev_ != 0)
				bin.ProtocolWriter.writeType(w, lev_);
		}
		{
			if(exp_ != 0)
				bin.ProtocolWriter.writeType(w, exp_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out lev_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out exp_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.mId_:
			{
				{
					bin.ProtocolWriter.writeType(w, mId_);
				}
			}
			return true;
			case (uint)FID.lev_:
			{
				{
					bin.ProtocolWriter.writeType(w, lev_);
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					bin.ProtocolWriter.writeType(w, exp_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.mId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mId_)) return false;
				}
			}
			return true;
			case (uint)FID.lev_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out lev_)) return false;
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out exp_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Guild
{
	public sbyte guildLevel_;
	public int createTime_;
	public uint guildId_;
	public uint guildContribution_;
	public uint fundz_;
	public int presentNum_;
	public long master_;
	public string masterName_ = "";
	public string guildName_ = "";
	public string notice_ = "";
	public COM_GuildRequestData[] requestList_ = new COM_GuildRequestData[0];
	public int noFundzDays_;
	public COM_GuildBuilding[] buildings_ = new COM_GuildBuilding[0];
	public COM_GuildProgen[] progenitus_ = new COM_GuildProgen[0];
	public int[] progenitusPositions_ = new int[0];
	// member ids.
	public enum FID
	{
		guildLevel_ = 0,
		createTime_ = 1,
		guildId_ = 2,
		guildContribution_ = 3,
		fundz_ = 4,
		presentNum_ = 5,
		master_ = 6,
		masterName_ = 7,
		guildName_ = 8,
		notice_ = 9,
		requestList_ = 10,
		noFundzDays_ = 11,
		buildings_ = 12,
		progenitus_ = 13,
		progenitusPositions_ = 14,
		MAX = 15,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(guildLevel_==0?false:true);
		__fm__.writeBit(createTime_==0?false:true);
		__fm__.writeBit(guildId_==0?false:true);
		__fm__.writeBit(guildContribution_==0?false:true);
		__fm__.writeBit(fundz_==0?false:true);
		__fm__.writeBit(presentNum_==0?false:true);
		__fm__.writeBit(master_==0?false:true);
		__fm__.writeBit(masterName_.Length>0?true:false);
		__fm__.writeBit(guildName_.Length>0?true:false);
		__fm__.writeBit(notice_.Length>0?true:false);
		__fm__.writeBit((requestList_==null)?false:(requestList_.Length>0?true:false));
		__fm__.writeBit(noFundzDays_==0?false:true);
		__fm__.writeBit((buildings_==null)?false:(buildings_.Length>0?true:false));
		__fm__.writeBit((progenitus_==null)?false:(progenitus_.Length>0?true:false));
		__fm__.writeBit((progenitusPositions_==null)?false:(progenitusPositions_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(guildLevel_ != 0)
				bin.ProtocolWriter.writeType(w, guildLevel_);
		}
		{
			if(createTime_ != 0)
				bin.ProtocolWriter.writeType(w, createTime_);
		}
		{
			if(guildId_ != 0)
				bin.ProtocolWriter.writeType(w, guildId_);
		}
		{
			if(guildContribution_ != 0)
				bin.ProtocolWriter.writeType(w, guildContribution_);
		}
		{
			if(fundz_ != 0)
				bin.ProtocolWriter.writeType(w, fundz_);
		}
		{
			if(presentNum_ != 0)
				bin.ProtocolWriter.writeType(w, presentNum_);
		}
		{
			if(master_ != 0)
				bin.ProtocolWriter.writeType(w, master_);
		}
		{
			if(masterName_.Length > 0)
				bin.ProtocolWriter.writeType(w, masterName_);
		}
		{
			if(guildName_.Length > 0)
				bin.ProtocolWriter.writeType(w, guildName_);
		}
		{
			if(notice_.Length > 0)
				bin.ProtocolWriter.writeType(w, notice_);
		}
		{
			if(requestList_ != null && requestList_.Length > 0)
			{
				uint __len__ = (requestList_ == null)?0:(uint)requestList_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					requestList_[i].serialize(w);
				}
			}
		}
		{
			if(noFundzDays_ != 0)
				bin.ProtocolWriter.writeType(w, noFundzDays_);
		}
		{
			if(buildings_ != null && buildings_.Length > 0)
			{
				uint __len__ = (buildings_ == null)?0:(uint)buildings_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					buildings_[i].serialize(w);
				}
			}
		}
		{
			if(progenitus_ != null && progenitus_.Length > 0)
			{
				uint __len__ = (progenitus_ == null)?0:(uint)progenitus_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					progenitus_[i].serialize(w);
				}
			}
		}
		{
			if(progenitusPositions_ != null && progenitusPositions_.Length > 0)
			{
				uint __len__ = (progenitusPositions_ == null)?0:(uint)progenitusPositions_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, progenitusPositions_[i]);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out createTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildContribution_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out fundz_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out presentNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out master_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out masterName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out notice_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				requestList_ = new COM_GuildRequestData[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					requestList_[i] = new COM_GuildRequestData();
					if(!requestList_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out noFundzDays_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				buildings_ = new COM_GuildBuilding[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					buildings_[i] = new COM_GuildBuilding();
					if(!buildings_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				progenitus_ = new COM_GuildProgen[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					progenitus_[i] = new COM_GuildProgen();
					if(!progenitus_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				progenitusPositions_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out progenitusPositions_[i])) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.guildLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildLevel_);
				}
			}
			return true;
			case (uint)FID.createTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, createTime_);
				}
			}
			return true;
			case (uint)FID.guildId_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildId_);
				}
			}
			return true;
			case (uint)FID.guildContribution_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildContribution_);
				}
			}
			return true;
			case (uint)FID.fundz_:
			{
				{
					bin.ProtocolWriter.writeType(w, fundz_);
				}
			}
			return true;
			case (uint)FID.presentNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, presentNum_);
				}
			}
			return true;
			case (uint)FID.master_:
			{
				{
					bin.ProtocolWriter.writeType(w, master_);
				}
			}
			return true;
			case (uint)FID.masterName_:
			{
				{
					bin.ProtocolWriter.writeType(w, masterName_);
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildName_);
				}
			}
			return true;
			case (uint)FID.notice_:
			{
				{
					bin.ProtocolWriter.writeType(w, notice_);
				}
			}
			return true;
			case (uint)FID.requestList_:
			{
				{
					uint __len__ = (requestList_ == null)?0:(uint)requestList_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						requestList_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.noFundzDays_:
			{
				{
					bin.ProtocolWriter.writeType(w, noFundzDays_);
				}
			}
			return true;
			case (uint)FID.buildings_:
			{
				{
					uint __len__ = (buildings_ == null)?0:(uint)buildings_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						buildings_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.progenitus_:
			{
				{
					uint __len__ = (progenitus_ == null)?0:(uint)progenitus_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						progenitus_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.progenitusPositions_:
			{
				{
					uint __len__ = (progenitusPositions_ == null)?0:(uint)progenitusPositions_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, progenitusPositions_[i]);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.guildLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.createTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out createTime_)) return false;
				}
			}
			return true;
			case (uint)FID.guildId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildId_)) return false;
				}
			}
			return true;
			case (uint)FID.guildContribution_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildContribution_)) return false;
				}
			}
			return true;
			case (uint)FID.fundz_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out fundz_)) return false;
				}
			}
			return true;
			case (uint)FID.presentNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out presentNum_)) return false;
				}
			}
			return true;
			case (uint)FID.master_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out master_)) return false;
				}
			}
			return true;
			case (uint)FID.masterName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out masterName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.notice_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out notice_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.requestList_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					requestList_ = new COM_GuildRequestData[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						requestList_[i] = new COM_GuildRequestData();
						if(!requestList_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.noFundzDays_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out noFundzDays_)) return false;
				}
			}
			return true;
			case (uint)FID.buildings_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					buildings_ = new COM_GuildBuilding[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						buildings_[i] = new COM_GuildBuilding();
						if(!buildings_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.progenitus_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					progenitus_ = new COM_GuildProgen[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						progenitus_[i] = new COM_GuildProgen();
						if(!progenitus_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.progenitusPositions_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					progenitusPositions_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out progenitusPositions_[i])) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_GuildShopItem
{
	public int shopId_;
	public int buyLimit_;
	// member ids.
	public enum FID
	{
		shopId_ = 0,
		buyLimit_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(shopId_==0?false:true);
		__fm__.writeBit(buyLimit_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(shopId_ != 0)
				bin.ProtocolWriter.writeType(w, shopId_);
		}
		{
			if(buyLimit_ != 0)
				bin.ProtocolWriter.writeType(w, buyLimit_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out shopId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out buyLimit_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.shopId_:
			{
				{
					bin.ProtocolWriter.writeType(w, shopId_);
				}
			}
			return true;
			case (uint)FID.buyLimit_:
			{
				{
					bin.ProtocolWriter.writeType(w, buyLimit_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.shopId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out shopId_)) return false;
				}
			}
			return true;
			case (uint)FID.buyLimit_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out buyLimit_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_GuildMember
{
	public sbyte level_;
	public sbyte shopRefreshTimes_;
	public uint guildId_;
	public sbyte profType_;
	public sbyte profLevel_;
	public int contribution_;
	public sbyte job_;
	public int roleId_;
	public uint offlineTime_;
	public string roleName_ = "";
	public uint joinTime_;
	public bool signflag_;
	public COM_GuildShopItem[] shopItems_ = new COM_GuildShopItem[0];
	// member ids.
	public enum FID
	{
		level_ = 0,
		shopRefreshTimes_ = 1,
		guildId_ = 2,
		profType_ = 3,
		profLevel_ = 4,
		contribution_ = 5,
		job_ = 6,
		roleId_ = 7,
		offlineTime_ = 8,
		roleName_ = 9,
		joinTime_ = 10,
		signflag_ = 11,
		shopItems_ = 12,
		MAX = 13,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(shopRefreshTimes_==0?false:true);
		__fm__.writeBit(guildId_==0?false:true);
		__fm__.writeBit(profType_==0?false:true);
		__fm__.writeBit(profLevel_==0?false:true);
		__fm__.writeBit(contribution_==0?false:true);
		__fm__.writeBit(job_==0?false:true);
		__fm__.writeBit(roleId_==0?false:true);
		__fm__.writeBit(offlineTime_==0?false:true);
		__fm__.writeBit(roleName_.Length>0?true:false);
		__fm__.writeBit(joinTime_==0?false:true);
		__fm__.writeBit(signflag_);
		__fm__.writeBit((shopItems_==null)?false:(shopItems_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(shopRefreshTimes_ != 0)
				bin.ProtocolWriter.writeType(w, shopRefreshTimes_);
		}
		{
			if(guildId_ != 0)
				bin.ProtocolWriter.writeType(w, guildId_);
		}
		{
			if(profType_ != 0)
				bin.ProtocolWriter.writeType(w, profType_);
		}
		{
			if(profLevel_ != 0)
				bin.ProtocolWriter.writeType(w, profLevel_);
		}
		{
			if(contribution_ != 0)
				bin.ProtocolWriter.writeType(w, contribution_);
		}
		{
			if(job_ != 0)
				bin.ProtocolWriter.writeType(w, job_);
		}
		{
			if(roleId_ != 0)
				bin.ProtocolWriter.writeType(w, roleId_);
		}
		{
			if(offlineTime_ != 0)
				bin.ProtocolWriter.writeType(w, offlineTime_);
		}
		{
			if(roleName_.Length > 0)
				bin.ProtocolWriter.writeType(w, roleName_);
		}
		{
			if(joinTime_ != 0)
				bin.ProtocolWriter.writeType(w, joinTime_);
		}
		{
		}
		{
			if(shopItems_ != null && shopItems_.Length > 0)
			{
				uint __len__ = (shopItems_ == null)?0:(uint)shopItems_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					shopItems_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out shopRefreshTimes_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out profType_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out profLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out contribution_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out job_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out offlineTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roleName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out joinTime_)) return false;
			}
		}
		{
			signflag_ = __fm__.readBit();
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				shopItems_ = new COM_GuildShopItem[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					shopItems_[i] = new COM_GuildShopItem();
					if(!shopItems_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.shopRefreshTimes_:
			{
				{
					bin.ProtocolWriter.writeType(w, shopRefreshTimes_);
				}
			}
			return true;
			case (uint)FID.guildId_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildId_);
				}
			}
			return true;
			case (uint)FID.profType_:
			{
				{
					bin.ProtocolWriter.writeType(w, profType_);
				}
			}
			return true;
			case (uint)FID.profLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, profLevel_);
				}
			}
			return true;
			case (uint)FID.contribution_:
			{
				{
					bin.ProtocolWriter.writeType(w, contribution_);
				}
			}
			return true;
			case (uint)FID.job_:
			{
				{
					bin.ProtocolWriter.writeType(w, job_);
				}
			}
			return true;
			case (uint)FID.roleId_:
			{
				{
					bin.ProtocolWriter.writeType(w, roleId_);
				}
			}
			return true;
			case (uint)FID.offlineTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, offlineTime_);
				}
			}
			return true;
			case (uint)FID.roleName_:
			{
				{
					bin.ProtocolWriter.writeType(w, roleName_);
				}
			}
			return true;
			case (uint)FID.joinTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, joinTime_);
				}
			}
			return true;
			case (uint)FID.signflag_:
			{
				{
					bin.ProtocolWriter.writeType(w, signflag_);
				}
			}
			return true;
			case (uint)FID.shopItems_:
			{
				{
					uint __len__ = (shopItems_ == null)?0:(uint)shopItems_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						shopItems_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.shopRefreshTimes_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out shopRefreshTimes_)) return false;
				}
			}
			return true;
			case (uint)FID.guildId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildId_)) return false;
				}
			}
			return true;
			case (uint)FID.profType_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out profType_)) return false;
				}
			}
			return true;
			case (uint)FID.profLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out profLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.contribution_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out contribution_)) return false;
				}
			}
			return true;
			case (uint)FID.job_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out job_)) return false;
				}
			}
			return true;
			case (uint)FID.roleId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
				}
			}
			return true;
			case (uint)FID.offlineTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out offlineTime_)) return false;
				}
			}
			return true;
			case (uint)FID.roleName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roleName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.joinTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out joinTime_)) return false;
				}
			}
			return true;
			case (uint)FID.signflag_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out signflag_)) return false;
				}
			}
			return true;
			case (uint)FID.shopItems_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					shopItems_ = new COM_GuildShopItem[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						shopItems_[i] = new COM_GuildShopItem();
						if(!shopItems_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_GuildViewerData
{
	public uint guid_;
	public string guildName_ = "";
	public string playerName_ = "";
	public string notice_ = "";
	public sbyte level_;
	public short memberNum_;
	public short memberTotal_;
	public sbyte guildRank_;
	// member ids.
	public enum FID
	{
		guid_ = 0,
		guildName_ = 1,
		playerName_ = 2,
		notice_ = 3,
		level_ = 4,
		memberNum_ = 5,
		memberTotal_ = 6,
		guildRank_ = 7,
		MAX = 8,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(guid_==0?false:true);
		__fm__.writeBit(guildName_.Length>0?true:false);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(notice_.Length>0?true:false);
		__fm__.writeBit(level_==0?false:true);
		__fm__.writeBit(memberNum_==0?false:true);
		__fm__.writeBit(memberTotal_==0?false:true);
		__fm__.writeBit(guildRank_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(guid_ != 0)
				bin.ProtocolWriter.writeType(w, guid_);
		}
		{
			if(guildName_.Length > 0)
				bin.ProtocolWriter.writeType(w, guildName_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(notice_.Length > 0)
				bin.ProtocolWriter.writeType(w, notice_);
		}
		{
			if(level_ != 0)
				bin.ProtocolWriter.writeType(w, level_);
		}
		{
			if(memberNum_ != 0)
				bin.ProtocolWriter.writeType(w, memberNum_);
		}
		{
			if(memberTotal_ != 0)
				bin.ProtocolWriter.writeType(w, memberTotal_);
		}
		{
			if(guildRank_ != 0)
				bin.ProtocolWriter.writeType(w, guildRank_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out notice_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out level_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out memberNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out memberTotal_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guildRank_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.guid_:
			{
				{
					bin.ProtocolWriter.writeType(w, guid_);
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildName_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.notice_:
			{
				{
					bin.ProtocolWriter.writeType(w, notice_);
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					bin.ProtocolWriter.writeType(w, level_);
				}
			}
			return true;
			case (uint)FID.memberNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, memberNum_);
				}
			}
			return true;
			case (uint)FID.memberTotal_:
			{
				{
					bin.ProtocolWriter.writeType(w, memberTotal_);
				}
			}
			return true;
			case (uint)FID.guildRank_:
			{
				{
					bin.ProtocolWriter.writeType(w, guildRank_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.guid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guid_)) return false;
				}
			}
			return true;
			case (uint)FID.guildName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.notice_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out notice_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.level_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out level_)) return false;
				}
			}
			return true;
			case (uint)FID.memberNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out memberNum_)) return false;
				}
			}
			return true;
			case (uint)FID.memberTotal_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out memberTotal_)) return false;
				}
			}
			return true;
			case (uint)FID.guildRank_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guildRank_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_SearchContext
{
	public string title_ = "";
	public ItemSubType ist_;
	public RaceType rt_;
	public int itemId_;
	public int babyId_;
	public int begin_;
	public int limit_;
	// member ids.
	public enum FID
	{
		title_ = 0,
		ist_ = 1,
		rt_ = 2,
		itemId_ = 3,
		babyId_ = 4,
		begin_ = 5,
		limit_ = 6,
		MAX = 7,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(title_.Length>0?true:false);
		__fm__.writeBit(ist_==0?false:true);
		__fm__.writeBit(rt_==0?false:true);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(babyId_==0?false:true);
		__fm__.writeBit(begin_==0?false:true);
		__fm__.writeBit(limit_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(title_.Length > 0)
				bin.ProtocolWriter.writeType(w, title_);
		}
		{
			byte __e__ = (byte)ist_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			byte __e__ = (byte)rt_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(babyId_ != 0)
				bin.ProtocolWriter.writeType(w, babyId_);
		}
		{
			if(begin_ != 0)
				bin.ProtocolWriter.writeType(w, begin_);
		}
		{
			if(limit_ != 0)
				bin.ProtocolWriter.writeType(w, limit_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out title_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 48) return false;
				ist_ = (ItemSubType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 11) return false;
				rt_ = (RaceType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out babyId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out begin_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out limit_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.title_:
			{
				{
					bin.ProtocolWriter.writeType(w, title_);
				}
			}
			return true;
			case (uint)FID.ist_:
			{
				{
					byte __e__ = (byte)ist_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.rt_:
			{
				{
					byte __e__ = (byte)rt_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.babyId_:
			{
				{
					bin.ProtocolWriter.writeType(w, babyId_);
				}
			}
			return true;
			case (uint)FID.begin_:
			{
				{
					bin.ProtocolWriter.writeType(w, begin_);
				}
			}
			return true;
			case (uint)FID.limit_:
			{
				{
					bin.ProtocolWriter.writeType(w, limit_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.title_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out title_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.ist_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 48) return false;
					ist_ = (ItemSubType)__e__;
				}
			}
			return true;
			case (uint)FID.rt_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 11) return false;
					rt_ = (RaceType)__e__;
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.babyId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out babyId_)) return false;
				}
			}
			return true;
			case (uint)FID.begin_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out begin_)) return false;
				}
			}
			return true;
			case (uint)FID.limit_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out limit_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_SellItem
{
	public int guid_;
	public int sellPlayerId_;
	public int sellPrice;
	public string title_ = "";
	public ItemSubType ist_;
	public RaceType rt_;
	public COM_Item item_ = new COM_Item();
	public COM_BabyInst baby_ = new COM_BabyInst();
	public int time_;
	// member ids.
	public enum FID
	{
		guid_ = 0,
		sellPlayerId_ = 1,
		sellPrice = 2,
		title_ = 3,
		ist_ = 4,
		rt_ = 5,
		item_ = 6,
		baby_ = 7,
		time_ = 8,
		MAX = 9,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(guid_==0?false:true);
		__fm__.writeBit(sellPlayerId_==0?false:true);
		__fm__.writeBit(sellPrice==0?false:true);
		__fm__.writeBit(title_.Length>0?true:false);
		__fm__.writeBit(ist_==0?false:true);
		__fm__.writeBit(rt_==0?false:true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(time_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(guid_ != 0)
				bin.ProtocolWriter.writeType(w, guid_);
		}
		{
			if(sellPlayerId_ != 0)
				bin.ProtocolWriter.writeType(w, sellPlayerId_);
		}
		{
			if(sellPrice != 0)
				bin.ProtocolWriter.writeType(w, sellPrice);
		}
		{
			if(title_.Length > 0)
				bin.ProtocolWriter.writeType(w, title_);
		}
		{
			byte __e__ = (byte)ist_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			byte __e__ = (byte)rt_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			item_.serialize(w);
		}
		{
			baby_.serialize(w);
		}
		{
			if(time_ != 0)
				bin.ProtocolWriter.writeType(w, time_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sellPlayerId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sellPrice)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out title_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 48) return false;
				ist_ = (ItemSubType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 11) return false;
				rt_ = (RaceType)__e__;
			}
		}
		{
			__fm__.readBit();
			if(!item_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!baby_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out time_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.guid_:
			{
				{
					bin.ProtocolWriter.writeType(w, guid_);
				}
			}
			return true;
			case (uint)FID.sellPlayerId_:
			{
				{
					bin.ProtocolWriter.writeType(w, sellPlayerId_);
				}
			}
			return true;
			case (uint)FID.sellPrice:
			{
				{
					bin.ProtocolWriter.writeType(w, sellPrice);
				}
			}
			return true;
			case (uint)FID.title_:
			{
				{
					bin.ProtocolWriter.writeType(w, title_);
				}
			}
			return true;
			case (uint)FID.ist_:
			{
				{
					byte __e__ = (byte)ist_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.rt_:
			{
				{
					byte __e__ = (byte)rt_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.item_:
			{
				{
					item_.serialize(w);
				}
			}
			return true;
			case (uint)FID.baby_:
			{
				{
					baby_.serialize(w);
				}
			}
			return true;
			case (uint)FID.time_:
			{
				{
					bin.ProtocolWriter.writeType(w, time_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.guid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guid_)) return false;
				}
			}
			return true;
			case (uint)FID.sellPlayerId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sellPlayerId_)) return false;
				}
			}
			return true;
			case (uint)FID.sellPrice:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sellPrice)) return false;
				}
			}
			return true;
			case (uint)FID.title_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out title_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.ist_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 48) return false;
					ist_ = (ItemSubType)__e__;
				}
			}
			return true;
			case (uint)FID.rt_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 11) return false;
					rt_ = (RaceType)__e__;
				}
			}
			return true;
			case (uint)FID.item_:
			{
				{
					if(!item_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.baby_:
			{
				{
					if(!baby_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.time_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out time_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_SelledItem
{
	public int guid_;
	public int sellPlayerId_;
	public int sellTime_;
	public int selledTime_;
	public int itemId_;
	public int babyId_;
	public int itemStack_;
	public int price_;
	public int tax_;
	// member ids.
	public enum FID
	{
		guid_ = 0,
		sellPlayerId_ = 1,
		sellTime_ = 2,
		selledTime_ = 3,
		itemId_ = 4,
		babyId_ = 5,
		itemStack_ = 6,
		price_ = 7,
		tax_ = 8,
		MAX = 9,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(guid_==0?false:true);
		__fm__.writeBit(sellPlayerId_==0?false:true);
		__fm__.writeBit(sellTime_==0?false:true);
		__fm__.writeBit(selledTime_==0?false:true);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(babyId_==0?false:true);
		__fm__.writeBit(itemStack_==0?false:true);
		__fm__.writeBit(price_==0?false:true);
		__fm__.writeBit(tax_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(guid_ != 0)
				bin.ProtocolWriter.writeType(w, guid_);
		}
		{
			if(sellPlayerId_ != 0)
				bin.ProtocolWriter.writeType(w, sellPlayerId_);
		}
		{
			if(sellTime_ != 0)
				bin.ProtocolWriter.writeType(w, sellTime_);
		}
		{
			if(selledTime_ != 0)
				bin.ProtocolWriter.writeType(w, selledTime_);
		}
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(babyId_ != 0)
				bin.ProtocolWriter.writeType(w, babyId_);
		}
		{
			if(itemStack_ != 0)
				bin.ProtocolWriter.writeType(w, itemStack_);
		}
		{
			if(price_ != 0)
				bin.ProtocolWriter.writeType(w, price_);
		}
		{
			if(tax_ != 0)
				bin.ProtocolWriter.writeType(w, tax_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sellPlayerId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sellTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out selledTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out babyId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemStack_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out price_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out tax_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.guid_:
			{
				{
					bin.ProtocolWriter.writeType(w, guid_);
				}
			}
			return true;
			case (uint)FID.sellPlayerId_:
			{
				{
					bin.ProtocolWriter.writeType(w, sellPlayerId_);
				}
			}
			return true;
			case (uint)FID.sellTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, sellTime_);
				}
			}
			return true;
			case (uint)FID.selledTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, selledTime_);
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.babyId_:
			{
				{
					bin.ProtocolWriter.writeType(w, babyId_);
				}
			}
			return true;
			case (uint)FID.itemStack_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemStack_);
				}
			}
			return true;
			case (uint)FID.price_:
			{
				{
					bin.ProtocolWriter.writeType(w, price_);
				}
			}
			return true;
			case (uint)FID.tax_:
			{
				{
					bin.ProtocolWriter.writeType(w, tax_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.guid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guid_)) return false;
				}
			}
			return true;
			case (uint)FID.sellPlayerId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sellPlayerId_)) return false;
				}
			}
			return true;
			case (uint)FID.sellTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sellTime_)) return false;
				}
			}
			return true;
			case (uint)FID.selledTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out selledTime_)) return false;
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.babyId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out babyId_)) return false;
				}
			}
			return true;
			case (uint)FID.itemStack_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemStack_)) return false;
				}
			}
			return true;
			case (uint)FID.price_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out price_)) return false;
				}
			}
			return true;
			case (uint)FID.tax_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out tax_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_BuyContent
{
	public int playerId_;
	public int guid_;
	public int diamond_;
	public int magic_;
	public bool isBabyFull_;
	public bool isBagFull_;
	// member ids.
	public enum FID
	{
		playerId_ = 0,
		guid_ = 1,
		diamond_ = 2,
		magic_ = 3,
		isBabyFull_ = 4,
		isBagFull_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(playerId_==0?false:true);
		__fm__.writeBit(guid_==0?false:true);
		__fm__.writeBit(diamond_==0?false:true);
		__fm__.writeBit(magic_==0?false:true);
		__fm__.writeBit(isBabyFull_);
		__fm__.writeBit(isBagFull_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(playerId_ != 0)
				bin.ProtocolWriter.writeType(w, playerId_);
		}
		{
			if(guid_ != 0)
				bin.ProtocolWriter.writeType(w, guid_);
		}
		{
			if(diamond_ != 0)
				bin.ProtocolWriter.writeType(w, diamond_);
		}
		{
			if(magic_ != 0)
				bin.ProtocolWriter.writeType(w, magic_);
		}
		{
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out guid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out magic_)) return false;
			}
		}
		{
			isBabyFull_ = __fm__.readBit();
		}
		{
			isBagFull_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.playerId_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerId_);
				}
			}
			return true;
			case (uint)FID.guid_:
			{
				{
					bin.ProtocolWriter.writeType(w, guid_);
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					bin.ProtocolWriter.writeType(w, diamond_);
				}
			}
			return true;
			case (uint)FID.magic_:
			{
				{
					bin.ProtocolWriter.writeType(w, magic_);
				}
			}
			return true;
			case (uint)FID.isBabyFull_:
			{
				{
					bin.ProtocolWriter.writeType(w, isBabyFull_);
				}
			}
			return true;
			case (uint)FID.isBagFull_:
			{
				{
					bin.ProtocolWriter.writeType(w, isBagFull_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.playerId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
				}
			}
			return true;
			case (uint)FID.guid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out guid_)) return false;
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
				}
			}
			return true;
			case (uint)FID.magic_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out magic_)) return false;
				}
			}
			return true;
			case (uint)FID.isBabyFull_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isBabyFull_)) return false;
				}
			}
			return true;
			case (uint)FID.isBagFull_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isBagFull_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_ScenePlayerInfo
{
	public int playerId_;
	public int playerLevel_;
	public int sceneId_;
	public int entryId_;
	public int[] currentQuestIds_ = new int[0];
	public int[] accecptQuestIds_ = new int[0];
	public int[] openScenes_ = new int[0];
	// member ids.
	public enum FID
	{
		playerId_ = 0,
		playerLevel_ = 1,
		sceneId_ = 2,
		entryId_ = 3,
		currentQuestIds_ = 4,
		accecptQuestIds_ = 5,
		openScenes_ = 6,
		MAX = 7,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(playerId_==0?false:true);
		__fm__.writeBit(playerLevel_==0?false:true);
		__fm__.writeBit(sceneId_==0?false:true);
		__fm__.writeBit(entryId_==0?false:true);
		__fm__.writeBit((currentQuestIds_==null)?false:(currentQuestIds_.Length>0?true:false));
		__fm__.writeBit((accecptQuestIds_==null)?false:(accecptQuestIds_.Length>0?true:false));
		__fm__.writeBit((openScenes_==null)?false:(openScenes_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(playerId_ != 0)
				bin.ProtocolWriter.writeType(w, playerId_);
		}
		{
			if(playerLevel_ != 0)
				bin.ProtocolWriter.writeType(w, playerLevel_);
		}
		{
			if(sceneId_ != 0)
				bin.ProtocolWriter.writeType(w, sceneId_);
		}
		{
			if(entryId_ != 0)
				bin.ProtocolWriter.writeType(w, entryId_);
		}
		{
			if(currentQuestIds_ != null && currentQuestIds_.Length > 0)
			{
				uint __len__ = (currentQuestIds_ == null)?0:(uint)currentQuestIds_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, currentQuestIds_[i]);
				}
			}
		}
		{
			if(accecptQuestIds_ != null && accecptQuestIds_.Length > 0)
			{
				uint __len__ = (accecptQuestIds_ == null)?0:(uint)accecptQuestIds_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, accecptQuestIds_[i]);
				}
			}
		}
		{
			if(openScenes_ != null && openScenes_.Length > 0)
			{
				uint __len__ = (openScenes_ == null)?0:(uint)openScenes_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, openScenes_[i]);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerLevel_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sceneId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out entryId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				currentQuestIds_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out currentQuestIds_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				accecptQuestIds_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out accecptQuestIds_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				openScenes_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out openScenes_[i])) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.playerId_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerId_);
				}
			}
			return true;
			case (uint)FID.playerLevel_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerLevel_);
				}
			}
			return true;
			case (uint)FID.sceneId_:
			{
				{
					bin.ProtocolWriter.writeType(w, sceneId_);
				}
			}
			return true;
			case (uint)FID.entryId_:
			{
				{
					bin.ProtocolWriter.writeType(w, entryId_);
				}
			}
			return true;
			case (uint)FID.currentQuestIds_:
			{
				{
					uint __len__ = (currentQuestIds_ == null)?0:(uint)currentQuestIds_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, currentQuestIds_[i]);
					}
				}
			}
			return true;
			case (uint)FID.accecptQuestIds_:
			{
				{
					uint __len__ = (accecptQuestIds_ == null)?0:(uint)accecptQuestIds_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, accecptQuestIds_[i]);
					}
				}
			}
			return true;
			case (uint)FID.openScenes_:
			{
				{
					uint __len__ = (openScenes_ == null)?0:(uint)openScenes_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, openScenes_[i]);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.playerId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
				}
			}
			return true;
			case (uint)FID.playerLevel_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerLevel_)) return false;
				}
			}
			return true;
			case (uint)FID.sceneId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sceneId_)) return false;
				}
			}
			return true;
			case (uint)FID.entryId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out entryId_)) return false;
				}
			}
			return true;
			case (uint)FID.currentQuestIds_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					currentQuestIds_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out currentQuestIds_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.accecptQuestIds_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					accecptQuestIds_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out accecptQuestIds_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.openScenes_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					openScenes_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out openScenes_[i])) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_SceneInfo
{
	public int sceneId_;
	public COM_FPosition position_ = new COM_FPosition();
	public COM_ScenePlayerInformation[] players_ = new COM_ScenePlayerInformation[0];
	public int[] npcs_ = new int[0];
	// member ids.
	public enum FID
	{
		sceneId_ = 0,
		position_ = 1,
		players_ = 2,
		npcs_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(sceneId_==0?false:true);
		__fm__.writeBit(true);
		__fm__.writeBit((players_==null)?false:(players_.Length>0?true:false));
		__fm__.writeBit((npcs_==null)?false:(npcs_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(sceneId_ != 0)
				bin.ProtocolWriter.writeType(w, sceneId_);
		}
		{
			position_.serialize(w);
		}
		{
			if(players_ != null && players_.Length > 0)
			{
				uint __len__ = (players_ == null)?0:(uint)players_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					players_[i].serialize(w);
				}
			}
		}
		{
			if(npcs_ != null && npcs_.Length > 0)
			{
				uint __len__ = (npcs_ == null)?0:(uint)npcs_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, npcs_[i]);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sceneId_)) return false;
			}
		}
		{
			__fm__.readBit();
			if(!position_.deserialize(r)) return false;
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				players_ = new COM_ScenePlayerInformation[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					players_[i] = new COM_ScenePlayerInformation();
					if(!players_[i].deserialize(r)) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				npcs_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out npcs_[i])) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.sceneId_:
			{
				{
					bin.ProtocolWriter.writeType(w, sceneId_);
				}
			}
			return true;
			case (uint)FID.position_:
			{
				{
					position_.serialize(w);
				}
			}
			return true;
			case (uint)FID.players_:
			{
				{
					uint __len__ = (players_ == null)?0:(uint)players_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						players_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.npcs_:
			{
				{
					uint __len__ = (npcs_ == null)?0:(uint)npcs_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, npcs_[i]);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.sceneId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sceneId_)) return false;
				}
			}
			return true;
			case (uint)FID.position_:
			{
				{
					if(!position_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.players_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					players_ = new COM_ScenePlayerInformation[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						players_[i] = new COM_ScenePlayerInformation();
						if(!players_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.npcs_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					npcs_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out npcs_[i])) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ReconnectInfo
{
	public ReconnectType reconnectProcess_;
	public string sessionKey_ = "";
	public COM_SimpleInformation[] roles_ = new COM_SimpleInformation[0];
	public COM_PlayerInst playerInst_ = new COM_PlayerInst();
	public COM_SceneInfo sceneInfo_ = new COM_SceneInfo();
	public COM_TeamInfo team_ = new COM_TeamInfo();
	public COM_InitBattle initBattle_ = new COM_InitBattle();
	// member ids.
	public enum FID
	{
		reconnectProcess_ = 0,
		sessionKey_ = 1,
		roles_ = 2,
		playerInst_ = 3,
		sceneInfo_ = 4,
		team_ = 5,
		initBattle_ = 6,
		MAX = 7,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(reconnectProcess_==0?false:true);
		__fm__.writeBit(sessionKey_.Length>0?true:false);
		__fm__.writeBit((roles_==null)?false:(roles_.Length>0?true:false));
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		__fm__.writeBit(true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)reconnectProcess_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(sessionKey_.Length > 0)
				bin.ProtocolWriter.writeType(w, sessionKey_);
		}
		{
			if(roles_ != null && roles_.Length > 0)
			{
				uint __len__ = (roles_ == null)?0:(uint)roles_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					roles_[i].serialize(w);
				}
			}
		}
		{
			playerInst_.serialize(w);
		}
		{
			sceneInfo_.serialize(w);
		}
		{
			team_.serialize(w);
		}
		{
			initBattle_.serialize(w);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
				reconnectProcess_ = (ReconnectType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out sessionKey_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				roles_ = new COM_SimpleInformation[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					roles_[i] = new COM_SimpleInformation();
					if(!roles_[i].deserialize(r)) return false;
				}
			}
		}
		{
			__fm__.readBit();
			if(!playerInst_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!sceneInfo_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!team_.deserialize(r)) return false;
		}
		{
			__fm__.readBit();
			if(!initBattle_.deserialize(r)) return false;
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.reconnectProcess_:
			{
				{
					byte __e__ = (byte)reconnectProcess_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.sessionKey_:
			{
				{
					bin.ProtocolWriter.writeType(w, sessionKey_);
				}
			}
			return true;
			case (uint)FID.roles_:
			{
				{
					uint __len__ = (roles_ == null)?0:(uint)roles_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						roles_[i].serialize(w);
					}
				}
			}
			return true;
			case (uint)FID.playerInst_:
			{
				{
					playerInst_.serialize(w);
				}
			}
			return true;
			case (uint)FID.sceneInfo_:
			{
				{
					sceneInfo_.serialize(w);
				}
			}
			return true;
			case (uint)FID.team_:
			{
				{
					team_.serialize(w);
				}
			}
			return true;
			case (uint)FID.initBattle_:
			{
				{
					initBattle_.serialize(w);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.reconnectProcess_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 7) return false;
					reconnectProcess_ = (ReconnectType)__e__;
				}
			}
			return true;
			case (uint)FID.sessionKey_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out sessionKey_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.roles_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					roles_ = new COM_SimpleInformation[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						roles_[i] = new COM_SimpleInformation();
						if(!roles_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
			case (uint)FID.playerInst_:
			{
				{
					if(!playerInst_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.sceneInfo_:
			{
				{
					if(!sceneInfo_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.team_:
			{
				{
					if(!team_.deserialize(r)) return false;
				}
			}
			return true;
			case (uint)FID.initBattle_:
			{
				{
					if(!initBattle_.deserialize(r)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Notice
{
	public NoticeSendType SendType_;
	public string note_ = "";
	public float accumulate_;
	public float startTime_;
	public float stopTime_;
	public float interval_;
	public bool validate_;
	// member ids.
	public enum FID
	{
		SendType_ = 0,
		note_ = 1,
		accumulate_ = 2,
		startTime_ = 3,
		stopTime_ = 4,
		interval_ = 5,
		validate_ = 6,
		MAX = 7,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(SendType_==0?false:true);
		__fm__.writeBit(note_.Length>0?true:false);
		__fm__.writeBit(accumulate_==0?false:true);
		__fm__.writeBit(startTime_==0?false:true);
		__fm__.writeBit(stopTime_==0?false:true);
		__fm__.writeBit(interval_==0?false:true);
		__fm__.writeBit(validate_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)SendType_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(note_.Length > 0)
				bin.ProtocolWriter.writeType(w, note_);
		}
		{
			if(accumulate_ != 0)
				bin.ProtocolWriter.writeType(w, accumulate_);
		}
		{
			if(startTime_ != 0)
				bin.ProtocolWriter.writeType(w, startTime_);
		}
		{
			if(stopTime_ != 0)
				bin.ProtocolWriter.writeType(w, stopTime_);
		}
		{
			if(interval_ != 0)
				bin.ProtocolWriter.writeType(w, interval_);
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 3) return false;
				SendType_ = (NoticeSendType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out note_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out accumulate_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out startTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out stopTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out interval_)) return false;
			}
		}
		{
			validate_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.SendType_:
			{
				{
					byte __e__ = (byte)SendType_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.note_:
			{
				{
					bin.ProtocolWriter.writeType(w, note_);
				}
			}
			return true;
			case (uint)FID.accumulate_:
			{
				{
					bin.ProtocolWriter.writeType(w, accumulate_);
				}
			}
			return true;
			case (uint)FID.startTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, startTime_);
				}
			}
			return true;
			case (uint)FID.stopTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, stopTime_);
				}
			}
			return true;
			case (uint)FID.interval_:
			{
				{
					bin.ProtocolWriter.writeType(w, interval_);
				}
			}
			return true;
			case (uint)FID.validate_:
			{
				{
					bin.ProtocolWriter.writeType(w, validate_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.SendType_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 3) return false;
					SendType_ = (NoticeSendType)__e__;
				}
			}
			return true;
			case (uint)FID.note_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out note_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.accumulate_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out accumulate_)) return false;
				}
			}
			return true;
			case (uint)FID.startTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out startTime_)) return false;
				}
			}
			return true;
			case (uint)FID.stopTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out stopTime_)) return false;
				}
			}
			return true;
			case (uint)FID.interval_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out interval_)) return false;
				}
			}
			return true;
			case (uint)FID.validate_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out validate_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ShowItemInst
{
	public int showId_;
	public string playerName_ = "";
	public COM_Item itemInst_ = new COM_Item();
	// member ids.
	public enum FID
	{
		showId_ = 0,
		playerName_ = 1,
		itemInst_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(showId_==0?false:true);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(showId_ != 0)
				bin.ProtocolWriter.writeType(w, showId_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			itemInst_.serialize(w);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out showId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			__fm__.readBit();
			if(!itemInst_.deserialize(r)) return false;
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.showId_:
			{
				{
					bin.ProtocolWriter.writeType(w, showId_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.itemInst_:
			{
				{
					itemInst_.serialize(w);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.showId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out showId_)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.itemInst_:
			{
				{
					if(!itemInst_.deserialize(r)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ShowItemInstInfo
{
	public int showId_;
	public string playerName_ = "";
	public uint itemId_;
	// member ids.
	public enum FID
	{
		showId_ = 0,
		playerName_ = 1,
		itemId_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(showId_==0?false:true);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(itemId_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(showId_ != 0)
				bin.ProtocolWriter.writeType(w, showId_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out showId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.showId_:
			{
				{
					bin.ProtocolWriter.writeType(w, showId_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.showId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out showId_)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ShowbabyInst
{
	public int showId_;
	public string playerName_ = "";
	public COM_BabyInst babyInst_ = new COM_BabyInst();
	// member ids.
	public enum FID
	{
		showId_ = 0,
		playerName_ = 1,
		babyInst_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(showId_==0?false:true);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(showId_ != 0)
				bin.ProtocolWriter.writeType(w, showId_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			babyInst_.serialize(w);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out showId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			__fm__.readBit();
			if(!babyInst_.deserialize(r)) return false;
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.showId_:
			{
				{
					bin.ProtocolWriter.writeType(w, showId_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.babyInst_:
			{
				{
					babyInst_.serialize(w);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.showId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out showId_)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.babyInst_:
			{
				{
					if(!babyInst_.deserialize(r)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_ShowbabyInstInfo
{
	public int showId_;
	public string playerName_ = "";
	public uint babyId_;
	// member ids.
	public enum FID
	{
		showId_ = 0,
		playerName_ = 1,
		babyId_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(showId_==0?false:true);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(babyId_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(showId_ != 0)
				bin.ProtocolWriter.writeType(w, showId_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(babyId_ != 0)
				bin.ProtocolWriter.writeType(w, babyId_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out showId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out babyId_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.showId_:
			{
				{
					bin.ProtocolWriter.writeType(w, showId_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.babyId_:
			{
				{
					bin.ProtocolWriter.writeType(w, babyId_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.showId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out showId_)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.babyId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out babyId_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_Account
{
	public string gamename_ = "";
	public string pfid_ = "";
	public string pfname_ = "";
	public string accountid_ = "";
	public ulong createtime_;
	public string mac_ = "";
	public string idfa_ = "";
	public string ip_ = "";
	public string devicetype_ = "";
	// member ids.
	public enum FID
	{
		gamename_ = 0,
		pfid_ = 1,
		pfname_ = 2,
		accountid_ = 3,
		createtime_ = 4,
		mac_ = 5,
		idfa_ = 6,
		ip_ = 7,
		devicetype_ = 8,
		MAX = 9,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(gamename_.Length>0?true:false);
		__fm__.writeBit(pfid_.Length>0?true:false);
		__fm__.writeBit(pfname_.Length>0?true:false);
		__fm__.writeBit(accountid_.Length>0?true:false);
		__fm__.writeBit(createtime_==0?false:true);
		__fm__.writeBit(mac_.Length>0?true:false);
		__fm__.writeBit(idfa_.Length>0?true:false);
		__fm__.writeBit(ip_.Length>0?true:false);
		__fm__.writeBit(devicetype_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(gamename_.Length > 0)
				bin.ProtocolWriter.writeType(w, gamename_);
		}
		{
			if(pfid_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfid_);
		}
		{
			if(pfname_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfname_);
		}
		{
			if(accountid_.Length > 0)
				bin.ProtocolWriter.writeType(w, accountid_);
		}
		{
			if(createtime_ != 0)
				bin.ProtocolWriter.writeType(w, createtime_);
		}
		{
			if(mac_.Length > 0)
				bin.ProtocolWriter.writeType(w, mac_);
		}
		{
			if(idfa_.Length > 0)
				bin.ProtocolWriter.writeType(w, idfa_);
		}
		{
			if(ip_.Length > 0)
				bin.ProtocolWriter.writeType(w, ip_);
		}
		{
			if(devicetype_.Length > 0)
				bin.ProtocolWriter.writeType(w, devicetype_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out gamename_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out accountid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out createtime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mac_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out idfa_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ip_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out devicetype_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.gamename_:
			{
				{
					bin.ProtocolWriter.writeType(w, gamename_);
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfid_);
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfname_);
				}
			}
			return true;
			case (uint)FID.accountid_:
			{
				{
					bin.ProtocolWriter.writeType(w, accountid_);
				}
			}
			return true;
			case (uint)FID.createtime_:
			{
				{
					bin.ProtocolWriter.writeType(w, createtime_);
				}
			}
			return true;
			case (uint)FID.mac_:
			{
				{
					bin.ProtocolWriter.writeType(w, mac_);
				}
			}
			return true;
			case (uint)FID.idfa_:
			{
				{
					bin.ProtocolWriter.writeType(w, idfa_);
				}
			}
			return true;
			case (uint)FID.ip_:
			{
				{
					bin.ProtocolWriter.writeType(w, ip_);
				}
			}
			return true;
			case (uint)FID.devicetype_:
			{
				{
					bin.ProtocolWriter.writeType(w, devicetype_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.gamename_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out gamename_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.accountid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out accountid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.createtime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out createtime_)) return false;
				}
			}
			return true;
			case (uint)FID.mac_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mac_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.idfa_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out idfa_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.ip_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ip_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.devicetype_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out devicetype_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_Login
{
	public string gamename_ = "";
	public string pfid_ = "";
	public string pfname_ = "";
	public string accountid_ = "";
	public uint roleId_;
	public ulong logintime_;
	public ulong logouttime_;
	public ulong firsttime_;
	public ulong rolefirsttime_;
	public uint firstserid_;
	public uint serverid_;
	public string mac_ = "";
	public string idfa_ = "";
	public string ip_ = "";
	public string devicetype_ = "";
	// member ids.
	public enum FID
	{
		gamename_ = 0,
		pfid_ = 1,
		pfname_ = 2,
		accountid_ = 3,
		roleId_ = 4,
		logintime_ = 5,
		logouttime_ = 6,
		firsttime_ = 7,
		rolefirsttime_ = 8,
		firstserid_ = 9,
		serverid_ = 10,
		mac_ = 11,
		idfa_ = 12,
		ip_ = 13,
		devicetype_ = 14,
		MAX = 15,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(gamename_.Length>0?true:false);
		__fm__.writeBit(pfid_.Length>0?true:false);
		__fm__.writeBit(pfname_.Length>0?true:false);
		__fm__.writeBit(accountid_.Length>0?true:false);
		__fm__.writeBit(roleId_==0?false:true);
		__fm__.writeBit(logintime_==0?false:true);
		__fm__.writeBit(logouttime_==0?false:true);
		__fm__.writeBit(firsttime_==0?false:true);
		__fm__.writeBit(rolefirsttime_==0?false:true);
		__fm__.writeBit(firstserid_==0?false:true);
		__fm__.writeBit(serverid_==0?false:true);
		__fm__.writeBit(mac_.Length>0?true:false);
		__fm__.writeBit(idfa_.Length>0?true:false);
		__fm__.writeBit(ip_.Length>0?true:false);
		__fm__.writeBit(devicetype_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(gamename_.Length > 0)
				bin.ProtocolWriter.writeType(w, gamename_);
		}
		{
			if(pfid_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfid_);
		}
		{
			if(pfname_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfname_);
		}
		{
			if(accountid_.Length > 0)
				bin.ProtocolWriter.writeType(w, accountid_);
		}
		{
			if(roleId_ != 0)
				bin.ProtocolWriter.writeType(w, roleId_);
		}
		{
			if(logintime_ != 0)
				bin.ProtocolWriter.writeType(w, logintime_);
		}
		{
			if(logouttime_ != 0)
				bin.ProtocolWriter.writeType(w, logouttime_);
		}
		{
			if(firsttime_ != 0)
				bin.ProtocolWriter.writeType(w, firsttime_);
		}
		{
			if(rolefirsttime_ != 0)
				bin.ProtocolWriter.writeType(w, rolefirsttime_);
		}
		{
			if(firstserid_ != 0)
				bin.ProtocolWriter.writeType(w, firstserid_);
		}
		{
			if(serverid_ != 0)
				bin.ProtocolWriter.writeType(w, serverid_);
		}
		{
			if(mac_.Length > 0)
				bin.ProtocolWriter.writeType(w, mac_);
		}
		{
			if(idfa_.Length > 0)
				bin.ProtocolWriter.writeType(w, idfa_);
		}
		{
			if(ip_.Length > 0)
				bin.ProtocolWriter.writeType(w, ip_);
		}
		{
			if(devicetype_.Length > 0)
				bin.ProtocolWriter.writeType(w, devicetype_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out gamename_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out accountid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out logintime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out logouttime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out firsttime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rolefirsttime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out firstserid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out serverid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out mac_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out idfa_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ip_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out devicetype_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.gamename_:
			{
				{
					bin.ProtocolWriter.writeType(w, gamename_);
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfid_);
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfname_);
				}
			}
			return true;
			case (uint)FID.accountid_:
			{
				{
					bin.ProtocolWriter.writeType(w, accountid_);
				}
			}
			return true;
			case (uint)FID.roleId_:
			{
				{
					bin.ProtocolWriter.writeType(w, roleId_);
				}
			}
			return true;
			case (uint)FID.logintime_:
			{
				{
					bin.ProtocolWriter.writeType(w, logintime_);
				}
			}
			return true;
			case (uint)FID.logouttime_:
			{
				{
					bin.ProtocolWriter.writeType(w, logouttime_);
				}
			}
			return true;
			case (uint)FID.firsttime_:
			{
				{
					bin.ProtocolWriter.writeType(w, firsttime_);
				}
			}
			return true;
			case (uint)FID.rolefirsttime_:
			{
				{
					bin.ProtocolWriter.writeType(w, rolefirsttime_);
				}
			}
			return true;
			case (uint)FID.firstserid_:
			{
				{
					bin.ProtocolWriter.writeType(w, firstserid_);
				}
			}
			return true;
			case (uint)FID.serverid_:
			{
				{
					bin.ProtocolWriter.writeType(w, serverid_);
				}
			}
			return true;
			case (uint)FID.mac_:
			{
				{
					bin.ProtocolWriter.writeType(w, mac_);
				}
			}
			return true;
			case (uint)FID.idfa_:
			{
				{
					bin.ProtocolWriter.writeType(w, idfa_);
				}
			}
			return true;
			case (uint)FID.ip_:
			{
				{
					bin.ProtocolWriter.writeType(w, ip_);
				}
			}
			return true;
			case (uint)FID.devicetype_:
			{
				{
					bin.ProtocolWriter.writeType(w, devicetype_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.gamename_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out gamename_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.accountid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out accountid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.roleId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
				}
			}
			return true;
			case (uint)FID.logintime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out logintime_)) return false;
				}
			}
			return true;
			case (uint)FID.logouttime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out logouttime_)) return false;
				}
			}
			return true;
			case (uint)FID.firsttime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out firsttime_)) return false;
				}
			}
			return true;
			case (uint)FID.rolefirsttime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rolefirsttime_)) return false;
				}
			}
			return true;
			case (uint)FID.firstserid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out firstserid_)) return false;
				}
			}
			return true;
			case (uint)FID.serverid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out serverid_)) return false;
				}
			}
			return true;
			case (uint)FID.mac_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out mac_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.idfa_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out idfa_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.ip_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ip_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.devicetype_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out devicetype_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_Order
{
	public string gamename_ = "";
	public string pfid_ = "";
	public string pfname_ = "";
	public string orderid_ = "";
	public uint roleId_;
	public uint rolelv_;
	public string accountid_ = "";
	public float payment_;
	public string paytime_ = "";
	// member ids.
	public enum FID
	{
		gamename_ = 0,
		pfid_ = 1,
		pfname_ = 2,
		orderid_ = 3,
		roleId_ = 4,
		rolelv_ = 5,
		accountid_ = 6,
		payment_ = 7,
		paytime_ = 8,
		MAX = 9,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(gamename_.Length>0?true:false);
		__fm__.writeBit(pfid_.Length>0?true:false);
		__fm__.writeBit(pfname_.Length>0?true:false);
		__fm__.writeBit(orderid_.Length>0?true:false);
		__fm__.writeBit(roleId_==0?false:true);
		__fm__.writeBit(rolelv_==0?false:true);
		__fm__.writeBit(accountid_.Length>0?true:false);
		__fm__.writeBit(payment_==0?false:true);
		__fm__.writeBit(paytime_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(gamename_.Length > 0)
				bin.ProtocolWriter.writeType(w, gamename_);
		}
		{
			if(pfid_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfid_);
		}
		{
			if(pfname_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfname_);
		}
		{
			if(orderid_.Length > 0)
				bin.ProtocolWriter.writeType(w, orderid_);
		}
		{
			if(roleId_ != 0)
				bin.ProtocolWriter.writeType(w, roleId_);
		}
		{
			if(rolelv_ != 0)
				bin.ProtocolWriter.writeType(w, rolelv_);
		}
		{
			if(accountid_.Length > 0)
				bin.ProtocolWriter.writeType(w, accountid_);
		}
		{
			if(payment_ != 0)
				bin.ProtocolWriter.writeType(w, payment_);
		}
		{
			if(paytime_.Length > 0)
				bin.ProtocolWriter.writeType(w, paytime_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out gamename_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out orderid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rolelv_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out accountid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out payment_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out paytime_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.gamename_:
			{
				{
					bin.ProtocolWriter.writeType(w, gamename_);
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfid_);
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfname_);
				}
			}
			return true;
			case (uint)FID.orderid_:
			{
				{
					bin.ProtocolWriter.writeType(w, orderid_);
				}
			}
			return true;
			case (uint)FID.roleId_:
			{
				{
					bin.ProtocolWriter.writeType(w, roleId_);
				}
			}
			return true;
			case (uint)FID.rolelv_:
			{
				{
					bin.ProtocolWriter.writeType(w, rolelv_);
				}
			}
			return true;
			case (uint)FID.accountid_:
			{
				{
					bin.ProtocolWriter.writeType(w, accountid_);
				}
			}
			return true;
			case (uint)FID.payment_:
			{
				{
					bin.ProtocolWriter.writeType(w, payment_);
				}
			}
			return true;
			case (uint)FID.paytime_:
			{
				{
					bin.ProtocolWriter.writeType(w, paytime_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.gamename_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out gamename_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.orderid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out orderid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.roleId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roleId_)) return false;
				}
			}
			return true;
			case (uint)FID.rolelv_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rolelv_)) return false;
				}
			}
			return true;
			case (uint)FID.accountid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out accountid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.payment_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out payment_)) return false;
				}
			}
			return true;
			case (uint)FID.paytime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out paytime_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_LogUIBehavior
{
	public uint accountGuid_;
	public string accountName_ = "";
	public uint playerGuid_;
	public string playerName_ = "";
	public string clientIp_ = "";
	public UIBehaviorType type_;
	// member ids.
	public enum FID
	{
		accountGuid_ = 0,
		accountName_ = 1,
		playerGuid_ = 2,
		playerName_ = 3,
		clientIp_ = 4,
		type_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(accountGuid_==0?false:true);
		__fm__.writeBit(accountName_.Length>0?true:false);
		__fm__.writeBit(playerGuid_==0?false:true);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(clientIp_.Length>0?true:false);
		__fm__.writeBit(type_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(accountGuid_ != 0)
				bin.ProtocolWriter.writeType(w, accountGuid_);
		}
		{
			if(accountName_.Length > 0)
				bin.ProtocolWriter.writeType(w, accountName_);
		}
		{
			if(playerGuid_ != 0)
				bin.ProtocolWriter.writeType(w, playerGuid_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(clientIp_.Length > 0)
				bin.ProtocolWriter.writeType(w, clientIp_);
		}
		{
			byte __e__ = (byte)type_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out accountGuid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out accountName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerGuid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out clientIp_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
				type_ = (UIBehaviorType)__e__;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.accountGuid_:
			{
				{
					bin.ProtocolWriter.writeType(w, accountGuid_);
				}
			}
			return true;
			case (uint)FID.accountName_:
			{
				{
					bin.ProtocolWriter.writeType(w, accountName_);
				}
			}
			return true;
			case (uint)FID.playerGuid_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerGuid_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.clientIp_:
			{
				{
					bin.ProtocolWriter.writeType(w, clientIp_);
				}
			}
			return true;
			case (uint)FID.type_:
			{
				{
					byte __e__ = (byte)type_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.accountGuid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out accountGuid_)) return false;
				}
			}
			return true;
			case (uint)FID.accountName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out accountName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.playerGuid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerGuid_)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.clientIp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out clientIp_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.type_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 22) return false;
					type_ = (UIBehaviorType)__e__;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_LogRole
{
	public string gamename_ = "";
	public string pfid_ = "";
	public string pfname_ = "";
	public uint roleid_;
	public ulong cachetime_;
	public string accountid_ = "";
	public sbyte serverid_;
	public string servername_ = "";
	public sbyte firstserid_;
	public ulong rolefirsttime_;
	public ulong rolelasttime_;
	public sbyte rolelv_;
	public long gold_;
	public long diamond_;
	public long magicgold_;
	public sbyte vip_;
	public long ce_;
	// member ids.
	public enum FID
	{
		gamename_ = 0,
		pfid_ = 1,
		pfname_ = 2,
		roleid_ = 3,
		cachetime_ = 4,
		accountid_ = 5,
		serverid_ = 6,
		servername_ = 7,
		firstserid_ = 8,
		rolefirsttime_ = 9,
		rolelasttime_ = 10,
		rolelv_ = 11,
		gold_ = 12,
		diamond_ = 13,
		magicgold_ = 14,
		vip_ = 15,
		ce_ = 16,
		MAX = 17,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[3]);
		__fm__.writeBit(gamename_.Length>0?true:false);
		__fm__.writeBit(pfid_.Length>0?true:false);
		__fm__.writeBit(pfname_.Length>0?true:false);
		__fm__.writeBit(roleid_==0?false:true);
		__fm__.writeBit(cachetime_==0?false:true);
		__fm__.writeBit(accountid_.Length>0?true:false);
		__fm__.writeBit(serverid_==0?false:true);
		__fm__.writeBit(servername_.Length>0?true:false);
		__fm__.writeBit(firstserid_==0?false:true);
		__fm__.writeBit(rolefirsttime_==0?false:true);
		__fm__.writeBit(rolelasttime_==0?false:true);
		__fm__.writeBit(rolelv_==0?false:true);
		__fm__.writeBit(gold_==0?false:true);
		__fm__.writeBit(diamond_==0?false:true);
		__fm__.writeBit(magicgold_==0?false:true);
		__fm__.writeBit(vip_==0?false:true);
		__fm__.writeBit(ce_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(gamename_.Length > 0)
				bin.ProtocolWriter.writeType(w, gamename_);
		}
		{
			if(pfid_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfid_);
		}
		{
			if(pfname_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfname_);
		}
		{
			if(roleid_ != 0)
				bin.ProtocolWriter.writeType(w, roleid_);
		}
		{
			if(cachetime_ != 0)
				bin.ProtocolWriter.writeType(w, cachetime_);
		}
		{
			if(accountid_.Length > 0)
				bin.ProtocolWriter.writeType(w, accountid_);
		}
		{
			if(serverid_ != 0)
				bin.ProtocolWriter.writeType(w, serverid_);
		}
		{
			if(servername_.Length > 0)
				bin.ProtocolWriter.writeType(w, servername_);
		}
		{
			if(firstserid_ != 0)
				bin.ProtocolWriter.writeType(w, firstserid_);
		}
		{
			if(rolefirsttime_ != 0)
				bin.ProtocolWriter.writeType(w, rolefirsttime_);
		}
		{
			if(rolelasttime_ != 0)
				bin.ProtocolWriter.writeType(w, rolelasttime_);
		}
		{
			if(rolelv_ != 0)
				bin.ProtocolWriter.writeType(w, rolelv_);
		}
		{
			if(gold_ != 0)
				bin.ProtocolWriter.writeType(w, gold_);
		}
		{
			if(diamond_ != 0)
				bin.ProtocolWriter.writeType(w, diamond_);
		}
		{
			if(magicgold_ != 0)
				bin.ProtocolWriter.writeType(w, magicgold_);
		}
		{
			if(vip_ != 0)
				bin.ProtocolWriter.writeType(w, vip_);
		}
		{
			if(ce_ != 0)
				bin.ProtocolWriter.writeType(w, ce_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 3)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out gamename_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out roleid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out cachetime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out accountid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out serverid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out servername_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out firstserid_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rolefirsttime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rolelasttime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rolelv_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out gold_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out magicgold_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out vip_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out ce_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.gamename_:
			{
				{
					bin.ProtocolWriter.writeType(w, gamename_);
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfid_);
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfname_);
				}
			}
			return true;
			case (uint)FID.roleid_:
			{
				{
					bin.ProtocolWriter.writeType(w, roleid_);
				}
			}
			return true;
			case (uint)FID.cachetime_:
			{
				{
					bin.ProtocolWriter.writeType(w, cachetime_);
				}
			}
			return true;
			case (uint)FID.accountid_:
			{
				{
					bin.ProtocolWriter.writeType(w, accountid_);
				}
			}
			return true;
			case (uint)FID.serverid_:
			{
				{
					bin.ProtocolWriter.writeType(w, serverid_);
				}
			}
			return true;
			case (uint)FID.servername_:
			{
				{
					bin.ProtocolWriter.writeType(w, servername_);
				}
			}
			return true;
			case (uint)FID.firstserid_:
			{
				{
					bin.ProtocolWriter.writeType(w, firstserid_);
				}
			}
			return true;
			case (uint)FID.rolefirsttime_:
			{
				{
					bin.ProtocolWriter.writeType(w, rolefirsttime_);
				}
			}
			return true;
			case (uint)FID.rolelasttime_:
			{
				{
					bin.ProtocolWriter.writeType(w, rolelasttime_);
				}
			}
			return true;
			case (uint)FID.rolelv_:
			{
				{
					bin.ProtocolWriter.writeType(w, rolelv_);
				}
			}
			return true;
			case (uint)FID.gold_:
			{
				{
					bin.ProtocolWriter.writeType(w, gold_);
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					bin.ProtocolWriter.writeType(w, diamond_);
				}
			}
			return true;
			case (uint)FID.magicgold_:
			{
				{
					bin.ProtocolWriter.writeType(w, magicgold_);
				}
			}
			return true;
			case (uint)FID.vip_:
			{
				{
					bin.ProtocolWriter.writeType(w, vip_);
				}
			}
			return true;
			case (uint)FID.ce_:
			{
				{
					bin.ProtocolWriter.writeType(w, ce_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.gamename_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out gamename_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfname_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfname_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.roleid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out roleid_)) return false;
				}
			}
			return true;
			case (uint)FID.cachetime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out cachetime_)) return false;
				}
			}
			return true;
			case (uint)FID.accountid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out accountid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.serverid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out serverid_)) return false;
				}
			}
			return true;
			case (uint)FID.servername_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out servername_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.firstserid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out firstserid_)) return false;
				}
			}
			return true;
			case (uint)FID.rolefirsttime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rolefirsttime_)) return false;
				}
			}
			return true;
			case (uint)FID.rolelasttime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rolelasttime_)) return false;
				}
			}
			return true;
			case (uint)FID.rolelv_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rolelv_)) return false;
				}
			}
			return true;
			case (uint)FID.gold_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out gold_)) return false;
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
				}
			}
			return true;
			case (uint)FID.magicgold_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out magicgold_)) return false;
				}
			}
			return true;
			case (uint)FID.vip_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out vip_)) return false;
				}
			}
			return true;
			case (uint)FID.ce_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out ce_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_LogProduceTrack
{
	public ulong timestamp_;
	public int from_;
	public uint playerId_;
	public string playerName_ = "";
	public uint itemId_;
	public uint itemInstId_;
	public int itemStack_;
	public int diamond_;
	public int money_;
	public int exp_;
	public int magic_;
	// member ids.
	public enum FID
	{
		timestamp_ = 0,
		from_ = 1,
		playerId_ = 2,
		playerName_ = 3,
		itemId_ = 4,
		itemInstId_ = 5,
		itemStack_ = 6,
		diamond_ = 7,
		money_ = 8,
		exp_ = 9,
		magic_ = 10,
		MAX = 11,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[2]);
		__fm__.writeBit(timestamp_==0?false:true);
		__fm__.writeBit(from_==0?false:true);
		__fm__.writeBit(playerId_==0?false:true);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(itemId_==0?false:true);
		__fm__.writeBit(itemInstId_==0?false:true);
		__fm__.writeBit(itemStack_==0?false:true);
		__fm__.writeBit(diamond_==0?false:true);
		__fm__.writeBit(money_==0?false:true);
		__fm__.writeBit(exp_==0?false:true);
		__fm__.writeBit(magic_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(timestamp_ != 0)
				bin.ProtocolWriter.writeType(w, timestamp_);
		}
		{
			if(from_ != 0)
				bin.ProtocolWriter.writeType(w, from_);
		}
		{
			if(playerId_ != 0)
				bin.ProtocolWriter.writeType(w, playerId_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(itemId_ != 0)
				bin.ProtocolWriter.writeType(w, itemId_);
		}
		{
			if(itemInstId_ != 0)
				bin.ProtocolWriter.writeType(w, itemInstId_);
		}
		{
			if(itemStack_ != 0)
				bin.ProtocolWriter.writeType(w, itemStack_);
		}
		{
			if(diamond_ != 0)
				bin.ProtocolWriter.writeType(w, diamond_);
		}
		{
			if(money_ != 0)
				bin.ProtocolWriter.writeType(w, money_);
		}
		{
			if(exp_ != 0)
				bin.ProtocolWriter.writeType(w, exp_);
		}
		{
			if(magic_ != 0)
				bin.ProtocolWriter.writeType(w, magic_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 2)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out timestamp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out from_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemInstId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out itemStack_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out money_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out exp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out magic_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.timestamp_:
			{
				{
					bin.ProtocolWriter.writeType(w, timestamp_);
				}
			}
			return true;
			case (uint)FID.from_:
			{
				{
					bin.ProtocolWriter.writeType(w, from_);
				}
			}
			return true;
			case (uint)FID.playerId_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerId_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemId_);
				}
			}
			return true;
			case (uint)FID.itemInstId_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemInstId_);
				}
			}
			return true;
			case (uint)FID.itemStack_:
			{
				{
					bin.ProtocolWriter.writeType(w, itemStack_);
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					bin.ProtocolWriter.writeType(w, diamond_);
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					bin.ProtocolWriter.writeType(w, money_);
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					bin.ProtocolWriter.writeType(w, exp_);
				}
			}
			return true;
			case (uint)FID.magic_:
			{
				{
					bin.ProtocolWriter.writeType(w, magic_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.timestamp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out timestamp_)) return false;
				}
			}
			return true;
			case (uint)FID.from_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out from_)) return false;
				}
			}
			return true;
			case (uint)FID.playerId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.itemId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemId_)) return false;
				}
			}
			return true;
			case (uint)FID.itemInstId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemInstId_)) return false;
				}
			}
			return true;
			case (uint)FID.itemStack_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out itemStack_)) return false;
				}
			}
			return true;
			case (uint)FID.diamond_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out diamond_)) return false;
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out money_)) return false;
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out exp_)) return false;
				}
			}
			return true;
			case (uint)FID.magic_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out magic_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Exam
{
	public byte questionIndex_;
	public byte rightNum_;
	public byte errorNum_;
	public uint money_;
	public uint exp_;
	public uint[] questions_ = new uint[0];
	// member ids.
	public enum FID
	{
		questionIndex_ = 0,
		rightNum_ = 1,
		errorNum_ = 2,
		money_ = 3,
		exp_ = 4,
		questions_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(questionIndex_==0?false:true);
		__fm__.writeBit(rightNum_==0?false:true);
		__fm__.writeBit(errorNum_==0?false:true);
		__fm__.writeBit(money_==0?false:true);
		__fm__.writeBit(exp_==0?false:true);
		__fm__.writeBit((questions_==null)?false:(questions_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(questionIndex_ != 0)
				bin.ProtocolWriter.writeType(w, questionIndex_);
		}
		{
			if(rightNum_ != 0)
				bin.ProtocolWriter.writeType(w, rightNum_);
		}
		{
			if(errorNum_ != 0)
				bin.ProtocolWriter.writeType(w, errorNum_);
		}
		{
			if(money_ != 0)
				bin.ProtocolWriter.writeType(w, money_);
		}
		{
			if(exp_ != 0)
				bin.ProtocolWriter.writeType(w, exp_);
		}
		{
			if(questions_ != null && questions_.Length > 0)
			{
				uint __len__ = (questions_ == null)?0:(uint)questions_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, questions_[i]);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out questionIndex_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out rightNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out errorNum_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out money_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out exp_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				questions_ = new uint[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out questions_[i])) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.questionIndex_:
			{
				{
					bin.ProtocolWriter.writeType(w, questionIndex_);
				}
			}
			return true;
			case (uint)FID.rightNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, rightNum_);
				}
			}
			return true;
			case (uint)FID.errorNum_:
			{
				{
					bin.ProtocolWriter.writeType(w, errorNum_);
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					bin.ProtocolWriter.writeType(w, money_);
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					bin.ProtocolWriter.writeType(w, exp_);
				}
			}
			return true;
			case (uint)FID.questions_:
			{
				{
					uint __len__ = (questions_ == null)?0:(uint)questions_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, questions_[i]);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.questionIndex_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out questionIndex_)) return false;
				}
			}
			return true;
			case (uint)FID.rightNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out rightNum_)) return false;
				}
			}
			return true;
			case (uint)FID.errorNum_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out errorNum_)) return false;
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out money_)) return false;
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out exp_)) return false;
				}
			}
			return true;
			case (uint)FID.questions_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					questions_ = new uint[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out questions_[i])) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Answer
{
	public byte questionIndex_;
	public uint money_;
	public uint exp_;
	public bool isRigth_;
	// member ids.
	public enum FID
	{
		questionIndex_ = 0,
		money_ = 1,
		exp_ = 2,
		isRigth_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(questionIndex_==0?false:true);
		__fm__.writeBit(money_==0?false:true);
		__fm__.writeBit(exp_==0?false:true);
		__fm__.writeBit(isRigth_);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(questionIndex_ != 0)
				bin.ProtocolWriter.writeType(w, questionIndex_);
		}
		{
			if(money_ != 0)
				bin.ProtocolWriter.writeType(w, money_);
		}
		{
			if(exp_ != 0)
				bin.ProtocolWriter.writeType(w, exp_);
		}
		{
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out questionIndex_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out money_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out exp_)) return false;
			}
		}
		{
			isRigth_ = __fm__.readBit();
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.questionIndex_:
			{
				{
					bin.ProtocolWriter.writeType(w, questionIndex_);
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					bin.ProtocolWriter.writeType(w, money_);
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					bin.ProtocolWriter.writeType(w, exp_);
				}
			}
			return true;
			case (uint)FID.isRigth_:
			{
				{
					bin.ProtocolWriter.writeType(w, isRigth_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.questionIndex_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out questionIndex_)) return false;
				}
			}
			return true;
			case (uint)FID.money_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out money_)) return false;
				}
			}
			return true;
			case (uint)FID.exp_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out exp_)) return false;
				}
			}
			return true;
			case (uint)FID.isRigth_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out isRigth_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Wishing
{
	public WishType wt_;
	public string wish_ = "";
	// member ids.
	public enum FID
	{
		wt_ = 0,
		wish_ = 1,
		MAX = 2,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(wt_==0?false:true);
		__fm__.writeBit(wish_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)wt_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(wish_.Length > 0)
				bin.ProtocolWriter.writeType(w, wish_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 6) return false;
				wt_ = (WishType)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out wish_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.wt_:
			{
				{
					byte __e__ = (byte)wt_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.wish_:
			{
				{
					bin.ProtocolWriter.writeType(w, wish_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.wt_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 6) return false;
					wt_ = (WishType)__e__;
				}
			}
			return true;
			case (uint)FID.wish_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out wish_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_Wish
{
	public uint playerInstId_;
	public string playerName_ = "";
	public string wish_ = "";
	// member ids.
	public enum FID
	{
		playerInstId_ = 0,
		playerName_ = 1,
		wish_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(playerInstId_==0?false:true);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(wish_.Length>0?true:false);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(playerInstId_ != 0)
				bin.ProtocolWriter.writeType(w, playerInstId_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(wish_.Length > 0)
				bin.ProtocolWriter.writeType(w, wish_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerInstId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out wish_, 65535)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.playerInstId_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerInstId_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.wish_:
			{
				{
					bin.ProtocolWriter.writeType(w, wish_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.playerInstId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerInstId_)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.wish_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out wish_, 65535)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_GmtOrder
{
	public int shopId_;
	public string orderId_ = "";
	public float payment_;
	// member ids.
	public enum FID
	{
		shopId_ = 0,
		orderId_ = 1,
		payment_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(shopId_==0?false:true);
		__fm__.writeBit(orderId_.Length>0?true:false);
		__fm__.writeBit(payment_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(shopId_ != 0)
				bin.ProtocolWriter.writeType(w, shopId_);
		}
		{
			if(orderId_.Length > 0)
				bin.ProtocolWriter.writeType(w, orderId_);
		}
		{
			if(payment_ != 0)
				bin.ProtocolWriter.writeType(w, payment_);
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out shopId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out orderId_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out payment_)) return false;
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.shopId_:
			{
				{
					bin.ProtocolWriter.writeType(w, shopId_);
				}
			}
			return true;
			case (uint)FID.orderId_:
			{
				{
					bin.ProtocolWriter.writeType(w, orderId_);
				}
			}
			return true;
			case (uint)FID.payment_:
			{
				{
					bin.ProtocolWriter.writeType(w, payment_);
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.shopId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out shopId_)) return false;
				}
			}
			return true;
			case (uint)FID.orderId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out orderId_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.payment_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out payment_)) return false;
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_KeyContent
{
	public string giftname_ = "";
	public string pfid_ = "";
	public string key_ = "";
	public string playerName_ = "";
	public long usetime_;
	public COM_GiftItem[] items_ = new COM_GiftItem[0];
	// member ids.
	public enum FID
	{
		giftname_ = 0,
		pfid_ = 1,
		key_ = 2,
		playerName_ = 3,
		usetime_ = 4,
		items_ = 5,
		MAX = 6,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(giftname_.Length>0?true:false);
		__fm__.writeBit(pfid_.Length>0?true:false);
		__fm__.writeBit(key_.Length>0?true:false);
		__fm__.writeBit(playerName_.Length>0?true:false);
		__fm__.writeBit(usetime_==0?false:true);
		__fm__.writeBit((items_==null)?false:(items_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(giftname_.Length > 0)
				bin.ProtocolWriter.writeType(w, giftname_);
		}
		{
			if(pfid_.Length > 0)
				bin.ProtocolWriter.writeType(w, pfid_);
		}
		{
			if(key_.Length > 0)
				bin.ProtocolWriter.writeType(w, key_);
		}
		{
			if(playerName_.Length > 0)
				bin.ProtocolWriter.writeType(w, playerName_);
		}
		{
			if(usetime_ != 0)
				bin.ProtocolWriter.writeType(w, usetime_);
		}
		{
			if(items_ != null && items_.Length > 0)
			{
				uint __len__ = (items_ == null)?0:(uint)items_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					items_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out giftname_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out key_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out usetime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				items_ = new COM_GiftItem[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					items_[i] = new COM_GiftItem();
					if(!items_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.giftname_:
			{
				{
					bin.ProtocolWriter.writeType(w, giftname_);
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					bin.ProtocolWriter.writeType(w, pfid_);
				}
			}
			return true;
			case (uint)FID.key_:
			{
				{
					bin.ProtocolWriter.writeType(w, key_);
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerName_);
				}
			}
			return true;
			case (uint)FID.usetime_:
			{
				{
					bin.ProtocolWriter.writeType(w, usetime_);
				}
			}
			return true;
			case (uint)FID.items_:
			{
				{
					uint __len__ = (items_ == null)?0:(uint)items_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						items_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.giftname_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out giftname_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.pfid_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out pfid_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.key_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out key_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.playerName_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerName_, 65535)) return false;
				}
			}
			return true;
			case (uint)FID.usetime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out usetime_)) return false;
				}
			}
			return true;
			case (uint)FID.items_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					items_ = new COM_GiftItem[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						items_[i] = new COM_GiftItem();
						if(!items_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class COM_EmployeeQuestInst
{
	public EmployeeQuestStatus status_;
	public int questId_;
	public int timeout_;
	public int[] usedEmployees_ = new int[0];
	// member ids.
	public enum FID
	{
		status_ = 0,
		questId_ = 1,
		timeout_ = 2,
		usedEmployees_ = 3,
		MAX = 4,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(status_==0?false:true);
		__fm__.writeBit(questId_==0?false:true);
		__fm__.writeBit(timeout_==0?false:true);
		__fm__.writeBit((usedEmployees_==null)?false:(usedEmployees_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			byte __e__ = (byte)status_;
			if(__e__ != 0)
				bin.ProtocolWriter.writeType(w, __e__);
		}
		{
			if(questId_ != 0)
				bin.ProtocolWriter.writeType(w, questId_);
		}
		{
			if(timeout_ != 0)
				bin.ProtocolWriter.writeType(w, timeout_);
		}
		{
			if(usedEmployees_ != null && usedEmployees_.Length > 0)
			{
				uint __len__ = (usedEmployees_ == null)?0:(uint)usedEmployees_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, usedEmployees_[i]);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				byte __e__ = 0;
				if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 3) return false;
				status_ = (EmployeeQuestStatus)__e__;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out questId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out timeout_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				usedEmployees_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out usedEmployees_[i])) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.status_:
			{
				{
					byte __e__ = (byte)status_;
					bin.ProtocolWriter.writeType(w, __e__);
				}
			}
			return true;
			case (uint)FID.questId_:
			{
				{
					bin.ProtocolWriter.writeType(w, questId_);
				}
			}
			return true;
			case (uint)FID.timeout_:
			{
				{
					bin.ProtocolWriter.writeType(w, timeout_);
				}
			}
			return true;
			case (uint)FID.usedEmployees_:
			{
				{
					uint __len__ = (usedEmployees_ == null)?0:(uint)usedEmployees_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, usedEmployees_[i]);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.status_:
			{
				{
					byte __e__ = 0;
					if(!bin.ProtocolReader.readType(r, out __e__) || __e__ >= 3) return false;
					status_ = (EmployeeQuestStatus)__e__;
				}
			}
			return true;
			case (uint)FID.questId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out questId_)) return false;
				}
			}
			return true;
			case (uint)FID.timeout_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out timeout_)) return false;
				}
			}
			return true;
			case (uint)FID.usedEmployees_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					usedEmployees_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out usedEmployees_[i])) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_EmployeeQuestInst : COM_EmployeeQuestInst
{
	public long doTime_;
	public long refreshTime_;
	// member ids.
	public enum FID
	{
		doTime_ = 4,
		refreshTime_ = 5,
		MAX = 6,
	}
	public new void serialize(bin.IWriter w)
	{
		base.serialize(w);
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(doTime_==0?false:true);
		__fm__.writeBit(refreshTime_==0?false:true);
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(doTime_ != 0)
				bin.ProtocolWriter.writeType(w, doTime_);
		}
		{
			if(refreshTime_ != 0)
				bin.ProtocolWriter.writeType(w, refreshTime_);
		}
	}
	public new bool deserialize(bin.IReader r)
	{
		base.deserialize(r);
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out doTime_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out refreshTime_)) return false;
			}
		}
		return true;
	}
	public new bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.doTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, doTime_);
				}
			}
			return true;
			case (uint)FID.refreshTime_:
			{
				{
					bin.ProtocolWriter.writeType(w, refreshTime_);
				}
			}
			return true;
		}
		return base.serializeField(fid, w);
	}
	public new bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.doTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out doTime_)) return false;
				}
			}
			return true;
			case (uint)FID.refreshTime_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out refreshTime_)) return false;
				}
			}
			return true;
		}
		return base.deserializeField(fid, r);
	}
}
//=============================================================
public class SGE_PlayerEmployeeQuestArray
{
	public SGE_EmployeeQuestInst[] value_ = new SGE_EmployeeQuestInst[0];
	// member ids.
	public enum FID
	{
		value_ = 0,
		MAX = 1,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit((value_==null)?false:(value_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(value_ != null && value_.Length > 0)
			{
				uint __len__ = (value_ == null)?0:(uint)value_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					value_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				value_ = new SGE_EmployeeQuestInst[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					value_[i] = new SGE_EmployeeQuestInst();
					if(!value_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.value_:
			{
				{
					uint __len__ = (value_ == null)?0:(uint)value_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						value_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.value_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					value_ = new SGE_EmployeeQuestInst[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						value_[i] = new SGE_EmployeeQuestInst();
						if(!value_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
//=============================================================
public class SGE_PlayerEmployeeQuest
{
	public int playerId_;
	public int[] usedEmployees_ = new int[0];
	public SGE_PlayerEmployeeQuestArray[] quests_ = new SGE_PlayerEmployeeQuestArray[0];
	// member ids.
	public enum FID
	{
		playerId_ = 0,
		usedEmployees_ = 1,
		quests_ = 2,
		MAX = 3,
	}
	public  void serialize(bin.IWriter w)
	{
		bin.FieldMask __fm__ = new bin.FieldMask(new byte[1]);
		__fm__.writeBit(playerId_==0?false:true);
		__fm__.writeBit((usedEmployees_==null)?false:(usedEmployees_.Length>0?true:false));
		__fm__.writeBit((quests_==null)?false:(quests_.Length>0?true:false));
		bin.ProtocolWriter.writeType(w, __fm__.getBits());
		{
			if(playerId_ != 0)
				bin.ProtocolWriter.writeType(w, playerId_);
		}
		{
			if(usedEmployees_ != null && usedEmployees_.Length > 0)
			{
				uint __len__ = (usedEmployees_ == null)?0:(uint)usedEmployees_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					bin.ProtocolWriter.writeType(w, usedEmployees_[i]);
				}
			}
		}
		{
			if(quests_ != null && quests_.Length > 0)
			{
				uint __len__ = (quests_ == null)?0:(uint)quests_.Length;
				bin.ProtocolWriter.writeDynSize(w, __len__);
				for(uint i = 0; i < __len__; i++)
				{
					quests_[i].serialize(w);
				}
			}
		}
	}
	public  bool deserialize(bin.IReader r)
	{
		byte[] __fmbits__;
		if(!bin.ProtocolReader.readType(r, out __fmbits__, 1)) return false;
		bin.FieldMask __fm__ = new bin.FieldMask(__fmbits__);
		{
			if(__fm__.readBit())
			{
				if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				usedEmployees_ = new int[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					if(!bin.ProtocolReader.readType(r, out usedEmployees_[i])) return false;
				}
			}
		}
		{
			if(__fm__.readBit())
			{
				uint __len__;
				if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
				quests_ = new SGE_PlayerEmployeeQuestArray[__len__];
				for(uint i = 0; i < __len__; i++)
				{
					quests_[i] = new SGE_PlayerEmployeeQuestArray();
					if(!quests_[i].deserialize(r)) return false;
				}
			}
		}
		return true;
	}
	public  bool serializeField(uint fid, bin.IWriter w)
	{
		switch(fid)
		{
			case (uint)FID.playerId_:
			{
				{
					bin.ProtocolWriter.writeType(w, playerId_);
				}
			}
			return true;
			case (uint)FID.usedEmployees_:
			{
				{
					uint __len__ = (usedEmployees_ == null)?0:(uint)usedEmployees_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						bin.ProtocolWriter.writeType(w, usedEmployees_[i]);
					}
				}
			}
			return true;
			case (uint)FID.quests_:
			{
				{
					uint __len__ = (quests_ == null)?0:(uint)quests_.Length;
					bin.ProtocolWriter.writeDynSize(w, __len__);
					for(uint i = 0; i < __len__; i++)
					{
						quests_[i].serialize(w);
					}
				}
			}
			return true;
		}
		return false;
	}
	public  bool deserializeField(uint fid, bin.IReader r)
	{
		switch(fid)
		{
			case (uint)FID.playerId_:
			{
				{
					if(!bin.ProtocolReader.readType(r, out playerId_)) return false;
				}
			}
			return true;
			case (uint)FID.usedEmployees_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					usedEmployees_ = new int[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						if(!bin.ProtocolReader.readType(r, out usedEmployees_[i])) return false;
					}
				}
			}
			return true;
			case (uint)FID.quests_:
			{
				{
					uint __len__;
					if(!bin.ProtocolReader.readDynSize(r, out __len__) || __len__ > 65535) return false;
					quests_ = new SGE_PlayerEmployeeQuestArray[__len__];
					for(uint i = 0; i < __len__; i++)
					{
						quests_[i] = new SGE_PlayerEmployeeQuestArray();
						if(!quests_[i].deserialize(r)) return false;
					}
				}
			}
			return true;
		}
		return false;
	}
}
